

HI-TECH Software PICC-18 Macro Assembler V9.51PL2
                                                       Mon Dec 07 22:12:02 2009


     1                           	processor	18F252
     2                           	opt	pw 80
     3                           	psect	text,global,reloc=2,class=CODE,delta=1
     4                           	psect	const,global,class=CODE,delta=1
     5                           	psect	temp,global,ovrld,common,class=COMRAM,spa
      +                          ce=1,delta=1
     6                           	psect	intsave_regs,global,class=BIGRAM,space=1,
      +                          delta=1
     7  000000                     
     8  000000                     
     9  000000                     
    10  000000                     
    11  000000                     
    12  000000                     
    13  000000                     
    14  000000                     
    15  000000                     
    16  000000                     
    17  000000                     
    18  000000                     
    19  000000                     
    20  000000                     
    21  000000                     
    22  000000                     
    23  000000                     
    24  000000                     
    25  000000                     
    26  000000                     
    27  000000                     
    28  000000                     
    29  000000                     
    30  000000                     
    31  000000                     
    32  000000                     
    33  000000                     
    34  000000                     
    35  000000                     
    36  000000                     
    37  000000                     
    38  000000                     
    39  000000                     
    40  000000                     
    41  000000                     
    42  000000                     
    43  000000                     
    44  000000                     
    45  000000                     
    46  000000                     
    47  000000                     
    48  000000                     
    49  000000                     
    50  000000                     
    51  000000                     
    52  000000                     
    53  000000                     
    54  000000                     
    55  000000                     
    56  000000                     
    57  000000                     
    58  000000                     
    59  000000                     
    60  000000                     
    61  000000                     
    62  000000                     
    63  000000                     
    64  000000                     
    65  000000                     
    66  000000                     
    67  000000                     
    68  000000                     
    69  000000                     
    70  000000                     
    71  000000                     
    72  000000                     
    73  000000                     
    74  000000                     
    75  000000                     
    76  000000                     
    77  000000                     
    78  000000                     
    79  000000                     
    80  000000                     
    81  000000                     
    82  000000                     
    83  000000                     
    84  000000                     
    85  000000                     
    86  000000                     
    87  000000                     
    88  000000                     
    89  000000                     
    90  000000                     
    91  000000                     
    92  000000                     
    93  000000                     
    94  000000                     
    95  000000                     
    96                           
    97                           	psect	text
    98                           ;pic18fxx2.h: 21: static volatile near unsigned 
      +                          char TOSU @ 0xFFF;
    99                           ;pic18fxx2.h: 22: static volatile near unsigned 
      +                          char TOSH @ 0xFFE;
   100                           ;pic18fxx2.h: 23: static volatile near unsigned 
      +                          char TOSL @ 0xFFD;
   101                           ;pic18fxx2.h: 24: static volatile near unsigned 
      +                          char STKPTR @ 0xFFC;
   102                           ;pic18fxx2.h: 25: static volatile near unsigned 
      +                          char PCLATU @ 0xFFB;
   103                           ;pic18fxx2.h: 26: static volatile near unsigned 
      +                          char PCLATH @ 0xFFA;
   104                           ;pic18fxx2.h: 27: static volatile near unsigned 
      +                          char PCL @ 0xFF9;
   105                           ;pic18fxx2.h: 28: static volatile far unsigned c
      +                          har * TBLPTR @ 0xFF6;
   106                           ;pic18fxx2.h: 29: static volatile near unsigned 
      +                          char TBLPTRU @ 0xFF8;
   107                           ;pic18fxx2.h: 30: static volatile near unsigned 
      +                          char TBLPTRH @ 0xFF7;
   108                           ;pic18fxx2.h: 31: static volatile near unsigned 
      +                          char TBLPTRL @ 0xFF6;
   109                           ;pic18fxx2.h: 32: static volatile near unsigned 
      +                          char TABLAT @ 0xFF5;
   110                           ;pic18fxx2.h: 33: static volatile near unsigned 
      +                          char PRODH @ 0xFF4;
   111                           ;pic18fxx2.h: 34: static volatile near unsigned 
      +                          char PRODL @ 0xFF3;
   112                           ;pic18fxx2.h: 35: static volatile near unsigned 
      +                          char INTCON @ 0xFF2;
   113                           ;pic18fxx2.h: 36: static near unsigned char INTC
      +                          ON2 @ 0xFF1;
   114                           ;pic18fxx2.h: 37: static volatile near unsigned 
      +                          char INTCON3 @ 0xFF0;
   115                           ;pic18fxx2.h: 38: static volatile near unsigned 
      +                          char INDF0 @ 0xFEF;
   116                           ;pic18fxx2.h: 39: static volatile near unsigned 
      +                          char POSTINC0 @ 0xFEE;
   117                           ;pic18fxx2.h: 40: static volatile near unsigned 
      +                          char POSTDEC0 @ 0xFED;
   118                           ;pic18fxx2.h: 41: static volatile near unsigned 
      +                          char PREINC0 @ 0xFEC;
   119                           ;pic18fxx2.h: 42: static volatile near unsigned 
      +                          char PLUSW0 @ 0xFEB;
   120                           ;pic18fxx2.h: 43: static volatile near unsigned 
      +                          char FSR0H @ 0xFEA;
   121                           ;pic18fxx2.h: 44: static volatile near unsigned 
      +                          char FSR0L @ 0xFE9;
   122                           ;pic18fxx2.h: 45: static volatile near unsigned 
      +                          char WREG @ 0xFE8;
   123                           ;pic18fxx2.h: 46: static volatile near unsigned 
      +                          char INDF1 @ 0xFE7;
   124                           ;pic18fxx2.h: 47: static volatile near unsigned 
      +                          char POSTINC1 @ 0xFE6;
   125                           ;pic18fxx2.h: 48: static volatile near unsigned 
      +                          char POSTDEC1 @ 0xFE5;
   126                           ;pic18fxx2.h: 49: static volatile near unsigned 
      +                          char PREINC1 @ 0xFE4;
   127                           ;pic18fxx2.h: 50: static volatile near unsigned 
      +                          char PLUSW1 @ 0xFE3;
   128                           ;pic18fxx2.h: 51: static volatile near unsigned 
      +                          char FSR1H @ 0xFE2;
   129                           ;pic18fxx2.h: 52: static volatile near unsigned 
      +                          char FSR1L @ 0xFE1;
   130                           ;pic18fxx2.h: 53: static near unsigned char BSR 
      +                          @ 0xFE0;
   131                           ;pic18fxx2.h: 54: static volatile near unsigned 
      +                          char INDF2 @ 0xFDF;
   132                           ;pic18fxx2.h: 55: static volatile near unsigned 
      +                          char POSTINC2 @ 0xFDE;
   133                           ;pic18fxx2.h: 56: static volatile near unsigned 
      +                          char POSTDEC2 @ 0xFDD;
   134                           ;pic18fxx2.h: 57: static volatile near unsigned 
      +                          char PREINC2 @ 0xFDC;
   135                           ;pic18fxx2.h: 58: static volatile near unsigned 
      +                          char PLUSW2 @ 0xFDB;
   136                           ;pic18fxx2.h: 59: static volatile near unsigned 
      +                          char FSR2H @ 0xFDA;
   137                           ;pic18fxx2.h: 60: static volatile near unsigned 
      +                          char FSR2L @ 0xFD9;
   138                           ;pic18fxx2.h: 61: static volatile near unsigned 
      +                          char STATUS @ 0xFD8;
   139                           ;pic18fxx2.h: 62: static volatile near unsigned 
      +                          int TMR0 @ 0xFD6;
   140                           ;pic18fxx2.h: 63: static volatile near unsigned 
      +                          char TMR0H @ 0xFD7;
   141                           ;pic18fxx2.h: 64: static volatile near unsigned 
      +                          char TMR0L @ 0xFD6;
   142                           ;pic18fxx2.h: 65: static near unsigned char T0CO
      +                          N @ 0xFD5;
   143                           ;pic18fxx2.h: 66: static volatile near unsigned 
      +                          char OSCCON @ 0xFD3;
   144                           ;pic18fxx2.h: 67: static volatile near unsigned 
      +                          char LVDCON @ 0xFD2;
   145                           ;pic18fxx2.h: 68: static near unsigned char WDTC
      +                          ON @ 0xFD1;
   146                           ;pic18fxx2.h: 69: static volatile near unsigned 
      +                          char RCON @ 0xFD0;
   147                           ;pic18fxx2.h: 70: static volatile near unsigned 
      +                          int TMR1 @ 0xFCE;
   148                           ;pic18fxx2.h: 71: static volatile near unsigned 
      +                          char TMR1H @ 0xFCF;
   149                           ;pic18fxx2.h: 72: static volatile near unsigned 
      +                          char TMR1L @ 0xFCE;
   150                           ;pic18fxx2.h: 73: static near unsigned char T1CO
      +                          N @ 0xFCD;
   151                           ;pic18fxx2.h: 74: static volatile near unsigned 
      +                          char TMR2 @ 0xFCC;
   152                           ;pic18fxx2.h: 75: static volatile near unsigned 
      +                          char PR2 @ 0xFCB;
   153                           ;pic18fxx2.h: 76: static near unsigned char T2CO
      +                          N @ 0xFCA;
   154                           ;pic18fxx2.h: 77: static volatile near unsigned 
      +                          char SSPBUF @ 0xFC9;
   155                           ;pic18fxx2.h: 78: static volatile near unsigned 
      +                          char SSPADD @ 0xFC8;
   156                           ;pic18fxx2.h: 79: static volatile near unsigned 
      +                          char SSPSTAT @ 0xFC7;
   157                           ;pic18fxx2.h: 80: static volatile near unsigned 
      +                          char SSPCON1 @ 0xFC6;
   158                           ;pic18fxx2.h: 81: static volatile near unsigned 
      +                          char SSPCON2 @ 0xFC5;
   159                           ;pic18fxx2.h: 82: static volatile near unsigned 
      +                          int ADRES @ 0xFC3;
   160                           ;pic18fxx2.h: 83: static volatile near unsigned 
      +                          char ADRESH @ 0xFC4;
   161                           ;pic18fxx2.h: 84: static volatile near unsigned 
      +                          char ADRESL @ 0xFC3;
   162                           ;pic18fxx2.h: 85: static volatile near unsigned 
      +                          char ADCON0 @ 0xFC2;
   163                           ;pic18fxx2.h: 86: static near unsigned char ADCO
      +                          N1 @ 0xFC1;
   164                           ;pic18fxx2.h: 87: static volatile near unsigned 
      +                          int CCPR1 @ 0xFBE;
   165                           ;pic18fxx2.h: 88: static volatile near unsigned 
      +                          char CCPR1H @ 0xFBF;
   166                           ;pic18fxx2.h: 89: static volatile near unsigned 
      +                          char CCPR1L @ 0xFBE;
   167                           ;pic18fxx2.h: 90: static volatile near unsigned 
      +                          char CCP1CON @ 0xFBD;
   168                           ;pic18fxx2.h: 91: static volatile near unsigned 
      +                          int CCPR2 @ 0xFBB;
   169                           ;pic18fxx2.h: 92: static volatile near unsigned 
      +                          char CCPR2H @ 0xFBC;
   170                           ;pic18fxx2.h: 93: static volatile near unsigned 
      +                          char CCPR2L @ 0xFBB;
   171                           ;pic18fxx2.h: 94: static volatile near unsigned 
      +                          char CCP2CON @ 0xFBA;
   172                           ;pic18fxx2.h: 95: static volatile near unsigned 
      +                          int TMR3 @ 0xFB2;
   173                           ;pic18fxx2.h: 96: static volatile near unsigned 
      +                          char TMR3H @ 0xFB3;
   174                           ;pic18fxx2.h: 97: static volatile near unsigned 
      +                          char TMR3L @ 0xFB2;
   175                           ;pic18fxx2.h: 98: static near unsigned char T3CO
      +                          N @ 0xFB1;
   176                           ;pic18fxx2.h: 99: static near unsigned char SPBR
      +                          G @ 0xFAF;
   177                           ;pic18fxx2.h: 100: static volatile near unsigned
      +                           char RCREG @ 0xFAE;
   178                           ;pic18fxx2.h: 101: static volatile near unsigned
      +                           char TXREG @ 0xFAD;
   179                           ;pic18fxx2.h: 102: static volatile near unsigned
      +                           char TXSTA @ 0xFAC;
   180                           ;pic18fxx2.h: 103: static volatile near unsigned
      +                           char RCSTA @ 0xFAB;
   181                           ;pic18fxx2.h: 104: static volatile near unsigned
      +                           char EEADR @ 0xFA9;
   182                           ;pic18fxx2.h: 105: static volatile near unsigned
      +                           char EEDATA @ 0xFA8;
   183                           ;pic18fxx2.h: 106: static volatile near unsigned
      +                           char EECON2 @ 0xFA7;
   184                           ;pic18fxx2.h: 107: static volatile near unsigned
      +                           char EECON1 @ 0xFA6;
   185                           ;pic18fxx2.h: 108: static near unsigned char IPR
      +                          2 @ 0xFA2;
   186                           ;pic18fxx2.h: 109: static volatile near unsigned
      +                           char PIR2 @ 0xFA1;
   187                           ;pic18fxx2.h: 110: static near unsigned char PIE
      +                          2 @ 0xFA0;
   188                           ;pic18fxx2.h: 111: static near unsigned char IPR
      +                          1 @ 0xF9F;
   189                           ;pic18fxx2.h: 112: static volatile near unsigned
      +                           char PIR1 @ 0xF9E;
   190                           ;pic18fxx2.h: 113: static near unsigned char PIE
      +                          1 @ 0xF9D;
   191                           ;pic18fxx2.h: 114: static volatile near unsigned
      +                           char TRISC @ 0xF94;
   192                           ;pic18fxx2.h: 115: static volatile near unsigned
      +                           char TRISB @ 0xF93;
   193                           ;pic18fxx2.h: 116: static volatile near unsigned
      +                           char TRISA @ 0xF92;
   194                           ;pic18fxx2.h: 117: static volatile near unsigned
      +                           char LATC @ 0xF8B;
   195                           ;pic18fxx2.h: 118: static volatile near unsigned
      +                           char LATB @ 0xF8A;
   196                           ;pic18fxx2.h: 119: static volatile near unsigned
      +                           char LATA @ 0xF89;
   197                           ;pic18fxx2.h: 120: static volatile near unsigned
      +                           char PORTC @ 0xF82;
   198  005C6C                     _FatalError:
   199                           ;	_cmd assigned to ?a_SendBootFPGACommand+0
   200  000000                     _SendBootFPGACommand$cmd	set	?a_SendBootFPGAComm
      +                          and
   201                           ;       param _p2 assigned to ?_SendBootFPGAComm
      +                          and+1
   202  000000                     _SendBootFPGACommand$p2	set	?_SendBootFPGAComman
      +                          d+1
   203                           ;       param _p1 assigned to ?_SendBootFPGAComm
      +                          and+0
   204  000000                     _SendBootFPGACommand$p1	set	?_SendBootFPGAComman
      +                          d
   205                           ;	_c4 assigned to ?a_ClearMemory+4
   206  000000                     _ClearMemory$c4	set	?a_ClearMemory+4
   207                           ;	_c3 assigned to ?a_ClearMemory+3
   208  000000                     _ClearMemory$c3	set	?a_ClearMemory+3
   209                           ;	_c1 assigned to ?a_ClearMemory+2
   210  000000                     _ClearMemory$c1	set	?a_ClearMemory+2
   211                           ;	_c2 assigned to ?a_ClearMemory+1
   212  000000                     _ClearMemory$c2	set	?a_ClearMemory+1
   213                           ;	_base assigned to ?a_ClearMemory+0
   214  000000                     _ClearMemory$base	set	?a_ClearMemory
   215                           ;       param _size assigned to ?_ClearMemory+0
   216  000000                     _ClearMemory$size	set	?_ClearMemory
   217                           ;	_c4 assigned to ?a_BootExit+3
   218  000000                     _BootExit$c4	set	?a_BootExit+3
   219                           ;	_c3 assigned to ?a_BootExit+2
   220  000000                     _BootExit$c3	set	?a_BootExit+2
   221                           ;	_c1 assigned to ?a_BootExit+1
   222  000000                     _BootExit$c1	set	?a_BootExit+1
   223                           ;	_c2 assigned to ?a_BootExit+0
   224  000000                     _BootExit$c2	set	?a_BootExit
   225                           ;	_n assigned to ?a_SendFile+2
   226  000000                     _SendFile$n	set	?a_SendFile+2
   227                           ;	_c1 assigned to ?a_SendFile+1
   228  000000                     _SendFile$c1	set	?a_SendFile+1
   229                           ;	_c2 assigned to ?a_SendFile+0
   230  000000                     _SendFile$c2	set	?a_SendFile
   231                           ;       param _file assigned to ?_SendFile+0
   232  000000                     _SendFile$file	set	?_SendFile
   233                           ;	_cmd assigned to ?a_BootUpload+4
   234  000000                     _BootUpload$cmd	set	?a_BootUpload+4
   235                           ;	_c4 assigned to ?a_BootUpload+3
   236  000000                     _BootUpload$c4	set	?a_BootUpload+3
   237                           ;	_c3 assigned to ?a_BootUpload+2
   238  000000                     _BootUpload$c3	set	?a_BootUpload+2
   239                           ;	_c1 assigned to ?a_BootUpload+1
   240  000000                     _BootUpload$c1	set	?a_BootUpload+1
   241                           ;	_c2 assigned to ?a_BootUpload+0
   242  000000                     _BootUpload$c2	set	?a_BootUpload
   243                           ;       param _size assigned to ?_BootUpload+3
   244  000000                     _BootUpload$size	set	?_BootUpload+3
   245                           ;       param _base assigned to ?_BootUpload+2
   246  000000                     _BootUpload$base	set	?_BootUpload+2
   247                           ;       param _file assigned to ?_BootUpload+0
   248  000000                     _BootUpload$file	set	?_BootUpload
   249                           ;	_p assigned to ?a_BootPrint+6
   250  000000                     _BootPrint$p	set	?a_BootPrint+6
   251                           ;	_n assigned to ?a_BootPrint+5
   252  000000                     _BootPrint$n	set	?a_BootPrint+5
   253                           ;	_c4 assigned to ?a_BootPrint+4
   254  000000                     _BootPrint$c4	set	?a_BootPrint+4
   255                           ;	_cmd assigned to ?a_BootPrint+3
   256  000000                     _BootPrint$cmd	set	?a_BootPrint+3
   257                           ;	_c3 assigned to ?a_BootPrint+2
   258  000000                     _BootPrint$c3	set	?a_BootPrint+2
   259                           ;	_c1 assigned to ?a_BootPrint+1
   260  000000                     _BootPrint$c1	set	?a_BootPrint+1
   261                           ;	_c2 assigned to ?a_BootPrint+0
   262  000000                     _BootPrint$c2	set	?a_BootPrint
   263                           ;       param _text assigned to ?_BootPrint+0
   264  000000                     _BootPrint$text	set	?_BootPrint
   265                           ;       param _name assigned to ?_UploadActionRe
      +                          play+0
   266  000000                     _UploadActionReplay$name	set	?_UploadActionRepla
      +                          y
   267                           ;       param _name assigned to ?_UploadKickstar
      +                          t+0
   268  000000                     _UploadKickstart$name	set	?_UploadKickstart
   269                           ;	_ptr assigned to ?a_ConfigureFpga+2
   270  000000                     _ConfigureFpga$ptr	set	?a_ConfigureFpga+2
   271                           ; errata NOP at function entry point
   272  005C6C  FFFF               	dw	65535
   273  005C6E                     f3892:
   274  000000                     
   275                           ; _code loaded to fsr1l
   276  005C6E  6EE1               	movwf	fsr1l,c
   277  005C70                     l16:
   278                           ;boot.c: 37: unsigned long t;
   279                           ;boot.c: 40: {
   280  005C70  50E1               	movf	fsr1l,w,c
   281  005C72  6ED9               	movwf	fsr2l,c
   282  005C74                     l20:
   283                           ;boot.c: 42: do
   284                           ;boot.c: 43: {
   285  005C74  0E70               	movlw	112
   286  005C76  6E00               	movwf	btemp,c
   287  005C78  0E94               	movlw	148
   288  005C7A  6E01               	movwf	btemp+1,c
   289  005C7C  6A02               	clrf	btemp+2,c
   290  005C7E  6A03               	clrf	btemp+3,c
   291                           ;boot.c: 45: while (--t)
   292  005C80                     l21:
   293  005C80  0EFF               	movlw	255
   294  005C82  0600               	decf	btemp,f,c
   295  005C84  2201               	addwfc	btemp+1,f,c
   296  005C86  2202               	addwfc	btemp+2,f,c
   297  005C88  2203               	addwfc	btemp+3,f,c
   298  005C8A  5003               	movf	btemp+3,w,c
   299  005C8C  1000               	iorwf	btemp,w,c
   300  005C8E  1001               	iorwf	btemp+1,w,c
   301  005C90  1002               	iorwf	btemp+2,w,c
   302  005C92  E002               	bz	u10
   303                           ;boot.c: 46: { RB4=1; }
   304  005C94  8881               	bsf	3969,4,c	;volatile
   305  005C96  D7F4               	goto	l21
   306  005C98                     u10:
   307                           ;boot.c: 48: t = 2*38000;
   308  005C98  0EE0               	movlw	224
   309  005C9A  6E00               	movwf	btemp,c
   310  005C9C  0E28               	movlw	40
   311  005C9E  6E01               	movwf	btemp+1,c
   312  005CA0  0E01               	movlw	1
   313  005CA2  6E02               	movwf	btemp+2,c
   314  005CA4  6A03               	clrf	btemp+3,c
   315                           ;boot.c: 49: while (--t)
   316  005CA6                     l24:
   317  005CA6  0EFF               	movlw	255
   318  005CA8  0600               	decf	btemp,f,c
   319  005CAA  2201               	addwfc	btemp+1,f,c
   320  005CAC  2202               	addwfc	btemp+2,f,c
   321  005CAE  2203               	addwfc	btemp+3,f,c
   322  005CB0  5003               	movf	btemp+3,w,c
   323  005CB2  1000               	iorwf	btemp,w,c
   324  005CB4  1001               	iorwf	btemp+1,w,c
   325  005CB6  1002               	iorwf	btemp+2,w,c
   326  005CB8  E002               	bz	u20
   327                           ;boot.c: 50: { RB4=0; }
   328  005CBA  9881               	bcf	3969,4,c	;volatile
   329  005CBC  D7F4               	goto	l24
   330  005CBE                     u20:
   331                           ;boot.c: 51: }
   332  005CBE  2ED9               	decfsz	fsr2l,f,c
   333  005CC0  D7D9               	goto	l20
   334                           ;boot.c: 54: t = 8*38000;
   335  005CC2  0E80               	movlw	128
   336  005CC4  6E00               	movwf	btemp,c
   337  005CC6  0EA3               	movlw	163
   338  005CC8  6E01               	movwf	btemp+1,c
   339  005CCA  0E04               	movlw	4
   340  005CCC  6E02               	movwf	btemp+2,c
   341  005CCE  6A03               	clrf	btemp+3,c
   342                           ;boot.c: 55: while (--t)
   343  005CD0                     l27:
   344  005CD0  0EFF               	movlw	255
   345  005CD2  0600               	decf	btemp,f,c
   346  005CD4  2201               	addwfc	btemp+1,f,c
   347  005CD6  2202               	addwfc	btemp+2,f,c
   348  005CD8  2203               	addwfc	btemp+3,f,c
   349  005CDA  5003               	movf	btemp+3,w,c
   350  005CDC  1000               	iorwf	btemp,w,c
   351  005CDE  1001               	iorwf	btemp+1,w,c
   352  005CE0  1002               	iorwf	btemp+2,w,c
   353  005CE2  E0C6               	bz	l16
   354                           ;boot.c: 56: { RB4=0; }
   355  005CE4  9881               	bcf	3969,4,c	;volatile
   356  005CE6  D7F4               	goto	l27
   357  005CE8  FFFF               	dw	65535	; Nop inserted for errata
   358  005CEA  D7C1               	goto	f3892
   359  005CEC                     __end_of_FatalError:
   360                           ;boot.c: 62: unsigned char ConfigureFpga(void)
   361                           ;boot.c: 63: {
   362  005CEC                     _ConfigureFpga:
   363                           ; errata NOP at function entry point
   364  005CEC  FFFF               	dw	65535
   365  005CEE                     f3902:
   366  000000                     
   367                           ;	_t assigned to ?a_ConfigureFpga+0
   368  000000                     _ConfigureFpga$t	set	?a_ConfigureFpga
   369                           ;boot.c: 64: unsigned short t;
   370  005CEE  9492               	bcf	3986,2,c	;volatile
   371                           ;boot.c: 69: TRISA2 = 1;
   372  005CF0  8492               	bsf	3986,2,c	;volatile
   373                           ;boot.c: 72: t = 50000;
   374  005CF2  0E50               	movlw	80
   375  005CF4  6EF3               	movwf	prodl,c
   376  005CF6  0EC3               	movlw	195
   377  005CF8  6EF4               	movwf	prodh,c
   378                           ;boot.c: 73: while (!RA3)
   379  005CFA                     l31:
   380  005CFA  B680               	btfsc	3968,3,c	;volatile
   381  005CFC  D00D               	goto	u50
   382                           ;boot.c: 74: {
   383  005CFE  0EF3               	movlw	243
   384  005D00  6EE9               	movwf	fsr0l,c
   385  005D02  0E0F               	movlw	15
   386  005D04  6EEA               	movwf	fsr0h,c
   387  005D06  06EE               	decf	postinc0,f,c
   388  005D08  0E00               	movlw	0
   389  005D0A  5AED               	subwfb	postdec0,f,c
   390  005D0C  50EE               	movf	postinc0,w,c
   391  005D0E  10ED               	iorwf	postdec0,w,c
   392  005D10  E1F4               	bnz	l31
   393                           ;boot.c: 76: {
   394  005D12  0E03               	movlw	3
   395  005D14  DFAB               	call	_FatalError
   396  005D16  D7F1               	goto	l31
   397  005D18                     u50:
   398                           ;boot.c: 82: }
   399  005D18  A681               	btfss	3969,3,c	;volatile
   400  005D1A  D002               	goto	l35
   401                           ;boot.c: 90: {
   402  005D1C  0E03               	movlw	3
   403  005D1E  DFA6               	call	_FatalError
   404  005D20                     l35:
   405                           ;boot.c: 96: }
   406  005D20  0100               	movlb	__Lparam shr (0+8)
   407  005D22  0E9E               	movlw	low _file
   408  005D24  6F49               	movwf	?_Open^(__Lparam& (0+65280)),b
   409  005D26  0E02               	movlw	high _file
   410  005D28  6F4A               	movwf	(?_Open+1)^(__Lparam& (0+65280)),b
   411  005D2A  0E12               	movlw	low u19
   412  005D2C  6F4B               	movwf	(?_Open+2)^(__Lparam& (0+65280)),b
   413  005D2E  0E0F               	movlw	high u19
   414  005D30  6F4C               	movwf	(?_Open+3)^(__Lparam& (0+65280)),b
   415  005D32  ECD4  F014         	call	_Open	;wreg free
   416  005D36  6E00               	movwf	btemp,c
   417  005D38  C000  F002         	movff	btemp,btemp+2
   418  005D3C  6A03               	clrf	btemp+3,c
   419  005D3E  5003               	movf	btemp+3,w,c
   420  005D40  1002               	iorwf	btemp+2,w,c
   421  005D42  E102               	bnz	l36
   422                           ;boot.c: 100: {
   423  005D44  0E04               	movlw	4
   424  005D46  DF92               	call	_FatalError
   425  005D48                     l36:
   426                           ;boot.c: 106: }
   427  005D48  0100               	movlb	__Lparam shr (0+8)
   428  005D4A  6B40               	clrf	?a_ConfigureFpga^(__Lparam& (0+65280)),b
   429  005D4C  6B41               	clrf	(?a_ConfigureFpga+1)^(__Lparam& (0+65280))
      +                          ,b
   430  005D4E                     l39:
   431                           ;boot.c: 114: do
   432                           ;boot.c: 115: {
   433  005D4E  0E3F               	movlw	63
   434  005D50  C040  F000         	movff	?a_ConfigureFpga,btemp
   435  005D54  C041  F001         	movff	?a_ConfigureFpga+1,btemp+1
   436  005D58  1600               	andwf	btemp,f,c
   437  005D5A  6A01               	clrf	btemp+1,c
   438  005D5C  5001               	movf	btemp+1,w,c
   439  005D5E  1000               	iorwf	btemp,w,c
   440  005D60  E126               	bnz	l40
   441                           ;boot.c: 118: {
   442  005D62  C040  F000         	movff	?a_ConfigureFpga,btemp
   443  005D66  C041  F001         	movff	?a_ConfigureFpga+1,btemp+1
   444  005D6A  0E09               	movlw	9
   445  005D6C  6E02               	movwf	btemp+2,c
   446  005D6E                     u95:
   447  005D6E  90D8               	bcf	status,0,c
   448  005D70  3201               	rrcf	btemp+1,f,c
   449  005D72  3200               	rrcf	btemp,f,c
   450  005D74  2E02               	decfsz	btemp+2,f,c
   451  005D76  D7FB               	goto	u95
   452  005D78  A000               	btfss	btemp,0,c
   453  005D7A  D002               	goto	l41
   454                           ;boot.c: 120: { RB4=1; }
   455  005D7C  8881               	bsf	3969,4,c	;volatile
   456  005D7E  D001               	goto	l42
   457  005D80                     l41:
   458                           ;boot.c: 121: else
   459  005D80  9881               	bcf	3969,4,c	;volatile
   460  005D82                     l42:
   461                           ;boot.c: 124: putch('*');
   462  005D82  0E2A               	movlw	42
   463  005D84  EC74  F03C         	call	_putch
   464                           ;boot.c: 126: if (!FileRead(&file))
   465  005D88  0100               	movlb	__Lparam shr (0+8)
   466  005D8A  0E9E               	movlw	low _file
   467  005D8C  6FD9               	movwf	?_FileRead^(__Lparam& (0+65280)),b
   468  005D8E  0E02               	movlw	high _file
   469  005D90  6FDA               	movwf	(?_FileRead+1)^(__Lparam& (0+65280)),b
   470  005D92  EC9B  F01B         	call	_FileRead	;wreg free
   471  005D96  6E00               	movwf	btemp,c
   472  005D98  C000  F002         	movff	btemp,btemp+2
   473  005D9C  6A03               	clrf	btemp+3,c
   474  005D9E  5003               	movf	btemp+3,w,c
   475  005DA0  1002               	iorwf	btemp+2,w,c
   476  005DA2  E077               	bz	l46
   477                           ;boot.c: 127: { return(0); }
   478                           ;boot.c: 129: ptr=secbuf;
   479  005DA4  0100               	movlb	__Lparam shr (0+8)
   480  005DA6  0EFF               	movlw	low _secbuf
   481  005DA8  6F42               	movwf	(?a_ConfigureFpga+2)^(__Lparam& (0+65280)
      +                          ),b
   482  005DAA  0E03               	movlw	high _secbuf
   483  005DAC  6F43               	movwf	(?a_ConfigureFpga+3)^(__Lparam& (0+65280)
      +                          ),b
   484  005DAE                     l40:
   485                           ;boot.c: 130: }
   486  005DAE  C042  FFE9         	movff	?a_ConfigureFpga+2,fsr0l
   487  005DB2  C043  FFEA         	movff	?a_ConfigureFpga+3,fsr0h
   488  005DB6  0100               	movlb	__Lparam shr (0+8)
   489  005DB8  4B42               	infsnz	(?a_ConfigureFpga+2)^(__Lparam& (0+65280
      +                          )),f,b
   490  005DBA  2B43               	incf	(?a_ConfigureFpga+3)^(__Lparam& (0+65280))
      +                          ,f,b
   491  005DBC  50EF               	movf	indf0,w,c
   492  005DBE  EC48  F03C         	call	_ShiftFpga
   493                           ;boot.c: 134: ShiftFpga(*(ptr++));
   494  005DC2  C042  FFE9         	movff	?a_ConfigureFpga+2,fsr0l
   495  005DC6  C043  FFEA         	movff	?a_ConfigureFpga+3,fsr0h
   496  005DCA  0100               	movlb	__Lparam shr (0+8)
   497  005DCC  4B42               	infsnz	(?a_ConfigureFpga+2)^(__Lparam& (0+65280
      +                          )),f,b
   498  005DCE  2B43               	incf	(?a_ConfigureFpga+3)^(__Lparam& (0+65280))
      +                          ,f,b
   499  005DD0  50EF               	movf	indf0,w,c
   500  005DD2  EC48  F03C         	call	_ShiftFpga
   501                           ;boot.c: 135: ShiftFpga(*(ptr++));
   502  005DD6  C042  FFE9         	movff	?a_ConfigureFpga+2,fsr0l
   503  005DDA  C043  FFEA         	movff	?a_ConfigureFpga+3,fsr0h
   504  005DDE  0100               	movlb	__Lparam shr (0+8)
   505  005DE0  4B42               	infsnz	(?a_ConfigureFpga+2)^(__Lparam& (0+65280
      +                          )),f,b
   506  005DE2  2B43               	incf	(?a_ConfigureFpga+3)^(__Lparam& (0+65280))
      +                          ,f,b
   507  005DE4  50EF               	movf	indf0,w,c
   508  005DE6  EC48  F03C         	call	_ShiftFpga
   509                           ;boot.c: 136: ShiftFpga(*(ptr++));
   510  005DEA  C042  FFE9         	movff	?a_ConfigureFpga+2,fsr0l
   511  005DEE  C043  FFEA         	movff	?a_ConfigureFpga+3,fsr0h
   512  005DF2  0100               	movlb	__Lparam shr (0+8)
   513  005DF4  4B42               	infsnz	(?a_ConfigureFpga+2)^(__Lparam& (0+65280
      +                          )),f,b
   514  005DF6  2B43               	incf	(?a_ConfigureFpga+3)^(__Lparam& (0+65280))
      +                          ,f,b
   515  005DF8  50EF               	movf	indf0,w,c
   516  005DFA  EC48  F03C         	call	_ShiftFpga
   517                           ;boot.c: 137: ShiftFpga(*(ptr++));
   518  005DFE  C042  FFE9         	movff	?a_ConfigureFpga+2,fsr0l
   519  005E02  C043  FFEA         	movff	?a_ConfigureFpga+3,fsr0h
   520  005E06  0100               	movlb	__Lparam shr (0+8)
   521  005E08  4B42               	infsnz	(?a_ConfigureFpga+2)^(__Lparam& (0+65280
      +                          )),f,b
   522  005E0A  2B43               	incf	(?a_ConfigureFpga+3)^(__Lparam& (0+65280))
      +                          ,f,b
   523  005E0C  50EF               	movf	indf0,w,c
   524  005E0E  EC48  F03C         	call	_ShiftFpga
   525                           ;boot.c: 138: ShiftFpga(*(ptr++));
   526  005E12  C042  FFE9         	movff	?a_ConfigureFpga+2,fsr0l
   527  005E16  C043  FFEA         	movff	?a_ConfigureFpga+3,fsr0h
   528  005E1A  0100               	movlb	__Lparam shr (0+8)
   529  005E1C  4B42               	infsnz	(?a_ConfigureFpga+2)^(__Lparam& (0+65280
      +                          )),f,b
   530  005E1E  2B43               	incf	(?a_ConfigureFpga+3)^(__Lparam& (0+65280))
      +                          ,f,b
   531  005E20  50EF               	movf	indf0,w,c
   532  005E22  EC48  F03C         	call	_ShiftFpga
   533                           ;boot.c: 139: ShiftFpga(*(ptr++));
   534  005E26  C042  FFE9         	movff	?a_ConfigureFpga+2,fsr0l
   535  005E2A  C043  FFEA         	movff	?a_ConfigureFpga+3,fsr0h
   536  005E2E  0100               	movlb	__Lparam shr (0+8)
   537  005E30  4B42               	infsnz	(?a_ConfigureFpga+2)^(__Lparam& (0+65280
      +                          )),f,b
   538  005E32  2B43               	incf	(?a_ConfigureFpga+3)^(__Lparam& (0+65280))
      +                          ,f,b
   539  005E34  50EF               	movf	indf0,w,c
   540  005E36  EC48  F03C         	call	_ShiftFpga
   541                           ;boot.c: 140: ShiftFpga(*(ptr++));
   542  005E3A  C042  FFE9         	movff	?a_ConfigureFpga+2,fsr0l
   543  005E3E  C043  FFEA         	movff	?a_ConfigureFpga+3,fsr0h
   544  005E42  0100               	movlb	__Lparam shr (0+8)
   545  005E44  4B42               	infsnz	(?a_ConfigureFpga+2)^(__Lparam& (0+65280
      +                          )),f,b
   546  005E46  2B43               	incf	(?a_ConfigureFpga+3)^(__Lparam& (0+65280))
      +                          ,f,b
   547  005E48  50EF               	movf	indf0,w,c
   548  005E4A  EC48  F03C         	call	_ShiftFpga
   549                           ;boot.c: 141: t++;
   550  005E4E  0100               	movlb	__Lparam shr (0+8)
   551  005E50  4B40               	infsnz	?a_ConfigureFpga^(__Lparam& (0+65280)),f
      +                          ,b
   552  005E52  2B41               	incf	(?a_ConfigureFpga+1)^(__Lparam& (0+65280))
      +                          ,f,b
   553                           ;boot.c: 144: if (t%64==0)
   554  005E54  0E3F               	movlw	63
   555  005E56  C040  F000         	movff	?a_ConfigureFpga,btemp
   556  005E5A  C041  F001         	movff	?a_ConfigureFpga+1,btemp+1
   557  005E5E  1600               	andwf	btemp,f,c
   558  005E60  6A01               	clrf	btemp+1,c
   559  005E62  5001               	movf	btemp+1,w,c
   560  005E64  1000               	iorwf	btemp,w,c
   561  005E66  E106               	bnz	l44
   562                           ;boot.c: 145: { FileNextSector(&file); }
   563  005E68  0E9E               	movlw	low _file
   564  005E6A  6F65               	movwf	?_FileNextSector^(__Lparam& (0+65280)),b
   565  005E6C  0E02               	movlw	high _file
   566  005E6E  6F66               	movwf	(?_FileNextSector+1)^(__Lparam& (0+65280)
      +                          ),b
   567  005E70  EC73  F019         	call	_FileNextSector	;wreg free
   568  005E74                     l44:
   569                           ;boot.c: 146: }
   570  005E74  0100               	movlb	__Lparam shr (0+8)
   571  005E76  0E67               	movlw	103
   572  005E78  5D41               	subwf	(?a_ConfigureFpga+1)^(__Lparam& (0+65280)
      +                          ),w
   573  005E7A  0EB5               	movlw	181
   574  005E7C  B4D8               	btfsc	status,2,c
   575  005E7E  5D40               	subwf	?a_ConfigureFpga^(__Lparam& (0+65280)),w
   576  005E80  E201 D765          	bnc	l39
   577                           ;boot.c: 153: RB4=0;
   578  005E84  9881               	bcf	3969,4,c	;volatile
   579                           ;boot.c: 156: if (RB3)
   580  005E86  A681               	btfss	3969,3,c	;volatile
   581  005E88  D002               	goto	l45
   582                           ;boot.c: 157: { return(1); }
   583  005E8A  0E01               	movlw	1
   584  005E8C  D003               	goto	l30
   585  005E8E                     l45:
   586                           ;boot.c: 158: else
   587  005E8E  0E05               	movlw	5
   588  005E90  DEED               	call	_FatalError
   589  005E92                     l46:
   590                           ;boot.c: 165: }
   591  005E92  0E00               	movlw	0
   592                           ;boot.c: 168: }
   593  005E94                     l30:
   594  005E94  0012               	return	
   595  005E96  FFFF               	dw	65535	; Nop inserted for errata
   596  005E98  D72A               	goto	f3902
   597  005E9A                     __end_of_ConfigureFpga:
   598                           ;boot.c: 171: char UploadKickstart(const unsigne
      +                          d char *name)
   599                           ;boot.c: 172: {
   600  005E9A  0046               	dw	?_UploadKickstart
   601  005E9C                     _UploadKickstart:
   602                           ; errata NOP at function entry point
   603  005E9C  FFFF               	dw	65535
   604  005E9E                     f3982:
   605  000000                     
   606                           ;boot.c: 173: if (!Open(&file,name))
   607  005E9E  0100               	movlb	__Lparam shr (0+8)
   608  005EA0  0E9E               	movlw	low _file
   609  005EA2  6F49               	movwf	?_Open^(__Lparam& (0+65280)),b
   610  005EA4  0E02               	movlw	high _file
   611  005EA6  6F4A               	movwf	(?_Open+1)^(__Lparam& (0+65280)),b
   612  005EA8  C046  F04B         	movff	?_UploadKickstart,?_Open+2
   613  005EAC  C047  F04C         	movff	?_UploadKickstart+1,?_Open+3
   614  005EB0  ECD4  F014         	call	_Open	;wreg free
   615  005EB4  6E00               	movwf	btemp,c
   616  005EB6  C000  F002         	movff	btemp,btemp+2
   617  005EBA  6A03               	clrf	btemp+3,c
   618  005EBC  5003               	movf	btemp+3,w,c
   619  005EBE  1002               	iorwf	btemp+2,w,c
   620  005EC0  E113               	bnz	l48
   621                           ;boot.c: 174: {
   622  005EC2  0100               	movlb	__Lparam shr (0+8)
   623  005EC4  0E78               	movlw	low u29
   624  005EC6  6F48               	movwf	?_BootPrint^(__Lparam& (0+65280)),b
   625  005EC8  0E0F               	movlw	high u29
   626  005ECA  6F49               	movwf	(?_BootPrint+1)^(__Lparam& (0+65280)),b
   627  005ECC  D8A1               	call	_BootPrint	;wreg free
   628                           ;boot.c: 176: BootPrint(name);
   629  005ECE  C046  F048         	movff	?_UploadKickstart,?_BootPrint
   630  005ED2  C047  F049         	movff	?_UploadKickstart+1,?_BootPrint+1
   631  005ED6  D89C               	call	_BootPrint	;wreg free
   632                           ;boot.c: 177: BootPrint("\" file!");
   633  005ED8  0100               	movlb	__Lparam shr (0+8)
   634  005EDA  0EA2               	movlw	low u39
   635  005EDC  6F48               	movwf	?_BootPrint^(__Lparam& (0+65280)),b
   636  005EDE  0E0F               	movlw	high u39
   637  005EE0  6F49               	movwf	(?_BootPrint+1)^(__Lparam& (0+65280)),b
   638  005EE2  D896               	call	_BootPrint	;wreg free
   639                           ;boot.c: 178: return 40;
   640  005EE4  0E28               	movlw	40
   641  005EE6  D03E               	goto	l47
   642  005EE8                     l48:
   643                           ;boot.c: 179: }
   644  005EE8  0102               	movlb	(_file+19) shr (0+8)
   645  005EEA  51B1               	movf	(_file+19)& (0+255),w,b
   646  005EEC  B4D8               	btfsc	status,2,c
   647  005EEE  51B2               	movf	(_file+20)& (0+255),w,b
   648  005EF0  0E08               	movlw	8
   649  005EF2  B4D8               	btfsc	status,2,c
   650  005EF4  19B3               	xorwf	(_file+21)& (0+255),w,b
   651  005EF6  B4D8               	btfsc	status,2,c
   652  005EF8  51B4               	movf	(_file+22)& (0+255),w,b
   653  005EFA  E111               	bnz	l49
   654                           ;boot.c: 182: {
   655  005EFC  0100               	movlb	__Lparam shr (0+8)
   656  005EFE  0E3B               	movlw	low u49
   657  005F00  6F48               	movwf	?_BootPrint^(__Lparam& (0+65280)),b
   658  005F02  0E0F               	movlw	high u49
   659  005F04  6F49               	movwf	(?_BootPrint+1)^(__Lparam& (0+65280)),b
   660  005F06  D884               	call	_BootPrint	;wreg free
   661                           ;boot.c: 185: BootUpload(&file,0xF8,0x08);
   662  005F08  0100               	movlb	__Lparam shr (0+8)
   663  005F0A  0E9E               	movlw	low _file
   664  005F0C  6F48               	movwf	?_BootUpload^(__Lparam& (0+65280)),b
   665  005F0E  0E02               	movlw	high _file
   666  005F10  6F49               	movwf	(?_BootUpload+1)^(__Lparam& (0+65280)),b
   667  005F12  0EF8               	movlw	248
   668  005F14  6F4A               	movwf	(?_BootUpload+2)^(__Lparam& (0+65280)),b
   669  005F16  0E08               	movlw	8
   670  005F18  6F4B               	movwf	(?_BootUpload+3)^(__Lparam& (0+65280)),b
   671  005F1A  D939               	call	_BootUpload	;wreg free
   672                           ;boot.c: 186: }
   673  005F1C  D022               	goto	l50
   674  005F1E                     l49:
   675                           ;boot.c: 187: else if (file.len==0x40000)
   676  005F1E  0102               	movlb	(_file+19) shr (0+8)
   677  005F20  51B1               	movf	(_file+19)& (0+255),w,b
   678  005F22  B4D8               	btfsc	status,2,c
   679  005F24  51B2               	movf	(_file+20)& (0+255),w,b
   680  005F26  0E04               	movlw	4
   681  005F28  B4D8               	btfsc	status,2,c
   682  005F2A  19B3               	xorwf	(_file+21)& (0+255),w,b
   683  005F2C  B4D8               	btfsc	status,2,c
   684  005F2E  51B4               	movf	(_file+22)& (0+255),w,b
   685                           ;boot.c: 188: {
   686  005F30  0100               	movlb	__Lparam shr (0+8)
   687  005F32  E110               	bnz	L1
   688  005F34  0E1E               	movlw	low u59
   689  005F36  6F48               	movwf	?_BootPrint^(__Lparam& (0+65280)),b
   690  005F38  0E0F               	movlw	high u59
   691  005F3A  6F49               	movwf	(?_BootPrint+1)^(__Lparam& (0+65280)),b
   692  005F3C  D869               	call	_BootPrint	;wreg free
   693                           ;boot.c: 191: BootUpload(&file,0xF8,0x04);
   694  005F3E  0100               	movlb	__Lparam shr (0+8)
   695  005F40  0E9E               	movlw	low _file
   696  005F42  6F48               	movwf	?_BootUpload^(__Lparam& (0+65280)),b
   697  005F44  0E02               	movlw	high _file
   698  005F46  6F49               	movwf	(?_BootUpload+1)^(__Lparam& (0+65280)),b
   699  005F48  0EF8               	movlw	248
   700  005F4A  6F4A               	movwf	(?_BootUpload+2)^(__Lparam& (0+65280)),b
   701  005F4C  0E04               	movlw	4
   702  005F4E  6F4B               	movwf	(?_BootUpload+3)^(__Lparam& (0+65280)),b
   703  005F50  D91E               	call	_BootUpload	;wreg free
   704                           ;boot.c: 192: }
   705  005F52  D007               	goto	l50
   706                           ;boot.c: 193: else
   707  005F54                     L1:
   708  005F54  0E7D               	movlw	low u69
   709  005F56  6F48               	movwf	?_BootPrint^(__Lparam& (0+65280)),b
   710  005F58  0E0F               	movlw	high u69
   711  005F5A  6F49               	movwf	(?_BootPrint+1)^(__Lparam& (0+65280)),b
   712  005F5C  D859               	call	_BootPrint	;wreg free
   713                           ;boot.c: 196: return 41;
   714  005F5E  0E29               	movlw	41
   715  005F60  D001               	goto	l47
   716  005F62                     l50:
   717                           ;boot.c: 197: }
   718  005F62  0E00               	movlw	0
   719                           ;boot.c: 200: }
   720  005F64                     l47:
   721  005F64  0012               	return	
   722  005F66  FFFF               	dw	65535	; Nop inserted for errata
   723  005F68  D79A               	goto	f3982
   724  005F6A                     __end_of_UploadKickstart:
   725                           ;boot.c: 203: char UploadActionReplay(const unsi
      +                          gned char *name)
   726                           ;boot.c: 204: {
   727  005F6A  0040               	dw	?_UploadActionReplay
   728  005F6C                     _UploadActionReplay:
   729                           ; errata NOP at function entry point
   730  005F6C  FFFF               	dw	65535
   731  005F6E                     f4012:
   732  000000                     
   733                           ;boot.c: 205: if (!Open(&file,name))
   734  005F6E  0100               	movlb	__Lparam shr (0+8)
   735  005F70  0E9E               	movlw	low _file
   736  005F72  6F49               	movwf	?_Open^(__Lparam& (0+65280)),b
   737  005F74  0E02               	movlw	high _file
   738  005F76  6F4A               	movwf	(?_Open+1)^(__Lparam& (0+65280)),b
   739  005F78  C040  F04B         	movff	?_UploadActionReplay,?_Open+2
   740  005F7C  C041  F04C         	movff	?_UploadActionReplay+1,?_Open+3
   741  005F80  ECD4  F014         	call	_Open	;wreg free
   742  005F84  6E00               	movwf	btemp,c
   743  005F86  C000  F002         	movff	btemp,btemp+2
   744  005F8A  6A03               	clrf	btemp+3,c
   745  005F8C  5003               	movf	btemp+3,w,c
   746  005F8E  1002               	iorwf	btemp+2,w,c
   747  005F90  E113               	bnz	l54
   748                           ;boot.c: 206: {
   749  005F92  0100               	movlb	__Lparam shr (0+8)
   750  005F94  0E78               	movlw	low u79
   751  005F96  6F48               	movwf	?_BootPrint^(__Lparam& (0+65280)),b
   752  005F98  0E0F               	movlw	high u79
   753  005F9A  6F49               	movwf	(?_BootPrint+1)^(__Lparam& (0+65280)),b
   754  005F9C  D839               	call	_BootPrint	;wreg free
   755                           ;boot.c: 208: BootPrint(name);
   756  005F9E  C040  F048         	movff	?_UploadActionReplay,?_BootPrint
   757  005FA2  C041  F049         	movff	?_UploadActionReplay+1,?_BootPrint+1
   758  005FA6  D834               	call	_BootPrint	;wreg free
   759                           ;boot.c: 209: BootPrint("\" file!");
   760  005FA8  0100               	movlb	__Lparam shr (0+8)
   761  005FAA  0EA2               	movlw	low u89
   762  005FAC  6F48               	movwf	?_BootPrint^(__Lparam& (0+65280)),b
   763  005FAE  0E0F               	movlw	high u89
   764  005FB0  6F49               	movwf	(?_BootPrint+1)^(__Lparam& (0+65280)),b
   765  005FB2  D82E               	call	_BootPrint	;wreg free
   766                           ;boot.c: 211: return 40;
   767  005FB4  0E28               	movlw	40
   768  005FB6  D028               	goto	l53
   769  005FB8                     l54:
   770                           ;boot.c: 212: }
   771  005FB8  0102               	movlb	(_file+19) shr (0+8)
   772  005FBA  51B1               	movf	(_file+19)& (0+255),w,b
   773  005FBC  B4D8               	btfsc	status,2,c
   774  005FBE  51B2               	movf	(_file+20)& (0+255),w,b
   775  005FC0  0E04               	movlw	4
   776  005FC2  B4D8               	btfsc	status,2,c
   777  005FC4  19B3               	xorwf	(_file+21)& (0+255),w,b
   778  005FC6  B4D8               	btfsc	status,2,c
   779  005FC8  51B4               	movf	(_file+22)& (0+255),w,b
   780                           ;boot.c: 215: {
   781  005FCA  0100               	movlb	__Lparam shr (0+8)
   782  005FCC  E115               	bnz	L2
   783  005FCE  0E58               	movlw	low u99
   784  005FD0  6F48               	movwf	?_BootPrint^(__Lparam& (0+65280)),b
   785  005FD2  0E0F               	movlw	high u99
   786  005FD4  6F49               	movwf	(?_BootPrint+1)^(__Lparam& (0+65280)),b
   787  005FD6  D81C               	call	_BootPrint	;wreg free
   788                           ;boot.c: 217: BootUpload(&file,0x40,0x04);
   789  005FD8  0100               	movlb	__Lparam shr (0+8)
   790  005FDA  0E9E               	movlw	low _file
   791  005FDC  6F48               	movwf	?_BootUpload^(__Lparam& (0+65280)),b
   792  005FDE  0E02               	movlw	high _file
   793  005FE0  6F49               	movwf	(?_BootUpload+1)^(__Lparam& (0+65280)),b
   794  005FE2  0E40               	movlw	64
   795  005FE4  6F4A               	movwf	(?_BootUpload+2)^(__Lparam& (0+65280)),b
   796  005FE6  0E04               	movlw	4
   797  005FE8  6F4B               	movwf	(?_BootUpload+3)^(__Lparam& (0+65280)),b
   798  005FEA  D8D1               	call	_BootUpload	;wreg free
   799                           ;boot.c: 218: ClearMemory(0x44,0x04);
   800  005FEC  0E04               	movlw	4
   801  005FEE  0100               	movlb	__Lparam shr (0+8)
   802  005FF0  6F42               	movwf	?_ClearMemory^(__Lparam& (0+65280)),b
   803  005FF2  0E44               	movlw	68
   804  005FF4  D9BE               	call	_ClearMemory
   805                           ;boot.c: 219: }
   806  005FF6  D007               	goto	l56
   807                           ;boot.c: 220: else
   808  005FF8                     L2:
   809  005FF8  0EAA               	movlw	low u109
   810  005FFA  6F48               	movwf	?_BootPrint^(__Lparam& (0+65280)),b
   811  005FFC  0E0F               	movlw	high u109
   812  005FFE  6F49               	movwf	(?_BootPrint+1)^(__Lparam& (0+65280)),b
   813  006000  D807               	call	_BootPrint	;wreg free
   814                           ;boot.c: 224: return 41;
   815  006002  0E29               	movlw	41
   816  006004  D001               	goto	l53
   817  006006                     l56:
   818                           ;boot.c: 225: }
   819  006006  0E00               	movlw	0
   820                           ;boot.c: 228: }
   821  006008                     l53:
   822  006008  0012               	return	
   823  00600A  FFFF               	dw	65535	; Nop inserted for errata
   824  00600C  D7B0               	goto	f4012
   825  00600E                     __end_of_UploadActionReplay:
   826                           ;boot.c: 233: char BootPrint(const char* text)
   827                           ;boot.c: 234: {
   828  00600E  0048               	dw	?_BootPrint
   829  006010                     _BootPrint:
   830                           ; errata NOP at function entry point
   831  006010  FFFF               	dw	65535
   832  006012                     f4032:
   833  000000                     
   834                           ;_p stored from prod
   835                           ;boot.c: 235: char c1,c2,c3,c4;
   836  006012  C048  FFF3         	movff	?_BootPrint,prodl
   837  006016  C049  FFF4         	movff	?_BootPrint+1,prodh
   838                           ;boot.c: 242: n = 0;
   839  00601A  0100               	movlb	__Lparam shr (0+8)
   840  00601C  6B4F               	clrf	(?a_BootPrint+5)^(__Lparam& (0+65280)),b
   841                           ;boot.c: 243: while (*(p++) != 0)
   842  00601E                     l58:
   843  00601E  CFF3 FFF6          	movff	prodl,tblptrl
   844  006022  CFF4 FFF7          	movff	prodh,tblptrh
   845  006026  4AF3               	infsnz	prodl,f,c
   846  006028  2AF4               	incf	prodh,f,c
   847  00602A  0E05               	movlw	(high __ramtop+-1)
   848  00602C  64F7               	cpfsgt	tblptrh,c
   849  00602E  D004               	bra	u207
   850  006030  0008               	tblrd		*
   851  006032  FFFF               	dw	65535	; Nop inserted for errata
   852  006034  50F5               	movf	tablat,w,c
   853  006036  D005               	bra	u200
   854  006038                     u207:
   855  006038  CFF6 FFE9          	movff	tblptrl,fsr0l
   856  00603C  CFF7 FFEA          	movff	tblptrh,fsr0h
   857  006040  50EF               	movf	indf0,w,c
   858  006042                     u200:
   859  006042  0900               	iorlw	0
   860  006044  E003               	bz	u210
   861                           ;boot.c: 244: { n++; }
   862  006046  0100               	movlb	__Lparam shr (0+8)
   863  006048  2B4F               	incf	(?a_BootPrint+5)^(__Lparam& (0+65280)),f,b
   864  00604A  D7E9               	goto	l58
   865  00604C                     u210:
   866                           ;boot.c: 246: cmd = 1;
   867  00604C  0E01               	movlw	1
   868  00604E  0100               	movlb	__Lparam shr (0+8)
   869  006050  6F4D               	movwf	(?a_BootPrint+3)^(__Lparam& (0+65280)),b
   870  006052                     l62:
   871                           ;boot.c: 247: while (1)
   872                           ;boot.c: 248: {
   873  006052  9280               	bcf	3968,1,c	;volatile
   874                           ;boot.c: 250: c1 = SPI(0x10);
   875  006054  0E10               	movlw	16
   876  006056  EC35  F03C         	call	_SPI
   877  00605A  0100               	movlb	__Lparam shr (0+8)
   878  00605C  6F4B               	movwf	(?a_BootPrint+1)^(__Lparam& (0+65280)),b
   879                           ;boot.c: 251: c2 = SPI(0x01);
   880  00605E  0E01               	movlw	1
   881  006060  EC35  F03C         	call	_SPI
   882  006064  0100               	movlb	__Lparam shr (0+8)
   883  006066  6F4A               	movwf	?a_BootPrint^(__Lparam& (0+65280)),b
   884                           ;boot.c: 252: SPI(0);
   885  006068  0E00               	movlw	0
   886  00606A  EC35  F03C         	call	_SPI
   887                           ;boot.c: 253: SPI(0);
   888  00606E  0E00               	movlw	0
   889  006070  EC35  F03C         	call	_SPI
   890                           ;boot.c: 254: c3 = SPI(0);
   891  006074  0E00               	movlw	0
   892  006076  EC35  F03C         	call	_SPI
   893  00607A  0100               	movlb	__Lparam shr (0+8)
   894  00607C  6F4C               	movwf	(?a_BootPrint+2)^(__Lparam& (0+65280)),b
   895                           ;boot.c: 255: c4 = SPI(0);
   896  00607E  0E00               	movlw	0
   897  006080  EC35  F03C         	call	_SPI
   898  006084  0100               	movlb	__Lparam shr (0+8)
   899  006086  6F4E               	movwf	(?a_BootPrint+4)^(__Lparam& (0+65280)),b
   900                           ;boot.c: 261: if (c1 & 0x01)
   901  006088  A14B               	btfss	(?a_BootPrint+1)^(__Lparam& (0+65280)),0,
      +                          b
   902  00608A  D079               	goto	l64
   903                           ;boot.c: 262: {
   904  00608C  514D               	movf	(?a_BootPrint+3)^(__Lparam& (0+65280)),w
   905  00608E  E02F               	bz	l65
   906                           ;boot.c: 264: {
   907  006090  514C               	movf	(?a_BootPrint+2)^(__Lparam& (0+65280)),w
   908  006092  0A80               	xorlw	-128
   909  006094  E176               	bnz	l63
   910  006096  514E               	movf	(?a_BootPrint+4)^(__Lparam& (0+65280)),w
   911  006098  0A06               	xorlw	6
   912  00609A  E173               	bnz	l63
   913                           ;boot.c: 266: {
   914  00609C  0100               	movlb	__Lparam shr (0+8)
   915  00609E  6B4D               	clrf	(?a_BootPrint+3)^(__Lparam& (0+65280)),b
   916                           ;boot.c: 268: SPI(0xAA);
   917  0060A0  0EAA               	movlw	170
   918  0060A2  EC35  F03C         	call	_SPI
   919                           ;boot.c: 269: SPI(0x67);
   920  0060A6  0E67               	movlw	103
   921  0060A8  EC35  F03C         	call	_SPI
   922                           ;boot.c: 270: SPI(0x00);
   923  0060AC  0E00               	movlw	0
   924  0060AE  EC35  F03C         	call	_SPI
   925                           ;boot.c: 271: SPI(0x01);
   926  0060B2  0E01               	movlw	1
   927  0060B4  EC35  F03C         	call	_SPI
   928                           ;boot.c: 273: SPI(0x00);
   929  0060B8  0E00               	movlw	0
   930  0060BA  EC35  F03C         	call	_SPI
   931                           ;boot.c: 274: SPI(0x00);
   932  0060BE  0E00               	movlw	0
   933  0060C0  EC35  F03C         	call	_SPI
   934                           ;boot.c: 275: SPI(0x00);
   935  0060C4  0E00               	movlw	0
   936  0060C6  EC35  F03C         	call	_SPI
   937                           ;boot.c: 276: SPI(n+2);
   938  0060CA  0100               	movlb	__Lparam shr (0+8)
   939  0060CC  514F               	movf	(?a_BootPrint+5)^(__Lparam& (0+65280)),w
   940  0060CE  0F02               	addlw	2
   941  0060D0  EC35  F03C         	call	_SPI
   942                           ;boot.c: 278: SPI(0x00);
   943  0060D4  0E00               	movlw	0
   944  0060D6  EC35  F03C         	call	_SPI
   945                           ;boot.c: 279: SPI(0x00);
   946  0060DA  0E00               	movlw	0
   947  0060DC  EC35  F03C         	call	_SPI
   948                           ;boot.c: 280: SPI(0x00);
   949  0060E0  0E00               	movlw	0
   950  0060E2  EC35  F03C         	call	_SPI
   951                           ;boot.c: 281: SPI(0x00);
   952  0060E6  0E00               	movlw	0
   953  0060E8  EC35  F03C         	call	_SPI
   954                           ;boot.c: 282: }
   955  0060EC  D048               	goto	l64
   956                           ;boot.c: 283: else break;
   957                           ;boot.c: 284: }
   958  0060EE                     l65:
   959                           ;boot.c: 285: else
   960  0060EE  0100               	movlb	__Lparam shr (0+8)
   961  0060F0  514C               	movf	(?a_BootPrint+2)^(__Lparam& (0+65280)),w
   962  0060F2  0A80               	xorlw	-128
   963  0060F4  E146               	bnz	l63
   964  0060F6  0E02               	movlw	2
   965  0060F8  C04F  F000         	movff	?a_BootPrint+5,btemp
   966  0060FC  6A01               	clrf	btemp+1,c
   967  0060FE  2600               	addwf	btemp,f,c
   968  006100  0E00               	movlw	0
   969  006102  2201               	addwfc	btemp+1,f,c
   970  006104  3401               	rlcf	btemp+1,w,c
   971  006106  3001               	rrcf	btemp+1,w,c
   972  006108  6E03               	movwf	btemp+3,c
   973  00610A  3000               	rrcf	btemp,w,c
   974  00610C  6E02               	movwf	btemp+2,c
   975  00610E  C04E  FFE8         	movff	?a_BootPrint+4,wreg
   976  006112  1802               	xorwf	btemp+2,w,c
   977  006114  E101               	bnz	u285
   978  006116  5203               	movf	btemp+3,f,c
   979  006118                     u285:
   980  006118  E134               	bnz	l63
   981                           ;boot.c: 289: {
   982  00611A  C048  FFF3         	movff	?_BootPrint,prodl
   983  00611E  C049  FFF4         	movff	?_BootPrint+1,prodh
   984                           ;boot.c: 291: n = c4<<1;
   985  006122  0100               	movlb	__Lparam shr (0+8)
   986  006124  514E               	movf	(?a_BootPrint+4)^(__Lparam& (0+65280)),w
   987  006126  254E               	addwf	(?a_BootPrint+4)^(__Lparam& (0+65280)),w
   988  006128  6F4F               	movwf	(?a_BootPrint+5)^(__Lparam& (0+65280)),b
   989                           ;boot.c: 292: while (n--)
   990  00612A                     l70:
   991  00612A  0100               	movlb	__Lparam shr (0+8)
   992  00612C  074F               	decf	(?a_BootPrint+5)^(__Lparam& (0+65280)),f,b
   993  00612E  294F               	incf	(?a_BootPrint+5)^(__Lparam& (0+65280)),w
   994  006130  E023               	bz	u320
   995                           ;boot.c: 293: {
   996  006132  CFF3 FFF6          	movff	prodl,tblptrl
   997  006136  CFF4 FFF7          	movff	prodh,tblptrh
   998  00613A  0E05               	movlw	(high __ramtop+-1)
   999  00613C  64F7               	cpfsgt	tblptrh,c
  1000  00613E  D004               	bra	u307
  1001  006140  0008               	tblrd		*
  1002  006142  FFFF               	dw	65535	; Nop inserted for errata
  1003  006144  50F5               	movf	tablat,w,c
  1004  006146  D005               	bra	u300
  1005  006148                     u307:
  1006  006148  CFF6 FFE9          	movff	tblptrl,fsr0l
  1007  00614C  CFF7 FFEA          	movff	tblptrh,fsr0h
  1008  006150  50EF               	movf	indf0,w,c
  1009  006152                     u300:
  1010  006152  0100               	movlb	__Lparam shr (0+8)
  1011  006154  6F4E               	movwf	(?a_BootPrint+4)^(__Lparam& (0+65280)),b
  1012                           ;_p stored from prod
  1013  006156  CFF3 F050          	movff	prodl,?a_BootPrint+6
  1014  00615A  CFF4 F051          	movff	prodh,?a_BootPrint+7
  1015                           ;boot.c: 295: SPI(c4);
  1016  00615E  514E               	movf	(?a_BootPrint+4)^(__Lparam& (0+65280)),w
  1017  006160  EC35  F03C         	call	_SPI
  1018                           ; _p loaded to prod
  1019  006164  C050  FFF3         	movff	?a_BootPrint+6,prodl
  1020  006168  C051  FFF4         	movff	?a_BootPrint+7,prodh
  1021                           ;boot.c: 296: if (c4)
  1022  00616C  0100               	movlb	__Lparam shr (0+8)
  1023  00616E  514E               	movf	(?a_BootPrint+4)^(__Lparam& (0+65280)),w
  1024  006170  E0DC               	bz	l70
  1025                           ;boot.c: 297: p++;
  1026  006172  4AF3               	infsnz	prodl,f,c
  1027  006174  2AF4               	incf	prodh,f,c
  1028  006176  D7D9               	goto	l70
  1029  006178                     u320:
  1030                           ;boot.c: 298: }
  1031  006178  8280               	bsf	3968,1,c	;volatile
  1032                           ;boot.c: 300: return 1;
  1033  00617A  0E01               	movlw	1
  1034  00617C  D004               	goto	l57
  1035                           ;boot.c: 302: else break;
  1036  00617E                     l64:
  1037                           ;boot.c: 303: }
  1038  00617E  8280               	bsf	3968,1,c	;volatile
  1039  006180  D768               	goto	l62
  1040  006182                     l63:
  1041                           ;boot.c: 306: }
  1042  006182  8280               	bsf	3968,1,c	;volatile
  1043                           ;boot.c: 308: return 0;
  1044  006184  0E00               	movlw	0
  1045                           ;boot.c: 309: }
  1046  006186                     l57:
  1047  006186  0012               	return	
  1048  006188  FFFF               	dw	65535	; Nop inserted for errata
  1049  00618A  D743               	goto	f4032
  1050  00618C                     __end_of_BootPrint:
  1051                           ;boot.c: 316: char BootUpload(struct fileTYPE *f
      +                          ile, unsigned char base, unsigned char size)
  1052                           ;boot.c: 317: {
  1053  00618C  0048               	dw	?_BootUpload
  1054  00618E                     _BootUpload:
  1055                           ; errata NOP at function entry point
  1056  00618E  FFFF               	dw	65535
  1057  006190                     f4052:
  1058  000000                     
  1059                           ;boot.c: 318: char c1,c2,c3,c4;
  1060  006190  0E01               	movlw	1
  1061  006192  0100               	movlb	__Lparam shr (0+8)
  1062  006194  6F50               	movwf	(?a_BootUpload+4)^(__Lparam& (0+65280)),b
  1063  006196                     l77:
  1064                           ;boot.c: 322: while (1)
  1065                           ;boot.c: 323: {
  1066  006196  9280               	bcf	3968,1,c	;volatile
  1067                           ;boot.c: 325: c1 = SPI(0x10);
  1068  006198  0E10               	movlw	16
  1069  00619A  EC35  F03C         	call	_SPI
  1070  00619E  0100               	movlb	__Lparam shr (0+8)
  1071  0061A0  6F4D               	movwf	(?a_BootUpload+1)^(__Lparam& (0+65280)),b
  1072                           ;boot.c: 326: c2 = SPI(0x01);
  1073  0061A2  0E01               	movlw	1
  1074  0061A4  EC35  F03C         	call	_SPI
  1075  0061A8  0100               	movlb	__Lparam shr (0+8)
  1076  0061AA  6F4C               	movwf	?a_BootUpload^(__Lparam& (0+65280)),b
  1077                           ;boot.c: 327: SPI(0);
  1078  0061AC  0E00               	movlw	0
  1079  0061AE  EC35  F03C         	call	_SPI
  1080                           ;boot.c: 328: SPI(0);
  1081  0061B2  0E00               	movlw	0
  1082  0061B4  EC35  F03C         	call	_SPI
  1083                           ;boot.c: 329: c3 = SPI(0);
  1084  0061B8  0E00               	movlw	0
  1085  0061BA  EC35  F03C         	call	_SPI
  1086  0061BE  0100               	movlb	__Lparam shr (0+8)
  1087  0061C0  6F4E               	movwf	(?a_BootUpload+2)^(__Lparam& (0+65280)),b
  1088                           ;boot.c: 330: c4 = SPI(0);
  1089  0061C2  0E00               	movlw	0
  1090  0061C4  EC35  F03C         	call	_SPI
  1091  0061C8  0100               	movlb	__Lparam shr (0+8)
  1092  0061CA  6F4F               	movwf	(?a_BootUpload+3)^(__Lparam& (0+65280)),b
  1093                           ;boot.c: 336: if (c1 & 0x01)
  1094  0061CC  A14D               	btfss	(?a_BootUpload+1)^(__Lparam& (0+65280)),0
      +                          ,b
  1095  0061CE  D019               	goto	l79
  1096                           ;boot.c: 337: {
  1097  0061D0  5150               	movf	(?a_BootUpload+4)^(__Lparam& (0+65280)),w
  1098  0061D2  E00F               	bz	l80
  1099                           ;boot.c: 339: {
  1100  0061D4  514E               	movf	(?a_BootUpload+2)^(__Lparam& (0+65280)),w
  1101  0061D6  0A80               	xorlw	-128
  1102  0061D8  E116               	bnz	l78
  1103  0061DA  514F               	movf	(?a_BootUpload+3)^(__Lparam& (0+65280)),w
  1104  0061DC  0A06               	xorlw	6
  1105  0061DE  E113               	bnz	l78
  1106                           ;boot.c: 341: {
  1107  0061E0  0100               	movlb	__Lparam shr (0+8)
  1108  0061E2  6B50               	clrf	(?a_BootUpload+4)^(__Lparam& (0+65280)),b
  1109                           ;boot.c: 347: SendBootFPGACommand(0x02, base, si
      +                          ze);
  1110  0061E4  514A               	movf	(?_BootUpload+2)^(__Lparam& (0+65280)),w
  1111  0061E6  6F51               	movwf	?_SendBootFPGACommand^(__Lparam& (0+65280
      +                          )),b
  1112  0061E8  514B               	movf	(?_BootUpload+3)^(__Lparam& (0+65280)),w
  1113  0061EA  6F52               	movwf	(?_SendBootFPGACommand+1)^(__Lparam& (0+6
      +                          5280)),b
  1114  0061EC  0E02               	movlw	2
  1115  0061EE  D8F5               	call	_SendBootFPGACommand
  1116                           ;boot.c: 348: }
  1117  0061F0  D008               	goto	l79
  1118                           ;boot.c: 349: else break;
  1119                           ;boot.c: 350: }
  1120  0061F2                     l80:
  1121                           ;boot.c: 351: else
  1122  0061F2  8280               	bsf	3968,1,c	;volatile
  1123                           ;boot.c: 361: SendFile(file);
  1124  0061F4  C048  F051         	movff	?_BootUpload,?_SendFile
  1125  0061F8  C049  F052         	movff	?_BootUpload+1,?_SendFile+1
  1126  0061FC  D80A               	call	_SendFile	;wreg free
  1127                           ;boot.c: 367: return 0;
  1128  0061FE  0E00               	movlw	0
  1129  006200  D004               	goto	l75
  1130  006202                     l79:
  1131                           ;boot.c: 368: }
  1132  006202  8280               	bsf	3968,1,c	;volatile
  1133  006204  D7C8               	goto	l77
  1134  006206                     l78:
  1135                           ;boot.c: 371: }
  1136  006206  8280               	bsf	3968,1,c	;volatile
  1137                           ;boot.c: 373: return -1;
  1138  006208  0EFF               	movlw	255
  1139                           ;boot.c: 374: }
  1140  00620A                     l75:
  1141  00620A  0012               	return	
  1142  00620C  FFFF               	dw	65535	; Nop inserted for errata
  1143  00620E  D7C0               	goto	f4052
  1144  006210                     __end_of_BootUpload:
  1145                           ;boot.c: 377: void SendFile(struct fileTYPE *fil
      +                          e)
  1146                           ;boot.c: 378: {
  1147  006210  0051               	dw	?_SendFile
  1148  006212                     _SendFile:
  1149                           ; errata NOP at function entry point
  1150  006212  FFFF               	dw	65535
  1151  006214                     f4082:
  1152  000000                     
  1153                           ;boot.c: 379: unsigned char c1,c2;
  1154  006214  0100               	movlb	__Lparam shr (0+8)
  1155  006216  EE00 F013          	lfsr	0,19
  1156  00621A  5151               	movf	?_SendFile^(__Lparam& (0+65280)),w
  1157  00621C  26E9               	addwf	fsr0l,f,c
  1158  00621E  5152               	movf	(?_SendFile+1)^(__Lparam& (0+65280)),w
  1159  006220  22EA               	addwfc	fsr0h,f,c
  1160  006222  CFEE F000          	movff	postinc0,btemp
  1161  006226  CFEE F001          	movff	postinc0,btemp+1
  1162  00622A  CFEE F002          	movff	postinc0,btemp+2
  1163  00622E  CFEE F003          	movff	postinc0,btemp+3
  1164  006232  0E09               	movlw	9
  1165  006234  ECC1  F03E         	call	llslr
  1166  006238  C000  F055         	movff	btemp,?a_SendFile+2
  1167  00623C  C001  F056         	movff	btemp+1,?a_SendFile+3
  1168                           ;boot.c: 385: while (n--)
  1169  006240                     l85:
  1170  006240  0100               	movlb	__Lparam shr (0+8)
  1171  006242  5155               	movf	(?a_SendFile+2)^(__Lparam& (0+65280)),w
  1172  006244  6E00               	movwf	btemp,c
  1173  006246  5156               	movf	(?a_SendFile+3)^(__Lparam& (0+65280)),w
  1174  006248  6E01               	movwf	btemp+1,c
  1175  00624A  0755               	decf	(?a_SendFile+2)^(__Lparam& (0+65280)),f,b
  1176  00624C  0E00               	movlw	0
  1177  00624E  5B56               	subwfb	(?a_SendFile+3)^(__Lparam& (0+65280)),f,
      +                          b
  1178  006250  5001               	movf	btemp+1,w,c
  1179  006252  1000               	iorwf	btemp,w,c
  1180  006254  E05B               	bz	u430
  1181                           ;boot.c: 386: {
  1182  006256  C051  F0D9         	movff	?_SendFile,?_FileRead
  1183  00625A  C052  F0DA         	movff	?_SendFile+1,?_FileRead+1
  1184  00625E  EC9B  F01B         	call	_FileRead	;wreg free
  1185  006262                     l90:
  1186                           ;boot.c: 390: do
  1187                           ;boot.c: 391: {
  1188  006262  9280               	bcf	3968,1,c	;volatile
  1189                           ;boot.c: 394: c1 = SPI(0);
  1190  006264  0E00               	movlw	0
  1191  006266  EC35  F03C         	call	_SPI
  1192  00626A  0100               	movlb	__Lparam shr (0+8)
  1193  00626C  6F54               	movwf	(?a_SendFile+1)^(__Lparam& (0+65280)),b
  1194                           ;boot.c: 395: c2 = SPI(0);
  1195  00626E  0E00               	movlw	0
  1196  006270  EC35  F03C         	call	_SPI
  1197  006274  0100               	movlb	__Lparam shr (0+8)
  1198  006276  6F53               	movwf	?a_SendFile^(__Lparam& (0+65280)),b
  1199                           ;boot.c: 396: SPI(0);
  1200  006278  0E00               	movlw	0
  1201  00627A  EC35  F03C         	call	_SPI
  1202                           ;boot.c: 397: SPI(0);
  1203  00627E  0E00               	movlw	0
  1204  006280  EC35  F03C         	call	_SPI
  1205                           ;boot.c: 398: SPI(0);
  1206  006284  0E00               	movlw	0
  1207  006286  EC35  F03C         	call	_SPI
  1208                           ;boot.c: 399: SPI(0);
  1209  00628A  0E00               	movlw	0
  1210  00628C  EC35  F03C         	call	_SPI
  1211                           ;boot.c: 400: RA1=1;
  1212  006290  8280               	bsf	3968,1,c	;volatile
  1213                           ;boot.c: 401: }
  1214  006292  0100               	movlb	__Lparam shr (0+8)
  1215  006294  A154               	btfss	(?a_SendFile+1)^(__Lparam& (0+65280)),0,b
  1216  006296  D7E5               	goto	l90
  1217                           ;boot.c: 404: putch('*');
  1218  006298  0E2A               	movlw	42
  1219  00629A  EC74  F03C         	call	_putch
  1220                           ;boot.c: 407: RA1=0;
  1221  00629E  9280               	bcf	3968,1,c	;volatile
  1222                           ;boot.c: 408: c1 = SPI(0);
  1223  0062A0  0E00               	movlw	0
  1224  0062A2  EC35  F03C         	call	_SPI
  1225  0062A6  0100               	movlb	__Lparam shr (0+8)
  1226  0062A8  6F54               	movwf	(?a_SendFile+1)^(__Lparam& (0+65280)),b
  1227                           ;boot.c: 409: c2 = SPI(0);
  1228  0062AA  0E00               	movlw	0
  1229  0062AC  EC35  F03C         	call	_SPI
  1230  0062B0  0100               	movlb	__Lparam shr (0+8)
  1231  0062B2  6F53               	movwf	?a_SendFile^(__Lparam& (0+65280)),b
  1232                           ;boot.c: 410: SPI(0);
  1233  0062B4  0E00               	movlw	0
  1234  0062B6  EC35  F03C         	call	_SPI
  1235                           ;boot.c: 411: SPI(0);
  1236  0062BA  0E00               	movlw	0
  1237  0062BC  EC35  F03C         	call	_SPI
  1238                           ;boot.c: 412: SPI(0);
  1239  0062C0  0E00               	movlw	0
  1240  0062C2  EC35  F03C         	call	_SPI
  1241                           ;boot.c: 413: SPI(0);
  1242  0062C6  0E00               	movlw	0
  1243  0062C8  EC35  F03C         	call	_SPI
  1244                           ;boot.c: 415: p=secbuf;
  1245  0062CC  0EFF               	movlw	low _secbuf
  1246  0062CE  6EE1               	movwf	fsr1l,c
  1247  0062D0  0E03               	movlw	high _secbuf
  1248  0062D2  6EE2               	movwf	fsr1h,c
  1249                           ;boot.c: 416: j=128;
  1250  0062D4  0E80               	movlw	128
  1251  0062D6  6ED9               	movwf	fsr2l,c
  1252  0062D8                     l93:
  1253                           ;boot.c: 417: do
  1254                           ;boot.c: 418: {
  1255  0062D8  CFE6 FFC9          	movff	postinc1,4041	;volatile
  1256                           ;boot.c: 420: while (!BF);
  1257  0062DC                     l94:
  1258  0062DC  A0C7               	btfss	4039,0,c	;volatile
  1259  0062DE  D7FE               	goto	l94
  1260                           ;boot.c: 421: SSPBUF=*(p++);
  1261  0062E0  CFE6 FFC9          	movff	postinc1,4041	;volatile
  1262                           ;boot.c: 422: while (!BF);
  1263  0062E4                     l97:
  1264  0062E4  A0C7               	btfss	4039,0,c	;volatile
  1265  0062E6  D7FE               	goto	l97
  1266                           ;boot.c: 423: SSPBUF=*(p++);
  1267  0062E8  CFE6 FFC9          	movff	postinc1,4041	;volatile
  1268                           ;boot.c: 424: while (!BF);
  1269  0062EC                     l100:
  1270  0062EC  A0C7               	btfss	4039,0,c	;volatile
  1271  0062EE  D7FE               	goto	l100
  1272                           ;boot.c: 425: SSPBUF=*(p++);
  1273  0062F0  CFE6 FFC9          	movff	postinc1,4041	;volatile
  1274                           ;boot.c: 426: while (!BF);
  1275  0062F4                     l103:
  1276  0062F4  A0C7               	btfss	4039,0,c	;volatile
  1277  0062F6  D7FE               	goto	l103
  1278                           ;boot.c: 427: }
  1279  0062F8  2ED9               	decfsz	fsr2l,f,c
  1280  0062FA  D7EE               	goto	l93
  1281                           ;boot.c: 429: RA1=1;
  1282  0062FC  8280               	bsf	3968,1,c	;volatile
  1283                           ;boot.c: 431: FileNextSector(file);
  1284  0062FE  C051  F065         	movff	?_SendFile,?_FileNextSector
  1285  006302  C052  F066         	movff	?_SendFile+1,?_FileNextSector+1
  1286  006306  EC73  F019         	call	_FileNextSector	;wreg free
  1287  00630A  D79A               	goto	l85
  1288  00630C                     u430:
  1289                           ;boot.c: 432: }
  1290  00630C  0012               	return	
  1291  00630E  FFFF               	dw	65535	; Nop inserted for errata
  1292  006310  D781               	goto	f4082
  1293  006312                     __end_of_SendFile:
  1294                           ;boot.c: 436: void BootExit(void)
  1295                           ;boot.c: 437: {
  1296  006312                     _BootExit:
  1297                           ; errata NOP at function entry point
  1298  006312  FFFF               	dw	65535
  1299  006314                     f4092:
  1300  000000                     
  1301                           ;boot.c: 465: return;
  1302  006314  D001               	goto	l108
  1303  006316                     l110:
  1304                           ;boot.c: 466: }
  1305  006316  8280               	bsf	3968,1,c	;volatile
  1306  006318                     l108:
  1307                           ;boot.c: 438: char c1,c2,c3,c4;
  1308                           ;boot.c: 441: {
  1309  006318  9280               	bcf	3968,1,c	;volatile
  1310                           ;boot.c: 443: c1 = SPI(0x10);
  1311  00631A  0E10               	movlw	16
  1312  00631C  EC35  F03C         	call	_SPI
  1313  006320  0100               	movlb	__Lparam shr (0+8)
  1314  006322  6F47               	movwf	(?a_BootExit+1)^(__Lparam& (0+65280)),b
  1315                           ;boot.c: 444: c2 = SPI(0x01);
  1316  006324  0E01               	movlw	1
  1317  006326  EC35  F03C         	call	_SPI
  1318  00632A  0100               	movlb	__Lparam shr (0+8)
  1319  00632C  6F46               	movwf	?a_BootExit^(__Lparam& (0+65280)),b
  1320                           ;boot.c: 445: SPI(0);
  1321  00632E  0E00               	movlw	0
  1322  006330  EC35  F03C         	call	_SPI
  1323                           ;boot.c: 446: SPI(0);
  1324  006334  0E00               	movlw	0
  1325  006336  EC35  F03C         	call	_SPI
  1326                           ;boot.c: 447: c3 = SPI(0);
  1327  00633A  0E00               	movlw	0
  1328  00633C  EC35  F03C         	call	_SPI
  1329  006340  0100               	movlb	__Lparam shr (0+8)
  1330  006342  6F48               	movwf	(?a_BootExit+2)^(__Lparam& (0+65280)),b
  1331                           ;boot.c: 448: c4 = SPI(0);
  1332  006344  0E00               	movlw	0
  1333  006346  EC35  F03C         	call	_SPI
  1334  00634A  0100               	movlb	__Lparam shr (0+8)
  1335  00634C  6F49               	movwf	(?a_BootExit+3)^(__Lparam& (0+65280)),b
  1336                           ;boot.c: 454: if (c1 & 0x01)
  1337  00634E  A147               	btfss	(?a_BootExit+1)^(__Lparam& (0+65280)),0,b
  1338  006350  D7E2               	goto	l110
  1339                           ;boot.c: 455: {
  1340  006352  5148               	movf	(?a_BootExit+2)^(__Lparam& (0+65280)),w
  1341  006354  0A80               	xorlw	-128
  1342  006356  E108               	bnz	l111
  1343  006358  5149               	movf	(?a_BootExit+3)^(__Lparam& (0+65280)),w
  1344  00635A  0A06               	xorlw	6
  1345  00635C  E105               	bnz	l111
  1346                           ;boot.c: 458: {
  1347  00635E  0100               	movlb	__Lparam shr (0+8)
  1348  006360  6B51               	clrf	?_SendBootFPGACommand^(__Lparam& (0+65280)
      +                          ),b
  1349  006362  6B52               	clrf	(?_SendBootFPGACommand+1)^(__Lparam& (0+65
      +                          280)),b
  1350  006364  0E03               	movlw	3
  1351  006366  D839               	call	_SendBootFPGACommand
  1352  006368                     l111:
  1353                           ;boot.c: 463: }
  1354  006368  8280               	bsf	3968,1,c	;volatile
  1355                           ;boot.c: 468: }
  1356  00636A  0012               	return	
  1357  00636C  FFFF               	dw	65535	; Nop inserted for errata
  1358  00636E  D7D2               	goto	f4092
  1359  006370                     __end_of_BootExit:
  1360                           ;boot.c: 471: void ClearMemory(unsigned char bas
      +                          e, unsigned char size)
  1361                           ;boot.c: 472: {
  1362  006370  0042               	dw	?_ClearMemory
  1363  006372                     _ClearMemory:
  1364                           ; errata NOP at function entry point
  1365  006372  FFFF               	dw	65535
  1366  006374                     f4102:
  1367  000000                     
  1368                           ;_base stored from wreg
  1369  006374  0100               	movlb	__Lparam shr (0+8)
  1370  006376  6F43               	movwf	?a_ClearMemory^(__Lparam& (0+65280)),b
  1371                           ;boot.c: 499: return;
  1372  006378  D001               	goto	l114
  1373  00637A                     l116:
  1374                           ;boot.c: 500: }
  1375  00637A  8280               	bsf	3968,1,c	;volatile
  1376  00637C                     l114:
  1377                           ;boot.c: 473: unsigned char c1, c2, c3, c4;
  1378                           ;boot.c: 476: {
  1379  00637C  9280               	bcf	3968,1,c	;volatile
  1380                           ;boot.c: 478: c1 = SPI(0x10);
  1381  00637E  0E10               	movlw	16
  1382  006380  EC35  F03C         	call	_SPI
  1383  006384  0100               	movlb	__Lparam shr (0+8)
  1384  006386  6F45               	movwf	(?a_ClearMemory+2)^(__Lparam& (0+65280)),
      +                          b
  1385                           ;boot.c: 479: c2 = SPI(0x01);
  1386  006388  0E01               	movlw	1
  1387  00638A  EC35  F03C         	call	_SPI
  1388  00638E  0100               	movlb	__Lparam shr (0+8)
  1389  006390  6F44               	movwf	(?a_ClearMemory+1)^(__Lparam& (0+65280)),
      +                          b
  1390                           ;boot.c: 480: SPI(0);
  1391  006392  0E00               	movlw	0
  1392  006394  EC35  F03C         	call	_SPI
  1393                           ;boot.c: 481: SPI(0);
  1394  006398  0E00               	movlw	0
  1395  00639A  EC35  F03C         	call	_SPI
  1396                           ;boot.c: 482: c3 = SPI(0);
  1397  00639E  0E00               	movlw	0
  1398  0063A0  EC35  F03C         	call	_SPI
  1399  0063A4  0100               	movlb	__Lparam shr (0+8)
  1400  0063A6  6F46               	movwf	(?a_ClearMemory+3)^(__Lparam& (0+65280)),
      +                          b
  1401                           ;boot.c: 483: c4 = SPI(0);
  1402  0063A8  0E00               	movlw	0
  1403  0063AA  EC35  F03C         	call	_SPI
  1404  0063AE  0100               	movlb	__Lparam shr (0+8)
  1405  0063B0  6F47               	movwf	(?a_ClearMemory+4)^(__Lparam& (0+65280)),
      +                          b
  1406                           ;boot.c: 489: if (c1 & 0x01)
  1407  0063B2  A145               	btfss	(?a_ClearMemory+2)^(__Lparam& (0+65280)),
      +                          0,b
  1408  0063B4  D7E2               	goto	l116
  1409                           ;boot.c: 490: {
  1410  0063B6  5146               	movf	(?a_ClearMemory+3)^(__Lparam& (0+65280)),w
  1411  0063B8  0A80               	xorlw	-128
  1412  0063BA  E10A               	bnz	l117
  1413  0063BC  5147               	movf	(?a_ClearMemory+4)^(__Lparam& (0+65280)),w
  1414  0063BE  0A06               	xorlw	6
  1415  0063C0  E107               	bnz	l117
  1416                           ;boot.c: 492: {
  1417  0063C2  0100               	movlb	__Lparam shr (0+8)
  1418  0063C4  5143               	movf	?a_ClearMemory^(__Lparam& (0+65280)),w
  1419  0063C6  6F51               	movwf	?_SendBootFPGACommand^(__Lparam& (0+65280
      +                          )),b
  1420  0063C8  5142               	movf	?_ClearMemory^(__Lparam& (0+65280)),w
  1421  0063CA  6F52               	movwf	(?_SendBootFPGACommand+1)^(__Lparam& (0+6
      +                          5280)),b
  1422  0063CC  0E04               	movlw	4
  1423  0063CE  D805               	call	_SendBootFPGACommand
  1424  0063D0                     l117:
  1425                           ;boot.c: 497: }
  1426  0063D0  8280               	bsf	3968,1,c	;volatile
  1427                           ;boot.c: 502: }
  1428  0063D2  0012               	return	
  1429  0063D4  FFFF               	dw	65535	; Nop inserted for errata
  1430  0063D6  D7CE               	goto	f4102
  1431  0063D8                     __end_of_ClearMemory:
  1432                           ;boot.c: 506: void SendBootFPGACommand(unsigned 
      +                          char cmd, unsigned char p1, unsigned char p2)
  1433                           ;boot.c: 507: {
  1434  0063D8  0051               	dw	?_SendBootFPGACommand
  1435  0063DA                     _SendBootFPGACommand:
  1436                           ; errata NOP at function entry point
  1437  0063DA  FFFF               	dw	65535
  1438  0063DC                     f4112:
  1439  000000                     
  1440                           ;_cmd stored from wreg
  1441  0063DC  0100               	movlb	__Lparam shr (0+8)
  1442  0063DE  6F53               	movwf	?a_SendBootFPGACommand^(__Lparam& (0+6528
      +                          0)),b
  1443                           ;boot.c: 509: SPI(0xAA);
  1444  0063E0  0EAA               	movlw	170
  1445  0063E2  EC35  F03C         	call	_SPI
  1446                           ;boot.c: 510: SPI(0x67);
  1447  0063E6  0E67               	movlw	103
  1448  0063E8  EC35  F03C         	call	_SPI
  1449                           ;boot.c: 512: SPI(0x00);
  1450  0063EC  0E00               	movlw	0
  1451  0063EE  EC35  F03C         	call	_SPI
  1452                           ;boot.c: 513: SPI(cmd);
  1453  0063F2  0100               	movlb	__Lparam shr (0+8)
  1454  0063F4  5153               	movf	?a_SendBootFPGACommand^(__Lparam& (0+65280
      +                          )),w
  1455  0063F6  EC35  F03C         	call	_SPI
  1456                           ;boot.c: 516: SPI(0x00);
  1457  0063FA  0E00               	movlw	0
  1458  0063FC  EC35  F03C         	call	_SPI
  1459                           ;boot.c: 517: SPI(p1);
  1460  006400  0100               	movlb	__Lparam shr (0+8)
  1461  006402  5151               	movf	?_SendBootFPGACommand^(__Lparam& (0+65280)
      +                          ),w
  1462  006404  EC35  F03C         	call	_SPI
  1463                           ;boot.c: 518: SPI(0x00);
  1464  006408  0E00               	movlw	0
  1465  00640A  EC35  F03C         	call	_SPI
  1466                           ;boot.c: 519: SPI(0x00);
  1467  00640E  0E00               	movlw	0
  1468  006410  EC35  F03C         	call	_SPI
  1469                           ;boot.c: 522: SPI(0x00);
  1470  006414  0E00               	movlw	0
  1471  006416  EC35  F03C         	call	_SPI
  1472                           ;boot.c: 523: SPI(p2);
  1473  00641A  0100               	movlb	__Lparam shr (0+8)
  1474  00641C  5152               	movf	(?_SendBootFPGACommand+1)^(__Lparam& (0+65
      +                          280)),w
  1475  00641E  EC35  F03C         	call	_SPI
  1476                           ;boot.c: 524: SPI(0x00);
  1477  006422  0E00               	movlw	0
  1478  006424  EC35  F03C         	call	_SPI
  1479                           ;boot.c: 525: SPI(0x00);
  1480  006428  0E00               	movlw	0
  1481  00642A  EF35  F03C         	goto	_SPI
  1482                           ;boot.c: 526: }
  1483  00642E  FFFF               	dw	65535	; Nop inserted for errata
  1484  006430  D7D5               	goto	f4112
  1485  006432                     __end_of_SendBootFPGACommand:
  1486                           
  1487                           	psect	const
  1488  000F12                     u19:
  1489  000F12  4D                 	db	77	;'M'
  1490  000F13  49                 	db	73	;'I'
  1491  000F14  4E                 	db	78	;'N'
  1492  000F15  49                 	db	73	;'I'
  1493  000F16  4D                 	db	77	;'M'
  1494  000F17  49                 	db	73	;'I'
  1495  000F18  47                 	db	71	;'G'
  1496  000F19  31                 	db	49	;'1'
  1497  000F1A  42                 	db	66	;'B'
  1498  000F1B  49                 	db	73	;'I'
  1499  000F1C  4E                 	db	78	;'N'
  1500  000F1D  00                 	db	0
  1501  000F1E                     u59:
  1502  000F1E  55                 	db	85	;'U'
  1503  000F1F  70                 	db	112	;'p'
  1504  000F20  6C                 	db	108	;'l'
  1505  000F21  6F                 	db	111	;'o'
  1506  000F22  61                 	db	97	;'a'
  1507  000F23  64                 	db	100	;'d'
  1508  000F24  69                 	db	105	;'i'
  1509  000F25  6E                 	db	110	;'n'
  1510  000F26  67                 	db	103	;'g'
  1511  000F27  20                 	db	32
  1512  000F28  32                 	db	50	;'2'
  1513  000F29  35                 	db	53	;'5'
  1514  000F2A  36                 	db	54	;'6'
  1515  000F2B  4B                 	db	75	;'K'
  1516  000F2C  42                 	db	66	;'B'
  1517  000F2D  20                 	db	32
  1518  000F2E  4B                 	db	75	;'K'
  1519  000F2F  69                 	db	105	;'i'
  1520  000F30  63                 	db	99	;'c'
  1521  000F31  6B                 	db	107	;'k'
  1522  000F32  73                 	db	115	;'s'
  1523  000F33  74                 	db	116	;'t'
  1524  000F34  61                 	db	97	;'a'
  1525  000F35  72                 	db	114	;'r'
  1526  000F36  74                 	db	116	;'t'
  1527  000F37  2E                 	db	46
  1528  000F38  2E                 	db	46
  1529  000F39  2E                 	db	46
  1530  000F3A  00                 	db	0
  1531  000F3B                     u49:
  1532  000F3B  55                 	db	85	;'U'
  1533  000F3C  70                 	db	112	;'p'
  1534  000F3D  6C                 	db	108	;'l'
  1535  000F3E  6F                 	db	111	;'o'
  1536  000F3F  61                 	db	97	;'a'
  1537  000F40  64                 	db	100	;'d'
  1538  000F41  69                 	db	105	;'i'
  1539  000F42  6E                 	db	110	;'n'
  1540  000F43  67                 	db	103	;'g'
  1541  000F44  20                 	db	32
  1542  000F45  35                 	db	53	;'5'
  1543  000F46  31                 	db	49	;'1'
  1544  000F47  32                 	db	50	;'2'
  1545  000F48  4B                 	db	75	;'K'
  1546  000F49  42                 	db	66	;'B'
  1547  000F4A  20                 	db	32
  1548  000F4B  4B                 	db	75	;'K'
  1549  000F4C  69                 	db	105	;'i'
  1550  000F4D  63                 	db	99	;'c'
  1551  000F4E  6B                 	db	107	;'k'
  1552  000F4F  73                 	db	115	;'s'
  1553  000F50  74                 	db	116	;'t'
  1554  000F51  61                 	db	97	;'a'
  1555  000F52  72                 	db	114	;'r'
  1556  000F53  74                 	db	116	;'t'
  1557  000F54  2E                 	db	46
  1558  000F55  2E                 	db	46
  1559  000F56  2E                 	db	46
  1560  000F57  00                 	db	0
  1561  000F58                     u99:
  1562  000F58  0A                 	db	10
  1563  000F59  55                 	db	85	;'U'
  1564  000F5A  70                 	db	112	;'p'
  1565  000F5B  6C                 	db	108	;'l'
  1566  000F5C  6F                 	db	111	;'o'
  1567  000F5D  61                 	db	97	;'a'
  1568  000F5E  64                 	db	100	;'d'
  1569  000F5F  69                 	db	105	;'i'
  1570  000F60  6E                 	db	110	;'n'
  1571  000F61  67                 	db	103	;'g'
  1572  000F62  20                 	db	32
  1573  000F63  41                 	db	65	;'A'
  1574  000F64  63                 	db	99	;'c'
  1575  000F65  74                 	db	116	;'t'
  1576  000F66  69                 	db	105	;'i'
  1577  000F67  6F                 	db	111	;'o'
  1578  000F68  6E                 	db	110	;'n'
  1579  000F69  20                 	db	32
  1580  000F6A  52                 	db	82	;'R'
  1581  000F6B  65                 	db	101	;'e'
  1582  000F6C  70                 	db	112	;'p'
  1583  000F6D  6C                 	db	108	;'l'
  1584  000F6E  61                 	db	97	;'a'
  1585  000F6F  79                 	db	121	;'y'
  1586  000F70  20                 	db	32
  1587  000F71  52                 	db	82	;'R'
  1588  000F72  4F                 	db	79	;'O'
  1589  000F73  4D                 	db	77	;'M'
  1590  000F74  2E                 	db	46
  1591  000F75  2E                 	db	46
  1592  000F76  2E                 	db	46
  1593  000F77  00                 	db	0
  1594  000F78                     u79:
  1595  000F78                     u29:
  1596  000F78  4E                 	db	78	;'N'
  1597  000F79  6F                 	db	111	;'o'
  1598  000F7A  20                 	db	32
  1599  000F7B  22                 	db	34
  1600  000F7C  00                 	db	0
  1601  000F7D                     u69:
  1602  000F7D  55                 	db	85	;'U'
  1603  000F7E  6E                 	db	110	;'n'
  1604  000F7F  73                 	db	115	;'s'
  1605  000F80  75                 	db	117	;'u'
  1606  000F81  70                 	db	112	;'p'
  1607  000F82  70                 	db	112	;'p'
  1608  000F83  6F                 	db	111	;'o'
  1609  000F84  72                 	db	114	;'r'
  1610  000F85  74                 	db	116	;'t'
  1611  000F86  65                 	db	101	;'e'
  1612  000F87  64                 	db	100	;'d'
  1613  000F88  20                 	db	32
  1614  000F89  4B                 	db	75	;'K'
  1615  000F8A  69                 	db	105	;'i'
  1616  000F8B  63                 	db	99	;'c'
  1617  000F8C  6B                 	db	107	;'k'
  1618  000F8D  73                 	db	115	;'s'
  1619  000F8E  74                 	db	116	;'t'
  1620  000F8F  61                 	db	97	;'a'
  1621  000F90  72                 	db	114	;'r'
  1622  000F91  74                 	db	116	;'t'
  1623  000F92  20                 	db	32
  1624  000F93  52                 	db	82	;'R'
  1625  000F94  4F                 	db	79	;'O'
  1626  000F95  4D                 	db	77	;'M'
  1627  000F96  20                 	db	32
  1628  000F97  66                 	db	102	;'f'
  1629  000F98  69                 	db	105	;'i'
  1630  000F99  6C                 	db	108	;'l'
  1631  000F9A  65                 	db	101	;'e'
  1632  000F9B  20                 	db	32
  1633  000F9C  73                 	db	115	;'s'
  1634  000F9D  69                 	db	105	;'i'
  1635  000F9E  7A                 	db	122	;'z'
  1636  000F9F  65                 	db	101	;'e'
  1637  000FA0  21                 	db	33
  1638  000FA1  00                 	db	0
  1639  000FA2                     u39:
  1640  000FA2                     u89:
  1641  000FA2  22                 	db	34
  1642  000FA3  20                 	db	32
  1643  000FA4  66                 	db	102	;'f'
  1644  000FA5  69                 	db	105	;'i'
  1645  000FA6  6C                 	db	108	;'l'
  1646  000FA7  65                 	db	101	;'e'
  1647  000FA8  21                 	db	33
  1648  000FA9  00                 	db	0
  1649  000FAA                     u109:
  1650  000FAA  0A                 	db	10
  1651  000FAB  55                 	db	85	;'U'
  1652  000FAC  6E                 	db	110	;'n'
  1653  000FAD  73                 	db	115	;'s'
  1654  000FAE  75                 	db	117	;'u'
  1655  000FAF  70                 	db	112	;'p'
  1656  000FB0  70                 	db	112	;'p'
  1657  000FB1  6F                 	db	111	;'o'
  1658  000FB2  72                 	db	114	;'r'
  1659  000FB3  74                 	db	116	;'t'
  1660  000FB4  65                 	db	101	;'e'
  1661  000FB5  64                 	db	100	;'d'
  1662  000FB6  20                 	db	32
  1663  000FB7  41                 	db	65	;'A'
  1664  000FB8  52                 	db	82	;'R'
  1665  000FB9  33                 	db	51	;'3'
  1666  000FBA  2E                 	db	46
  1667  000FBB  52                 	db	82	;'R'
  1668  000FBC  4F                 	db	79	;'O'
  1669  000FBD  4D                 	db	77	;'M'
  1670  000FBE  20                 	db	32
  1671  000FBF  66                 	db	102	;'f'
  1672  000FC0  69                 	db	105	;'i'
  1673  000FC1  6C                 	db	108	;'l'
  1674  000FC2  65                 	db	101	;'e'
  1675  000FC3  20                 	db	32
  1676  000FC4  73                 	db	115	;'s'
  1677  000FC5  69                 	db	105	;'i'
  1678  000FC6  7A                 	db	122	;'z'
  1679  000FC7  65                 	db	101	;'e'
  1680  000FC8  21                 	db	33
  1681  000FC9  21                 	db	33
  1682  000FCA  21                 	db	33
  1683  000FCB  00                 	db	0
  1684  000000                     
  1685  000000                     
  1686  000000                     
  1687  000000                     
  1688  000000                     
  1689  000000                     
  1690  000000                     
  1691  000000                     
  1692  000000                     
  1693  000000                     
  1694  000000                     
  1695  000000                     
  1696  000000                     
  1697  000000                     
  1698  000000                     
  1699  000000                     
  1700  000000                     
  1701  000000                     
  1702  000000                     
  1703  000000                     
  1704  000000                     
  1705  000000                     
  1706  000000                     
  1707  000000                     
  1708  000000                     
  1709  000000                     
  1710  000000                     
  1711  000000                     
  1712  000000                     
  1713  000000                     
  1714  000000                     
  1715  000000                     
  1716  000000                     
  1717  000000                     
  1718  000000                     
  1719  000000                     
  1720  000000                     
  1721  000000                     
  1722  000000                     
  1723  000000                     
  1724  000000                     
  1725  000000                     
  1726  000000                     
  1727  000000                     
  1728  000000                     
  1729  000000                     
  1730  000000                     
  1731  000000                     
  1732  000000                     
  1733  000000                     
  1734  000000                     
  1735  000000                     
  1736  000000                     
  1737  000000                     
  1738  000000                     
  1739  000000                     
  1740  000000                     
  1741  000000                     
  1742  000000                     
  1743  000000                     
  1744  000000                     
  1745  000000                     
  1746  000000                     
  1747  000000                     
  1748  000000                     
  1749  000000                     
  1750  000000                     
  1751  000000                     
  1752  000000                     
  1753  000000                     
  1754  000000                     
  1755  000000                     
  1756  000000                     
  1757  000000                     
  1758  000000                     
  1759  000000                     
  1760  000000                     
  1761  000000                     
  1762  000000                     
  1763  000000                     
  1764  000000                     
  1765  000000                     
  1766  000000                     
  1767  000000                     
  1768  000000                     
  1769  000000                     
  1770  000000                     
  1771  000000                     
  1772  000000                     
  1773  000000                     
  1774  000000                     
  1775  000000                     
  1776  000000                     
  1777  000000                     
  1778  000000                     
  1779  000000                     
  1780  000000                     
  1781  000000                     
  1782  000000                     
  1783  000000                     
  1784  000000                     
  1785  000000                     
  1786  000000                     
  1787  000000                     
  1788  000000                     
  1789  000000                     
  1790  000000                     
  1791  000000                     
  1792  000000                     
  1793  000000                     
  1794  000000                     
  1795  000000                     
  1796  000000                     
  1797  000000                     
  1798  000000                     
  1799  000000                     
  1800  000000                     
  1801  000000                     
  1802  000000                     
  1803  000000                     
  1804  000000                     
  1805  000000                     
  1806  000000                     
  1807  000000                     
  1808  000000                     
  1809  000000                     
  1810  000000                     
  1811  000000                     
  1812  000000                     
  1813  000000                     
  1814  000000                     
  1815  000000                     
  1816  000000                     
  1817  000000                     
  1818  000000                     
  1819  000000                     
  1820  000000                     
  1821  000000                     
  1822  000000                     
  1823  000000                     
  1824  000000                     
  1825  000000                     
  1826  000000                     
  1827  000000                     
  1828  000000                     
  1829  000000                     
  1830  000000                     
  1831  000000                     
  1832  000000                     
  1833  000000                     
  1834  000000                     
  1835  000000                     
  1836  000000                     
  1837  000000                     
  1838  000000                     
  1839  000000                     
  1840  000000                     
  1841  000000                     
  1842  000000                     
  1843  000000                     
  1844  000000                     
  1845  000000                     
  1846  000000                     
  1847  000000                     
  1848  000000                     
  1849  000000                     
  1850  000000                     
  1851  000000                     
  1852  000000                     
  1853  000000                     
  1854  000000                     
  1855  000000                     
  1856  000000                     
  1857  000000                     
  1858  000000                     
  1859  000000                     
  1860  000000                     
  1861  000000                     
  1862  000000                     
  1863  000000                     
  1864  000000                     
  1865  000000                     
  1866  000000                     
  1867  000000                     
  1868  000000                     
  1869  000000                     
  1870  000000                     
  1871  000000                     
  1872  000000                     
  1873  000000                     
  1874  000000                     
  1875  000000                     
  1876  000000                     
  1877  000000                     
  1878  000000                     
  1879  000000                     
  1880  000000                     
  1881  000000                     
  1882  000000                     
  1883  000000                     
  1884  000000                     
  1885  000000                     
  1886  000000                     
  1887  000000                     
  1888  000000                     
  1889  000000                     
  1890  000000                     
  1891  000000                     
  1892  000000                     
  1893  000000                     
  1894  000000                     
  1895  000000                     
  1896  000000                     
  1897  000000                     
  1898  000000                     
  1899  000000                     
  1900  000000                     
  1901  000000                     
  1902  000000                     
  1903  000000                     
  1904  000000                     
  1905  000000                     
  1906  000000                     
  1907  000000                     
  1908  000000                     
  1909  000000                     
  1910  000000                     
  1911  000000                     
  1912  000000                     
  1913  000000                     
  1914  000000                     
  1915  000000                     
  1916  000000                     
  1917  000000                     
  1918  000000                     
  1919  000000                     
  1920  000000                     
  1921  000000                     
  1922  000000                     
  1923  000000                     
  1924  000000                     
  1925  000000                     
  1926  000000                     
  1927  000000                     
  1928  000000                     
  1929  000000                     
  1930  000000                     
  1931  000000                     
  1932  000000                     
  1933  000000                     
  1934  000000                     
  1935  000000                     
  1936  000000                     
  1937  000000                     
  1938  000000                     
  1939  000000                     
  1940  000000                     
  1941  000000                     
  1942  000000                     
  1943  000000                     
  1944  000000                     
  1945  000000                     
  1946  000000                     
  1947  000000                     
  1948  000000                     
  1949  000000                     
  1950  000000                     
  1951  000000                     
  1952  000000                     
  1953  000000                     
  1954  000000                     
  1955  000000                     
  1956  000000                     
  1957  000000                     
  1958  000000                     
  1959  000000                     
  1960  000000                     
  1961  000000                     
  1962  000000                     
  1963  000000                     
  1964  000000                     
  1965  000000                     
  1966  000000                     
  1967  000000                     
  1968  000000                     
  1969  000000                     
  1970  000000                     
  1971  000000                     
  1972  000000                     
  1973  000000                     
  1974  000000                     
  1975  000000                     
  1976  000000                     
  1977  000000                     
  1978  000000                     
  1979  000000                     
  1980  000000                     
  1981  000000                     
  1982  000000                     
  1983  000000                     
  1984  000000                     
  1985  000000                     
  1986  000000                     
  1987  000000                     
  1988  000000                     
  1989  000000                     
  1990  000000                     
  1991  000000                     
  1992  000000                     
  1993  000000                     
  1994  000000                     
  1995  000000                     
  1996  000000                     
  1997  000000                     
  1998  000000                     
  1999  000000                     
  2000  000000                     
  2001  000000                     
  2002  000000                     
  2003  000000                     
  2004  000000                     
  2005  000000                     
  2006  000000                     
  2007  000000                     
  2008  000000                     
  2009  000000                     
  2010  000000                     
  2011  000000                     
  2012  000000                     
  2013  000000                     
  2014  000000                     
  2015  000000                     
  2016  000000                     
  2017  000000                     
  2018  000000                     
  2019  000000                     
  2020  000000                     
  2021  000000                     
  2022  000000                     
  2023  000000                     
  2024  000000                     
  2025  000000                     
  2026  000000                     
  2027  000000                     
  2028  000000                     
  2029  000000                     
  2030  000000                     
  2031  000000                     
  2032  000000                     
  2033  000000                     
  2034  000000                     
  2035  000000                     
  2036  000000                     
  2037  000000                     
  2038  000000                     
  2039  000000                     
  2040  000000                     
  2041  000000                     
  2042  000000                     
  2043  000000                     
  2044  000000                     
  2045  000000                     
  2046  000000                     
  2047  000000                     
  2048  000000                     
  2049  000000                     
  2050  000000                     
  2051  000000                     
  2052  000000                     
  2053  000000                     
  2054  000000                     
  2055  000000                     
  2056  000000                     
  2057  000000                     
  2058  000000                     
  2059  000000                     
  2060  000000                     
  2061  000000                     
  2062  000000                     
  2063  000000                     
  2064  000000                     
  2065  000000                     
  2066  000000                     
  2067  000000                     
  2068  000000                     
  2069  000000                     
  2070  000000                     
  2071  000000                     
  2072                           
  2073                           	psect	temp
  2074  000000                     btemp:
  2075  000000                     	ds	4
  2076                           tblptrh	equ	0xFF7
  2077                           tblptrl	equ	0xFF6
  2078                           tablat	equ	0xFF5
  2079                           prodh	equ	0xFF4
  2080                           prodl	equ	0xFF3
  2081                           indf0	equ	0xFEF
  2082                           postinc0	equ	0xFEE
  2083                           postdec0	equ	0xFED
  2084                           fsr0h	equ	0xFEA
  2085                           fsr0l	equ	0xFE9
  2086                           wreg	equ	0xFE8
  2087                           postinc1	equ	0xFE6
  2088                           fsr1h	equ	0xFE2
  2089                           fsr1l	equ	0xFE1
  2090                           fsr2l	equ	0xFD9
  2091                           status	equ	0xFD8


HI-TECH Software PICC-18 Macro Assembler V9.51PL2
Symbol Table                                           Mon Dec 07 22:12:02 2009

                  ?_SendFile 0051              ?a_ConfigureFpga 0040  
                  _ShiftFpga 7890                           l20 5C74  
                         l21 5C80                           l30 5E94  
                         l31 5CFA                           l40 5DAE  
                         l24 5CA6                           l16 5C70  
                         l41 5D80                           l50 5F62  
                         l42 5D82                           l35 5D20  
                         l27 5CD0                           l44 5E74  
                         l36 5D48                           l53 6008  
                         l45 5E8E                           l70 612A  
                         l62 6052                           l54 5FB8  
                         l46 5E92                           l63 6182  
                         l47 5F64                           l39 5D4E  
                         l80 61F2                           l64 617E  
                         l56 6006                           l48 5EE8  
                         l57 6186                           l65 60EE  
                         l49 5F1E                           l90 6262  
                         l58 601E                           l75 620A  
                         l93 62D8                           l85 6240  
                         l77 6196                           l94 62DC  
                         l78 6206                           l79 6202  
                         l97 62E4                           u10 5C98  
                         u20 5CBE                           u50 5D18  
                         u19 0F12                           u29 0F78  
                         u39 0FA2                           u49 0F3B  
                         u59 0F1E                           u69 0F7D  
                         u79 0F78                           u95 5D6E  
                         u89 0FA2                           u99 0F58  
                 ?a_BootExit 0046              _UploadKickstart 5E9C  
                        l100 62EC                          l110 6316  
                        l111 6368                          l103 62F4  
                        l114 637C                          l116 637A  
                        l108 6318                          l117 63D0  
                        u200 6042                          u210 604C  
                        u300 6152                          u109 0FAA  
                        u207 6038                          u320 6178  
                        u307 6148                          u430 630C  
                        u285 6118                          _SPI 786A  
           ?_UploadKickstart 0046                          wreg 000FE8  
                _ClearMemory 6372                  ?a_BootPrint 004A  
                 ?a_SendFile 0053          __end_of_ClearMemory 63D8  
                       f4012 5F6E                         f4102 6374  
                       f4112 63DC                         f4032 6012  
                       f4052 6190                         f4082 6214  
                       f4092 6314                         f3902 5CEE  
                       f3892 5C6E                         f3982 5E9E  
             _FileNextSector 32E6                         _Open 29A8  
                       _file 029E                ?a_ClearMemory 0043  
            ?_FileNextSector 0065                         fsr0h 000FEA  
                       indf0 000FEF                         fsr0l 000FE9  
                       fsr1l 000FE1                         fsr2l 000FD9  
                       btemp 0000           _UploadActionReplay 5F6C  
                       llslr 7D82                         prodl 000FF3  
               ?_ClearMemory 0042                 ?a_BootUpload 004C  
        _SendBootFPGACommand 63DA                        ?_Open 0049  
                 used_btemp0 0001                   used_btemp1 0001  
                 used_btemp2 0001                   used_btemp3 0001  
    __end_of_UploadKickstart 5F6A  __end_of_SendBootFPGACommand 6432  
                      _putch 78E8             __end_of_BootExit 6370  
                      tablat 000FF5                        status 000FD8  
        ?_UploadActionReplay 0040             __end_of_SendFile 6312  
                    __Lparam 0037                      __ramtop 0600  
                 _FatalError 5C6C           __end_of_FatalError 5CEC  
              _ConfigureFpga 5CEC                   _BootUpload 618E  
         __end_of_BootUpload 6210        __end_of_ConfigureFpga 5E9A  
 __end_of_UploadActionReplay 600E                  ?_BootUpload 0048  
                    postdec0 000FED                      postinc0 000FEE  
                    postinc1 000FE6         ?_SendBootFPGACommand 0051  
                     _secbuf 03FF                    _BootPrint 6010  
          __end_of_BootPrint 618C                       tblptrh 000FF7  
                     tblptrl 000FF6                   ?_BootPrint 0048  
      ?a_SendBootFPGACommand 0053                     _FileRead 3736  
                   _BootExit 6312                    ?_FileRead 00D9  
                   _SendFile 6212  
