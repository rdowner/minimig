

HI-TECH Software PICC-18 Macro Assembler V9.51PL2
                                                       Mon Dec 07 22:12:01 2009


     1                           	processor	18F252
     2                           	opt	pw 80
     3                           	psect	bigdata,global,class=BIGRAM,space=1,delta
      +                          =1
     4                           	psect	ibigdata,global,class=CODE,delta=1
     5                           	psect	const,global,class=CODE,delta=1
     6                           	psect	text,global,reloc=2,class=CODE,delta=1
     7                           	psect	rbit,global,bit,common,class=COMRAM,space
      +                          =1,delta=1
     8                           	psect	bigbss,global,class=BIGRAM,space=1,delta=
      +                          1
     9                           	psect	bss,global,class=RAM,space=1,delta=1
    10                           	psect	temp,global,ovrld,common,class=COMRAM,spa
      +                          ce=1,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,
      +                          delta=1
    12  000000                     
    13  000000                     
    14  000000                     
    15  000000                     
    16  000000                     
    17  000000                     
    18  000000                     
    19  000000                     
    20  000000                     
    21  000000                     
    22  000000                     
    23  000000                     
    24  000000                     
    25  000000                     
    26  000000                     
    27  000000                     
    28  000000                     
    29  000000                     
    30  000000                     
    31  000000                     
    32  000000                     
    33  000000                     
    34  000000                     
    35  000000                     
    36  000000                     
    37  000000                     
    38  000000                     
    39  000000                     
    40  000000                     
    41  000000                     
    42  000000                     
    43  000000                     
    44  000000                     
    45  000000                     
    46  000000                     
    47  000000                     
    48  000000                     
    49  000000                     
    50  000000                     
    51  000000                     
    52  000000                     
    53  000000                     
    54  000000                     
    55  000000                     
    56  000000                     
    57  000000                     
    58  000000                     
    59  000000                     
    60  000000                     
    61  000000                     
    62  000000                     
    63  000000                     
    64  000000                     
    65  000000                     
    66  000000                     
    67  000000                     
    68  000000                     
    69  000000                     
    70  000000                     
    71  000000                     
    72  000000                     
    73  000000                     
    74  000000                     
    75  000000                     
    76  000000                     
    77  000000                     
    78  000000                     
    79  000000                     
    80  000000                     
    81  000000                     
    82  000000                     
    83  000000                     
    84  000000                     
    85  000000                     
    86  000000                     
    87  000000                     
    88  000000                     
    89  000000                     
    90  000000                     
    91  000000                     
    92  000000                     
    93  000000                     
    94  000000                     
    95  000000                     
    96  000000                     
    97  000000                     
    98  000000                     
    99  000000                     
   100  000000                     
   101                           
   102                           	psect	bigdata
   103                           ;pic18fxx2.h: 21: static volatile near unsigned 
      +                          char TOSU @ 0xFFF;
   104                           ;pic18fxx2.h: 22: static volatile near unsigned 
      +                          char TOSH @ 0xFFE;
   105                           ;pic18fxx2.h: 23: static volatile near unsigned 
      +                          char TOSL @ 0xFFD;
   106                           ;pic18fxx2.h: 24: static volatile near unsigned 
      +                          char STKPTR @ 0xFFC;
   107                           ;pic18fxx2.h: 25: static volatile near unsigned 
      +                          char PCLATU @ 0xFFB;
   108                           ;pic18fxx2.h: 26: static volatile near unsigned 
      +                          char PCLATH @ 0xFFA;
   109                           ;pic18fxx2.h: 27: static volatile near unsigned 
      +                          char PCL @ 0xFF9;
   110                           ;pic18fxx2.h: 28: static volatile far unsigned c
      +                          har * TBLPTR @ 0xFF6;
   111                           ;pic18fxx2.h: 29: static volatile near unsigned 
      +                          char TBLPTRU @ 0xFF8;
   112                           ;pic18fxx2.h: 30: static volatile near unsigned 
      +                          char TBLPTRH @ 0xFF7;
   113                           ;pic18fxx2.h: 31: static volatile near unsigned 
      +                          char TBLPTRL @ 0xFF6;
   114                           ;pic18fxx2.h: 32: static volatile near unsigned 
      +                          char TABLAT @ 0xFF5;
   115                           ;pic18fxx2.h: 33: static volatile near unsigned 
      +                          char PRODH @ 0xFF4;
   116                           ;pic18fxx2.h: 34: static volatile near unsigned 
      +                          char PRODL @ 0xFF3;
   117                           ;pic18fxx2.h: 35: static volatile near unsigned 
      +                          char INTCON @ 0xFF2;
   118                           ;pic18fxx2.h: 36: static near unsigned char INTC
      +                          ON2 @ 0xFF1;
   119                           ;pic18fxx2.h: 37: static volatile near unsigned 
      +                          char INTCON3 @ 0xFF0;
   120                           ;pic18fxx2.h: 38: static volatile near unsigned 
      +                          char INDF0 @ 0xFEF;
   121                           ;pic18fxx2.h: 39: static volatile near unsigned 
      +                          char POSTINC0 @ 0xFEE;
   122                           ;pic18fxx2.h: 40: static volatile near unsigned 
      +                          char POSTDEC0 @ 0xFED;
   123                           ;pic18fxx2.h: 41: static volatile near unsigned 
      +                          char PREINC0 @ 0xFEC;
   124                           ;pic18fxx2.h: 42: static volatile near unsigned 
      +                          char PLUSW0 @ 0xFEB;
   125                           ;pic18fxx2.h: 43: static volatile near unsigned 
      +                          char FSR0H @ 0xFEA;
   126                           ;pic18fxx2.h: 44: static volatile near unsigned 
      +                          char FSR0L @ 0xFE9;
   127                           ;pic18fxx2.h: 45: static volatile near unsigned 
      +                          char WREG @ 0xFE8;
   128                           ;pic18fxx2.h: 46: static volatile near unsigned 
      +                          char INDF1 @ 0xFE7;
   129                           ;pic18fxx2.h: 47: static volatile near unsigned 
      +                          char POSTINC1 @ 0xFE6;
   130                           ;pic18fxx2.h: 48: static volatile near unsigned 
      +                          char POSTDEC1 @ 0xFE5;
   131                           ;pic18fxx2.h: 49: static volatile near unsigned 
      +                          char PREINC1 @ 0xFE4;
   132                           ;pic18fxx2.h: 50: static volatile near unsigned 
      +                          char PLUSW1 @ 0xFE3;
   133                           ;pic18fxx2.h: 51: static volatile near unsigned 
      +                          char FSR1H @ 0xFE2;
   134                           ;pic18fxx2.h: 52: static volatile near unsigned 
      +                          char FSR1L @ 0xFE1;
   135                           ;pic18fxx2.h: 53: static near unsigned char BSR 
      +                          @ 0xFE0;
   136                           ;pic18fxx2.h: 54: static volatile near unsigned 
      +                          char INDF2 @ 0xFDF;
   137                           ;pic18fxx2.h: 55: static volatile near unsigned 
      +                          char POSTINC2 @ 0xFDE;
   138                           ;pic18fxx2.h: 56: static volatile near unsigned 
      +                          char POSTDEC2 @ 0xFDD;
   139                           ;pic18fxx2.h: 57: static volatile near unsigned 
      +                          char PREINC2 @ 0xFDC;
   140                           ;pic18fxx2.h: 58: static volatile near unsigned 
      +                          char PLUSW2 @ 0xFDB;
   141                           ;pic18fxx2.h: 59: static volatile near unsigned 
      +                          char FSR2H @ 0xFDA;
   142                           ;pic18fxx2.h: 60: static volatile near unsigned 
      +                          char FSR2L @ 0xFD9;
   143                           ;pic18fxx2.h: 61: static volatile near unsigned 
      +                          char STATUS @ 0xFD8;
   144                           ;pic18fxx2.h: 62: static volatile near unsigned 
      +                          int TMR0 @ 0xFD6;
   145                           ;pic18fxx2.h: 63: static volatile near unsigned 
      +                          char TMR0H @ 0xFD7;
   146                           ;pic18fxx2.h: 64: static volatile near unsigned 
      +                          char TMR0L @ 0xFD6;
   147                           ;pic18fxx2.h: 65: static near unsigned char T0CO
      +                          N @ 0xFD5;
   148                           ;pic18fxx2.h: 66: static volatile near unsigned 
      +                          char OSCCON @ 0xFD3;
   149                           ;pic18fxx2.h: 67: static volatile near unsigned 
      +                          char LVDCON @ 0xFD2;
   150                           ;pic18fxx2.h: 68: static near unsigned char WDTC
      +                          ON @ 0xFD1;
   151                           ;pic18fxx2.h: 69: static volatile near unsigned 
      +                          char RCON @ 0xFD0;
   152                           ;pic18fxx2.h: 70: static volatile near unsigned 
      +                          int TMR1 @ 0xFCE;
   153                           ;pic18fxx2.h: 71: static volatile near unsigned 
      +                          char TMR1H @ 0xFCF;
   154                           ;pic18fxx2.h: 72: static volatile near unsigned 
      +                          char TMR1L @ 0xFCE;
   155                           ;pic18fxx2.h: 73: static near unsigned char T1CO
      +                          N @ 0xFCD;
   156                           ;pic18fxx2.h: 74: static volatile near unsigned 
      +                          char TMR2 @ 0xFCC;
   157                           ;pic18fxx2.h: 75: static volatile near unsigned 
      +                          char PR2 @ 0xFCB;
   158                           ;pic18fxx2.h: 76: static near unsigned char T2CO
      +                          N @ 0xFCA;
   159                           ;pic18fxx2.h: 77: static volatile near unsigned 
      +                          char SSPBUF @ 0xFC9;
   160                           ;pic18fxx2.h: 78: static volatile near unsigned 
      +                          char SSPADD @ 0xFC8;
   161                           ;pic18fxx2.h: 79: static volatile near unsigned 
      +                          char SSPSTAT @ 0xFC7;
   162                           ;pic18fxx2.h: 80: static volatile near unsigned 
      +                          char SSPCON1 @ 0xFC6;
   163                           ;pic18fxx2.h: 81: static volatile near unsigned 
      +                          char SSPCON2 @ 0xFC5;
   164                           ;pic18fxx2.h: 82: static volatile near unsigned 
      +                          int ADRES @ 0xFC3;
   165                           ;pic18fxx2.h: 83: static volatile near unsigned 
      +                          char ADRESH @ 0xFC4;
   166                           ;pic18fxx2.h: 84: static volatile near unsigned 
      +                          char ADRESL @ 0xFC3;
   167                           ;pic18fxx2.h: 85: static volatile near unsigned 
      +                          char ADCON0 @ 0xFC2;
   168                           ;pic18fxx2.h: 86: static near unsigned char ADCO
      +                          N1 @ 0xFC1;
   169                           ;pic18fxx2.h: 87: static volatile near unsigned 
      +                          int CCPR1 @ 0xFBE;
   170                           ;pic18fxx2.h: 88: static volatile near unsigned 
      +                          char CCPR1H @ 0xFBF;
   171                           ;pic18fxx2.h: 89: static volatile near unsigned 
      +                          char CCPR1L @ 0xFBE;
   172                           ;pic18fxx2.h: 90: static volatile near unsigned 
      +                          char CCP1CON @ 0xFBD;
   173                           ;pic18fxx2.h: 91: static volatile near unsigned 
      +                          int CCPR2 @ 0xFBB;
   174                           ;pic18fxx2.h: 92: static volatile near unsigned 
      +                          char CCPR2H @ 0xFBC;
   175                           ;pic18fxx2.h: 93: static volatile near unsigned 
      +                          char CCPR2L @ 0xFBB;
   176                           ;pic18fxx2.h: 94: static volatile near unsigned 
      +                          char CCP2CON @ 0xFBA;
   177                           ;pic18fxx2.h: 95: static volatile near unsigned 
      +                          int TMR3 @ 0xFB2;
   178                           ;pic18fxx2.h: 96: static volatile near unsigned 
      +                          char TMR3H @ 0xFB3;
   179                           ;pic18fxx2.h: 97: static volatile near unsigned 
      +                          char TMR3L @ 0xFB2;
   180                           ;pic18fxx2.h: 98: static near unsigned char T3CO
      +                          N @ 0xFB1;
   181                           ;pic18fxx2.h: 99: static near unsigned char SPBR
      +                          G @ 0xFAF;
   182                           ;pic18fxx2.h: 100: static volatile near unsigned
      +                           char RCREG @ 0xFAE;
   183                           ;pic18fxx2.h: 101: static volatile near unsigned
      +                           char TXREG @ 0xFAD;
   184                           ;pic18fxx2.h: 102: static volatile near unsigned
      +                           char TXSTA @ 0xFAC;
   185                           ;pic18fxx2.h: 103: static volatile near unsigned
      +                           char RCSTA @ 0xFAB;
   186                           ;pic18fxx2.h: 104: static volatile near unsigned
      +                           char EEADR @ 0xFA9;
   187                           ;pic18fxx2.h: 105: static volatile near unsigned
      +                           char EEDATA @ 0xFA8;
   188                           ;pic18fxx2.h: 106: static volatile near unsigned
      +                           char EECON2 @ 0xFA7;
   189                           ;pic18fxx2.h: 107: static volatile near unsigned
      +                           char EECON1 @ 0xFA6;
   190                           ;pic18fxx2.h: 108: static near unsigned char IPR
      +                          2 @ 0xFA2;
   191                           ;pic18fxx2.h: 109: static volatile near unsigned
      +                           char PIR2 @ 0xFA1;
   192                           ;pic18fxx2.h: 110: static near unsigned char PIE
      +                          2 @ 0xFA0;
   193                           ;pic18fxx2.h: 111: static near unsigned char IPR
      +                          1 @ 0xF9F;
   194                           ;pic18fxx2.h: 112: static volatile near unsigned
      +                           char PIR1 @ 0xF9E;
   195                           ;pic18fxx2.h: 113: static near unsigned char PIE
      +                          1 @ 0xF9D;
   196                           ;pic18fxx2.h: 114: static volatile near unsigned
      +                           char TRISC @ 0xF94;
   197                           ;pic18fxx2.h: 115: static volatile near unsigned
      +                           char TRISB @ 0xF93;
   198                           ;pic18fxx2.h: 116: static volatile near unsigned
      +                           char TRISA @ 0xF92;
   199                           ;pic18fxx2.h: 117: static volatile near unsigned
      +                           char LATC @ 0xF8B;
   200                           ;pic18fxx2.h: 118: static volatile near unsigned
      +                           char LATB @ 0xF8A;
   201                           ;pic18fxx2.h: 119: static volatile near unsigned
      +                           char LATA @ 0xF89;
   202                           ;pic18fxx2.h: 120: static volatile near unsigned
      +                           char PORTC @ 0xF82;
   203  000357                     _menustate:
   204  000357                     	ds	1
   205                           
   206                           	psect	ibigdata
   207  000FFC  00                 	db	0
   208                           
   209                           	psect	const
   210                           ;menu.c: 48: unsigned char menustate = MENU_NONE
      +                          1;
   211                           ;menu.c: 49: unsigned char menusub = 0;
   212  000900                     _config_filter_msg:
   213  000900  09FB               	dw	u19
   214  000902  0B12               	dw	u29
   215  000904  0B17               	dw	u39
   216  000906  0B0D               	dw	u49
   217                           ;menu.c: 52: const char * const config_filter_ms
      +                          g[] = {"none", "HOR ", "VER ", "H+V "};
   218  000908                     _config_memory_chip_msg:
   219  000908  0A6A               	dw	u59
   220  00090A  0A78               	dw	u69
   221  00090C  0A63               	dw	u79
   222  00090E  0A71               	dw	u89
   223                           ;menu.c: 53: const char * const config_memory_ch
      +                          ip_msg[] = {"0.5 MB", "1.0 MB", "1.5 MB", "2.0 M
      +                          B"};
   224  000910                     _config_memory_slow_msg:
   225  000910  0BE4               	dw	u99
   226  000912  0A6A               	dw	u109
   227  000914  0A78               	dw	u119
   228  000916  0A63               	dw	u129
   229                           ;menu.c: 54: const char * const config_memory_sl
      +                          ow_msg[] = {"none  ", "0.5 MB", "1.0 MB", "1.5 M
      +                          B"};
   230  000918                     _config_scanline_msg:
   231  000918  09F7               	dw	u139
   232  00091A  09E8               	dw	u149
   233  00091C  09F3               	dw	u159
   234  00091E                     S30004:
   235  00091E  1068               	dw	l28	;
   236  000920  1070               	dw	l29	;
   237  000922  108C               	dw	l31	;
   238  000924  120A               	dw	l39	;
   239  000926  1318               	dw	l59	;
   240  000928  1388               	dw	l60	;
   241  00092A  13E6               	dw	l70	;
   242  00092C  13EE               	dw	l71	;
   243  00092E  12FE               	dw	l58	;
   244  000930  14CE               	dw	l83	;
   245  000932  1520               	dw	l84	;
   246  000934  1564               	dw	l87	;
   247  000936  163E               	dw	l92	;
   248  000938  2386               	dw	l193	;
   249  00093A  23DA               	dw	l194	;
   250  00093C  2156               	dw	l177	;
   251  00093E  22BE               	dw	l178	;
   252  000940  1908               	dw	l121	;
   253  000942  1AC8               	dw	l122	;
   254  000944  16F2               	dw	l106	;
   255  000946  1846               	dw	l107	;
   256  000948  1BE0               	dw	l138	;
   257  00094A  1DA0               	dw	l139	;
   258  00094C  24B0               	dw	l202	;
   259  00094E  1EA4               	dw	l156	;
   260  000950  204E               	dw	l162	;
   261  000952  20F8               	dw	l174	;
   262  000954                     u429:
   263  000954  20                 	db	32
   264  000955  37                 	db	55	;'7'
   265  000956  2E                 	db	46
   266  000957  30                 	db	48	;'0'
   267  000958  39                 	db	57	;'9'
   268  000959  4D                 	db	77	;'M'
   269  00095A  48                 	db	72	;'H'
   270  00095B  7A                 	db	122	;'z'
   271  00095C  00                 	db	0
   272  00095D                     u339:
   273  00095D  20                 	db	32
   274  00095E  20                 	db	32
   275  00095F  20                 	db	32
   276  000960  20                 	db	32
   277  000961  20                 	db	32
   278  000962  20                 	db	32
   279  000963  6D                 	db	109	;'m'
   280  000964  65                 	db	101	;'e'
   281  000965  6D                 	db	109	;'m'
   282  000966  6F                 	db	111	;'o'
   283  000967  72                 	db	114	;'r'
   284  000968  79                 	db	121	;'y'
   285  000969  00                 	db	0
   286  00096A                     u629:
   287  00096A  31                 	db	49	;'1'
   288  00096B  78                 	db	120	;'x'
   289  00096C  00                 	db	0
   290  00096D                     u279:
   291  00096D                     u389:
   292  00096D                     u239:
   293  00096D                     u819:
   294  00096D                     u579:
   295  00096D                     u679:
   296  00096D                     u499:
   297  00096D                     u769:
   298  00096D  20                 	db	32
   299  00096E  20                 	db	32
   300  00096F  20                 	db	32
   301  000970  20                 	db	32
   302  000971  20                 	db	32
   303  000972  20                 	db	32
   304  000973  20                 	db	32
   305  000974  20                 	db	32
   306  000975  65                 	db	101	;'e'
   307  000976  78                 	db	120	;'x'
   308  000977  69                 	db	105	;'i'
   309  000978  74                 	db	116	;'t'
   310  000979  00                 	db	0
   311  00097A                     u329:
   312  00097A  20                 	db	32
   313  00097B  20                 	db	32
   314  00097C  20                 	db	32
   315  00097D  20                 	db	32
   316  00097E  20                 	db	32
   317  00097F  20                 	db	32
   318  000980  63                 	db	99	;'c'
   319  000981  68                 	db	104	;'h'
   320  000982  69                 	db	105	;'i'
   321  000983  70                 	db	112	;'p'
   322  000984  73                 	db	115	;'s'
   323  000985  65                 	db	101	;'e'
   324  000986  74                 	db	116	;'t'
   325  000987  00                 	db	0
   326  000988                     u269:
   327  000988  20                 	db	32
   328  000989  20                 	db	32
   329  00098A  20                 	db	32
   330  00098B  20                 	db	32
   331  00098C  20                 	db	32
   332  00098D  20                 	db	32
   333  00098E  72                 	db	114	;'r'
   334  00098F  65                 	db	101	;'e'
   335  000990  73                 	db	115	;'s'
   336  000991  65                 	db	101	;'e'
   337  000992  74                 	db	116	;'t'
   338  000993  00                 	db	0
   339  000994                     u259:
   340  000994  20                 	db	32
   341  000995  20                 	db	32
   342  000996  20                 	db	32
   343  000997  20                 	db	32
   344  000998  20                 	db	32
   345  000999  20                 	db	32
   346  00099A  73                 	db	115	;'s'
   347  00099B  65                 	db	101	;'e'
   348  00099C  74                 	db	116	;'t'
   349  00099D  74                 	db	116	;'t'
   350  00099E  69                 	db	105	;'i'
   351  00099F  6E                 	db	110	;'n'
   352  0009A0  67                 	db	103	;'g'
   353  0009A1  73                 	db	115	;'s'
   354  0009A2  00                 	db	0
   355  0009A3                     u839:
   356  0009A3                     u299:
   357  0009A3  20                 	db	32
   358  0009A4  20                 	db	32
   359  0009A5  20                 	db	32
   360  0009A6  20                 	db	32
   361  0009A7  20                 	db	32
   362  0009A8  20                 	db	32
   363  0009A9  20                 	db	32
   364  0009AA  20                 	db	32
   365  0009AB  20                 	db	32
   366  0009AC  79                 	db	121	;'y'
   367  0009AD  65                 	db	101	;'e'
   368  0009AE  73                 	db	115	;'s'
   369  0009AF  00                 	db	0
   370  0009B0                     u349:
   371  0009B0  20                 	db	32
   372  0009B1  20                 	db	32
   373  0009B2  20                 	db	32
   374  0009B3  20                 	db	32
   375  0009B4  20                 	db	32
   376  0009B5  20                 	db	32
   377  0009B6  64                 	db	100	;'d'
   378  0009B7  72                 	db	114	;'r'
   379  0009B8  69                 	db	105	;'i'
   380  0009B9  76                 	db	118	;'v'
   381  0009BA  65                 	db	101	;'e'
   382  0009BB  73                 	db	115	;'s'
   383  0009BC  00                 	db	0
   384  0009BD                     u749:
   385  0009BD  20                 	db	32
   386  0009BE  20                 	db	32
   387  0009BF  20                 	db	32
   388  0009C0  20                 	db	32
   389  0009C1  20                 	db	32
   390  0009C2  20                 	db	32
   391  0009C3  20                 	db	32
   392  0009C4  20                 	db	32
   393  0009C5  20                 	db	32
   394  0009C6  25                 	db	37
   395  0009C7  2E                 	db	46
   396  0009C8  38                 	db	56	;'8'
   397  0009C9  73                 	db	115	;'s'
   398  0009CA  2E                 	db	46
   399  0009CB  25                 	db	37
   400  0009CC  2E                 	db	46
   401  0009CD  33                 	db	51	;'3'
   402  0009CE  73                 	db	115	;'s'
   403  0009CF  00                 	db	0
   404  0009D0                     u849:
   405  0009D0                     u309:
   406  0009D0  20                 	db	32
   407  0009D1  20                 	db	32
   408  0009D2  20                 	db	32
   409  0009D3  20                 	db	32
   410  0009D4  20                 	db	32
   411  0009D5  20                 	db	32
   412  0009D6  20                 	db	32
   413  0009D7  20                 	db	32
   414  0009D8  20                 	db	32
   415  0009D9  6E                 	db	110	;'n'
   416  0009DA  6F                 	db	111	;'o'
   417  0009DB  00                 	db	0
   418  0009DC                     u359:
   419  0009DC  20                 	db	32
   420  0009DD  20                 	db	32
   421  0009DE  20                 	db	32
   422  0009DF  20                 	db	32
   423  0009E0  20                 	db	32
   424  0009E1  20                 	db	32
   425  0009E2  76                 	db	118	;'v'
   426  0009E3  69                 	db	105	;'i'
   427  0009E4  64                 	db	100	;'d'
   428  0009E5  65                 	db	101	;'e'
   429  0009E6  6F                 	db	111	;'o'
   430  0009E7  00                 	db	0
   431  0009E8                     u149:
   432  0009E8  64                 	db	100	;'d'
   433  0009E9  69                 	db	105	;'i'
   434  0009EA  6D                 	db	109	;'m'
   435  0009EB  00                 	db	0
   436  0009EC                     u459:
   437  0009EC  6E                 	db	110	;'n'
   438  0009ED  6F                 	db	111	;'o'
   439  0009EE  72                 	db	114	;'r'
   440  0009EF  6D                 	db	109	;'m'
   441  0009F0  61                 	db	97	;'a'
   442  0009F1  6C                 	db	108	;'l'
   443  0009F2  00                 	db	0
   444  0009F3                     u159:
   445  0009F3  62                 	db	98	;'b'
   446  0009F4  6C                 	db	108	;'l'
   447  0009F5  6B                 	db	107	;'k'
   448  0009F6  00                 	db	0
   449  0009F7                     u139:
   450  0009F7                     u659:
   451  0009F7  6F                 	db	111	;'o'
   452  0009F8  66                 	db	102	;'f'
   453  0009F9  66                 	db	102	;'f'
   454  0009FA  00                 	db	0
   455  0009FB                     u19:
   456  0009FB  6E                 	db	110	;'n'
   457  0009FC  6F                 	db	111	;'o'
   458  0009FD  6E                 	db	110	;'n'
   459  0009FE  65                 	db	101	;'e'
   460  0009FF  00                 	db	0
   461  000A00                     u759:
   462  000A00  20                 	db	32
   463  000A01  20                 	db	32
   464  000A02  20                 	db	32
   465  000A03  20                 	db	32
   466  000A04  20                 	db	32
   467  000A05  20                 	db	32
   468  000A06  20                 	db	32
   469  000A07  20                 	db	32
   470  000A08  20                 	db	32
   471  000A09  4E                 	db	78	;'N'
   472  000A0A  6F                 	db	111	;'o'
   473  000A0B  74                 	db	116	;'t'
   474  000A0C  20                 	db	32
   475  000A0D  66                 	db	102	;'f'
   476  000A0E  6F                 	db	111	;'o'
   477  000A0F  75                 	db	117	;'u'
   478  000A10  6E                 	db	110	;'n'
   479  000A11  64                 	db	100	;'d'
   480  000A12  00                 	db	0
   481  000A13                     u729:
   482  000A13                     u189:
   483  000A13                     u569:
   484  000A13  64                 	db	100	;'d'
   485  000A14  69                 	db	105	;'i'
   486  000A15  73                 	db	115	;'s'
   487  000A16  61                 	db	97	;'a'
   488  000A17  62                 	db	98	;'b'
   489  000A18  6C                 	db	108	;'l'
   490  000A19  65                 	db	101	;'e'
   491  000A1A  64                 	db	100	;'d'
   492  000A1B  00                 	db	0
   493  000A1C                     u719:
   494  000A1C  65                 	db	101	;'e'
   495  000A1D  6E                 	db	110	;'n'
   496  000A1E  61                 	db	97	;'a'
   497  000A1F  62                 	db	98	;'b'
   498  000A20  6C                 	db	108	;'l'
   499  000A21  65                 	db	101	;'e'
   500  000A22  64                 	db	100	;'d'
   501  000A23  00                 	db	0
   502  000A24                     u869:
   503  000A24  20                 	db	32
   504  000A25  20                 	db	32
   505  000A26  65                 	db	101	;'e'
   506  000A27  72                 	db	114	;'r'
   507  000A28  72                 	db	114	;'r'
   508  000A29  6F                 	db	111	;'o'
   509  000A2A  72                 	db	114	;'r'
   510  000A2B  20                 	db	32
   511  000A2C  23                 	db	35
   512  000A2D  25                 	db	37
   513  000A2E  64                 	db	100	;'d'
   514  000A2F  00                 	db	0
   515  000A30                     u669:
   516  000A30  20                 	db	32
   517  000A31  20                 	db	32
   518  000A32  68                 	db	104	;'h'
   519  000A33  61                 	db	97	;'a'
   520  000A34  72                 	db	114	;'r'
   521  000A35  64                 	db	100	;'d'
   522  000A36  66                 	db	102	;'f'
   523  000A37  69                 	db	105	;'i'
   524  000A38  6C                 	db	108	;'l'
   525  000A39  65                 	db	101	;'e'
   526  000A3A  73                 	db	115	;'s'
   527  000A3B  20                 	db	32
   528  000A3C  3A                 	db	58	;':'
   529  000A3D  20                 	db	32
   530  000A3E  25                 	db	37
   531  000A3F  64                 	db	100	;'d'
   532  000A40  00                 	db	0
   533  000A41                     u599:
   534  000A41  20                 	db	32
   535  000A42  20                 	db	32
   536  000A43  20                 	db	32
   537  000A44  64                 	db	100	;'d'
   538  000A45  72                 	db	114	;'r'
   539  000A46  69                 	db	105	;'i'
   540  000A47  76                 	db	118	;'v'
   541  000A48  65                 	db	101	;'e'
   542  000A49  73                 	db	115	;'s'
   543  000A4A  20                 	db	32
   544  000A4B  20                 	db	32
   545  000A4C  20                 	db	32
   546  000A4D  3A                 	db	58	;':'
   547  000A4E  20                 	db	32
   548  000A4F  25                 	db	37
   549  000A50  64                 	db	100	;'d'
   550  000A51  00                 	db	0
   551  000A52                     u739:
   552  000A52  6E                 	db	110	;'n'
   553  000A53  2F                 	db	47
   554  000A54  61                 	db	97	;'a'
   555  000A55  00                 	db	0
   556  000A56                     u209:
   557  000A56  20                 	db	32
   558  000A57  52                 	db	82	;'R'
   559  000A58  57                 	db	87	;'W'
   560  000A59  00                 	db	0
   561  000A5A                     u219:
   562  000A5A  20                 	db	32
   563  000A5B  52                 	db	82	;'R'
   564  000A5C  4F                 	db	79	;'O'
   565  000A5D  00                 	db	0
   566  000A5E                     u479:
   567  000A5E  4E                 	db	78	;'N'
   568  000A5F  54                 	db	84	;'T'
   569  000A60  53                 	db	83	;'S'
   570  000A61  43                 	db	67	;'C'
   571  000A62  00                 	db	0
   572  000A63                     u129:
   573  000A63                     u79:
   574  000A63  31                 	db	49	;'1'
   575  000A64  2E                 	db	46
   576  000A65  35                 	db	53	;'5'
   577  000A66  20                 	db	32
   578  000A67  4D                 	db	77	;'M'
   579  000A68  42                 	db	66	;'B'
   580  000A69  00                 	db	0
   581  000A6A                     u109:
   582  000A6A                     u59:
   583  000A6A  30                 	db	48	;'0'
   584  000A6B  2E                 	db	46
   585  000A6C  35                 	db	53	;'5'
   586  000A6D  20                 	db	32
   587  000A6E  4D                 	db	77	;'M'
   588  000A6F  42                 	db	66	;'B'
   589  000A70  00                 	db	0
   590  000A71                     u89:
   591  000A71  32                 	db	50	;'2'
   592  000A72  2E                 	db	46
   593  000A73  30                 	db	48	;'0'
   594  000A74  20                 	db	32
   595  000A75  4D                 	db	77	;'M'
   596  000A76  42                 	db	66	;'B'
   597  000A77  00                 	db	0
   598  000A78                     u69:
   599  000A78                     u119:
   600  000A78  31                 	db	49	;'1'
   601  000A79  2E                 	db	46
   602  000A7A  30                 	db	48	;'0'
   603  000A7B  20                 	db	32
   604  000A7C  4D                 	db	77	;'M'
   605  000A7D  42                 	db	66	;'B'
   606  000A7E  00                 	db	0
   607  000A7F                     u829:
   608  000A7F  20                 	db	32
   609  000A80  20                 	db	32
   610  000A81  52                 	db	82	;'R'
   611  000A82  65                 	db	101	;'e'
   612  000A83  6C                 	db	108	;'l'
   613  000A84  6F                 	db	111	;'o'
   614  000A85  61                 	db	97	;'a'
   615  000A86  64                 	db	100	;'d'
   616  000A87  20                 	db	32
   617  000A88  4B                 	db	75	;'K'
   618  000A89  69                 	db	105	;'i'
   619  000A8A  63                 	db	99	;'c'
   620  000A8B  6B                 	db	107	;'k'
   621  000A8C  73                 	db	115	;'s'
   622  000A8D  74                 	db	116	;'t'
   623  000A8E  61                 	db	97	;'a'
   624  000A8F  72                 	db	114	;'r'
   625  000A90  74                 	db	116	;'t'
   626  000A91  3F                 	db	63	;'?'
   627  000A92  00                 	db	0
   628  000A93                     u289:
   629  000A93  20                 	db	32
   630  000A94  20                 	db	32
   631  000A95  20                 	db	32
   632  000A96  20                 	db	32
   633  000A97  52                 	db	82	;'R'
   634  000A98  65                 	db	101	;'e'
   635  000A99  73                 	db	115	;'s'
   636  000A9A  65                 	db	101	;'e'
   637  000A9B  74                 	db	116	;'t'
   638  000A9C  20                 	db	32
   639  000A9D  4D                 	db	77	;'M'
   640  000A9E  69                 	db	105	;'i'
   641  000A9F  6E                 	db	110	;'n'
   642  000AA0  69                 	db	105	;'i'
   643  000AA1  6D                 	db	109	;'m'
   644  000AA2  69                 	db	105	;'i'
   645  000AA3  67                 	db	103	;'g'
   646  000AA4  3F                 	db	63	;'?'
   647  000AA5  00                 	db	0
   648  000AA6                     u199:
   649  000AA6  2E                 	db	46
   650  000AA7  00                 	db	0
   651  000AA8                     u689:
   652  000AA8  20                 	db	32
   653  000AA9  20                 	db	32
   654  000AAA  20                 	db	32
   655  000AAB  2D                 	db	45
   656  000AAC  3D                 	db	61	;'='
   657  000AAD  20                 	db	32
   658  000AAE  48                 	db	72	;'H'
   659  000AAF  41                 	db	65	;'A'
   660  000AB0  52                 	db	82	;'R'
   661  000AB1  44                 	db	68	;'D'
   662  000AB2  46                 	db	70	;'F'
   663  000AB3  49                 	db	73	;'I'
   664  000AB4  4C                 	db	76	;'L'
   665  000AB5  45                 	db	69	;'E'
   666  000AB6  53                 	db	83	;'S'
   667  000AB7  20                 	db	32
   668  000AB8  3D                 	db	61	;'='
   669  000AB9  2D                 	db	45
   670  000ABA  00                 	db	0
   671  000ABB                     u249:
   672  000ABB  1B                 	db	27
   673  000ABC  20                 	db	32
   674  000ABD  2A                 	db	42
   675  000ABE  2A                 	db	42
   676  000ABF  4D                 	db	77	;'M'
   677  000AC0  69                 	db	105	;'i'
   678  000AC1  6E                 	db	110	;'n'
   679  000AC2  69                 	db	105	;'i'
   680  000AC3  6D                 	db	109	;'m'
   681  000AC4  69                 	db	105	;'i'
   682  000AC5  67                 	db	103	;'g'
   683  000AC6  20                 	db	32
   684  000AC7  4D                 	db	77	;'M'
   685  000AC8  65                 	db	101	;'e'
   686  000AC9  6E                 	db	110	;'n'
   687  000ACA  75                 	db	117	;'u'
   688  000ACB  2A                 	db	42
   689  000ACC  2A                 	db	42
   690  000ACD  00                 	db	0
   691  000ACE                     u859:
   692  000ACE  20                 	db	32
   693  000ACF  20                 	db	32
   694  000AD0  20                 	db	32
   695  000AD1  20                 	db	32
   696  000AD2  2A                 	db	42
   697  000AD3  2A                 	db	42
   698  000AD4  2A                 	db	42
   699  000AD5  20                 	db	32
   700  000AD6  45                 	db	69	;'E'
   701  000AD7  52                 	db	82	;'R'
   702  000AD8  52                 	db	82	;'R'
   703  000AD9  4F                 	db	79	;'O'
   704  000ADA  52                 	db	82	;'R'
   705  000ADB  20                 	db	32
   706  000ADC  2A                 	db	42
   707  000ADD  2A                 	db	42
   708  000ADE  2A                 	db	42
   709  000ADF  00                 	db	0
   710  000AE0                     u319:
   711  000AE0  20                 	db	32
   712  000AE1  20                 	db	32
   713  000AE2  20                 	db	32
   714  000AE3  2A                 	db	42
   715  000AE4  2A                 	db	42
   716  000AE5  20                 	db	32
   717  000AE6  53                 	db	83	;'S'
   718  000AE7  45                 	db	69	;'E'
   719  000AE8  54                 	db	84	;'T'
   720  000AE9  54                 	db	84	;'T'
   721  000AEA  49                 	db	73	;'I'
   722  000AEB  4E                 	db	78	;'N'
   723  000AEC  47                 	db	71	;'G'
   724  000AED  53                 	db	83	;'S'
   725  000AEE  20                 	db	32
   726  000AEF  2A                 	db	42
   727  000AF0  2A                 	db	42
   728  000AF1  00                 	db	0
   729  000AF2                     u419:
   730  000AF2  32                 	db	50	;'2'
   731  000AF3  38                 	db	56	;'8'
   732  000AF4  2E                 	db	46
   733  000AF5  33                 	db	51	;'3'
   734  000AF6  36                 	db	54	;'6'
   735  000AF7  4D                 	db	77	;'M'
   736  000AF8  48                 	db	72	;'H'
   737  000AF9  7A                 	db	122	;'z'
   738  000AFA  20                 	db	32
   739  000AFB  00                 	db	0
   740  000AFC                     u619:
   741  000AFC  32                 	db	50	;'2'
   742  000AFD  78                 	db	120	;'x'
   743  000AFE  20                 	db	32
   744  000AFF  00                 	db	0
   745  000B00                     u649:
   746  000B00  6F                 	db	111	;'o'
   747  000B01  6E                 	db	110	;'n'
   748  000B02  20                 	db	32
   749  000B03  00                 	db	0
   750  000B04                     u559:
   751  000B04  65                 	db	101	;'e'
   752  000B05  6E                 	db	110	;'n'
   753  000B06  61                 	db	97	;'a'
   754  000B07  62                 	db	98	;'b'
   755  000B08  6C                 	db	108	;'l'
   756  000B09  65                 	db	101	;'e'
   757  000B0A  64                 	db	100	;'d'
   758  000B0B  20                 	db	32
   759  000B0C  00                 	db	0
   760  000B0D                     u49:
   761  000B0D  48                 	db	72	;'H'
   762  000B0E  2B                 	db	43
   763  000B0F  56                 	db	86	;'V'
   764  000B10  20                 	db	32
   765  000B11  00                 	db	0
   766  000B12                     u29:
   767  000B12  48                 	db	72	;'H'
   768  000B13  4F                 	db	79	;'O'
   769  000B14  52                 	db	82	;'R'
   770  000B15  20                 	db	32
   771  000B16  00                 	db	0
   772  000B17                     u39:
   773  000B17  56                 	db	86	;'V'
   774  000B18  45                 	db	69	;'E'
   775  000B19  52                 	db	82	;'R'
   776  000B1A  20                 	db	32
   777  000B1B  00                 	db	0
   778  000B1C                     u489:
   779  000B1C  50                 	db	80	;'P'
   780  000B1D  41                 	db	65	;'A'
   781  000B1E  4C                 	db	76	;'L'
   782  000B1F  20                 	db	32
   783  000B20  00                 	db	0
   784  000B21                     u709:
   785  000B21  20                 	db	32
   786  000B22  4D                 	db	77	;'M'
   787  000B23  61                 	db	97	;'a'
   788  000B24  73                 	db	115	;'s'
   789  000B25  74                 	db	116	;'t'
   790  000B26  65                 	db	101	;'e'
   791  000B27  72                 	db	114	;'r'
   792  000B28  3A                 	db	58	;':'
   793  000B29  20                 	db	32
   794  000B2A  00                 	db	0
   795  000B2B                     u789:
   796  000B2B  20                 	db	32
   797  000B2C  20                 	db	32
   798  000B2D  4C                 	db	76	;'L'
   799  000B2E  6F                 	db	111	;'o'
   800  000B2F  72                 	db	114	;'r'
   801  000B30  65                 	db	101	;'e'
   802  000B31  73                 	db	115	;'s'
   803  000B32  20                 	db	32
   804  000B33  46                 	db	70	;'F'
   805  000B34  69                 	db	105	;'i'
   806  000B35  6C                 	db	108	;'l'
   807  000B36  74                 	db	116	;'t'
   808  000B37  65                 	db	101	;'e'
   809  000B38  72                 	db	114	;'r'
   810  000B39  3A                 	db	58	;':'
   811  000B3A  20                 	db	32
   812  000B3B  00                 	db	0
   813  000B3C                     u799:
   814  000B3C  20                 	db	32
   815  000B3D  20                 	db	32
   816  000B3E  48                 	db	72	;'H'
   817  000B3F  69                 	db	105	;'i'
   818  000B40  72                 	db	114	;'r'
   819  000B41  65                 	db	101	;'e'
   820  000B42  73                 	db	115	;'s'
   821  000B43  20                 	db	32
   822  000B44  46                 	db	70	;'F'
   823  000B45  69                 	db	105	;'i'
   824  000B46  6C                 	db	108	;'l'
   825  000B47  74                 	db	116	;'t'
   826  000B48  65                 	db	101	;'e'
   827  000B49  72                 	db	114	;'r'
   828  000B4A  3A                 	db	58	;':'
   829  000B4B  20                 	db	32
   830  000B4C  00                 	db	0
   831  000B4D                     u699:
   832  000B4D  20                 	db	32
   833  000B4E  20                 	db	32
   834  000B4F  53                 	db	83	;'S'
   835  000B50  6C                 	db	108	;'l'
   836  000B51  61                 	db	97	;'a'
   837  000B52  76                 	db	118	;'v'
   838  000B53  65                 	db	101	;'e'
   839  000B54  3A                 	db	58	;':'
   840  000B55  20                 	db	32
   841  000B56  00                 	db	0
   842  000B57                     u179:
   843  000B57  20                 	db	32
   844  000B58  44                 	db	68	;'D'
   845  000B59  46                 	db	70	;'F'
   846  000B5A  25                 	db	37
   847  000B5B  64                 	db	100	;'d'
   848  000B5C  3A                 	db	58	;':'
   849  000B5D  20                 	db	32
   850  000B5E  00                 	db	0
   851  000B5F                     u469:
   852  000B5F  20                 	db	32
   853  000B60  20                 	db	32
   854  000B61  20                 	db	32
   855  000B62  20                 	db	32
   856  000B63  41                 	db	65	;'A'
   857  000B64  67                 	db	103	;'g'
   858  000B65  6E                 	db	110	;'n'
   859  000B66  75                 	db	117	;'u'
   860  000B67  73                 	db	115	;'s'
   861  000B68  20                 	db	32
   862  000B69  3A                 	db	58	;':'
   863  000B6A  20                 	db	32
   864  000B6B  00                 	db	0
   865  000B6C                     u439:
   866  000B6C  20                 	db	32
   867  000B6D  20                 	db	32
   868  000B6E  42                 	db	66	;'B'
   869  000B6F  6C                 	db	108	;'l'
   870  000B70  69                 	db	105	;'i'
   871  000B71  74                 	db	116	;'t'
   872  000B72  74                 	db	116	;'t'
   873  000B73  65                 	db	101	;'e'
   874  000B74  72                 	db	114	;'r'
   875  000B75  20                 	db	32
   876  000B76  3A                 	db	58	;':'
   877  000B77  20                 	db	32
   878  000B78  00                 	db	0
   879  000B79                     u529:
   880  000B79  20                 	db	32
   881  000B7A  20                 	db	32
   882  000B7B  53                 	db	83	;'S'
   883  000B7C  4C                 	db	76	;'L'
   884  000B7D  4F                 	db	79	;'O'
   885  000B7E  57                 	db	87	;'W'
   886  000B7F  20                 	db	32
   887  000B80  3A                 	db	58	;':'
   888  000B81  20                 	db	32
   889  000B82  00                 	db	0
   890  000B83                     u409:
   891  000B83  20                 	db	32
   892  000B84  20                 	db	32
   893  000B85  20                 	db	32
   894  000B86  20                 	db	32
   895  000B87  20                 	db	32
   896  000B88  20                 	db	32
   897  000B89  43                 	db	67	;'C'
   898  000B8A  50                 	db	80	;'P'
   899  000B8B  55                 	db	85	;'U'
   900  000B8C  20                 	db	32
   901  000B8D  3A                 	db	58	;':'
   902  000B8E  20                 	db	32
   903  000B8F  00                 	db	0
   904  000B90                     u519:
   905  000B90  20                 	db	32
   906  000B91  20                 	db	32
   907  000B92  43                 	db	67	;'C'
   908  000B93  48                 	db	72	;'H'
   909  000B94  49                 	db	73	;'I'
   910  000B95  50                 	db	80	;'P'
   911  000B96  20                 	db	32
   912  000B97  3A                 	db	58	;':'
   913  000B98  20                 	db	32
   914  000B99  00                 	db	0
   915  000B9A                     u639:
   916  000B9A  20                 	db	32
   917  000B9B  20                 	db	32
   918  000B9C  20                 	db	32
   919  000B9D  41                 	db	65	;'A'
   920  000B9E  36                 	db	54	;'6'
   921  000B9F  30                 	db	48	;'0'
   922  000BA0  30                 	db	48	;'0'
   923  000BA1  20                 	db	32
   924  000BA2  49                 	db	73	;'I'
   925  000BA3  44                 	db	68	;'D'
   926  000BA4  45                 	db	69	;'E'
   927  000BA5  20                 	db	32
   928  000BA6  3A                 	db	58	;':'
   929  000BA7  20                 	db	32
   930  000BA8  00                 	db	0
   931  000BA9                     u539:
   932  000BA9  20                 	db	32
   933  000BAA  20                 	db	32
   934  000BAB  52                 	db	82	;'R'
   935  000BAC  4F                 	db	79	;'O'
   936  000BAD  4D                 	db	77	;'M'
   937  000BAE  20                 	db	32
   938  000BAF  20                 	db	32
   939  000BB0  3A                 	db	58	;':'
   940  000BB1  20                 	db	32
   941  000BB2  00                 	db	0
   942  000BB3                     u549:
   943  000BB3  20                 	db	32
   944  000BB4  20                 	db	32
   945  000BB5  41                 	db	65	;'A'
   946  000BB6  52                 	db	82	;'R'
   947  000BB7  33                 	db	51	;'3'
   948  000BB8  20                 	db	32
   949  000BB9  20                 	db	32
   950  000BBA  3A                 	db	58	;':'
   951  000BBB  20                 	db	32
   952  000BBC  00                 	db	0
   953  000BBD                     u809:
   954  000BBD  20                 	db	32
   955  000BBE  20                 	db	32
   956  000BBF  53                 	db	83	;'S'
   957  000BC0  63                 	db	99	;'c'
   958  000BC1  61                 	db	97	;'a'
   959  000BC2  6E                 	db	110	;'n'
   960  000BC3  6C                 	db	108	;'l'
   961  000BC4  69                 	db	105	;'i'
   962  000BC5  6E                 	db	110	;'n'
   963  000BC6  65                 	db	101	;'e'
   964  000BC7  20                 	db	32
   965  000BC8  20                 	db	32
   966  000BC9  20                 	db	32
   967  000BCA  20                 	db	32
   968  000BCB  3A                 	db	58	;':'
   969  000BCC  20                 	db	32
   970  000BCD  00                 	db	0
   971  000BCE                     u609:
   972  000BCE  20                 	db	32
   973  000BCF  20                 	db	32
   974  000BD0  20                 	db	32
   975  000BD1  73                 	db	115	;'s'
   976  000BD2  70                 	db	112	;'p'
   977  000BD3  65                 	db	101	;'e'
   978  000BD4  65                 	db	101	;'e'
   979  000BD5  64                 	db	100	;'d'
   980  000BD6  20                 	db	32
   981  000BD7  20                 	db	32
   982  000BD8  20                 	db	32
   983  000BD9  20                 	db	32
   984  000BDA  3A                 	db	58	;':'
   985  000BDB  20                 	db	32
   986  000BDC  00                 	db	0
   987  000BDD                     u449:
   988  000BDD  66                 	db	102	;'f'
   989  000BDE  61                 	db	97	;'a'
   990  000BDF  73                 	db	115	;'s'
   991  000BE0  74                 	db	116	;'t'
   992  000BE1  20                 	db	32
   993  000BE2  20                 	db	32
   994  000BE3  00                 	db	0
   995  000BE4                     u99:
   996  000BE4  6E                 	db	110	;'n'
   997  000BE5  6F                 	db	111	;'o'
   998  000BE6  6E                 	db	110	;'n'
   999  000BE7  65                 	db	101	;'e'
  1000  000BE8  20                 	db	32
  1001  000BE9  20                 	db	32
  1002  000BEA  00                 	db	0
  1003  000BEB                     u229:
  1004  000BEB  2D                 	db	45
  1005  000BEC  2D                 	db	45
  1006  000BED  2D                 	db	45
  1007  000BEE  2D                 	db	45
  1008  000BEF  2D                 	db	45
  1009  000BF0  2D                 	db	45
  1010  000BF1  2D                 	db	45
  1011  000BF2  2D                 	db	45
  1012  000BF3  2D                 	db	45
  1013  000BF4  2D                 	db	45
  1014  000BF5  2D                 	db	45
  1015  000BF6  2D                 	db	45
  1016  000BF7  20                 	db	32
  1017  000BF8  20                 	db	32
  1018  000BF9  20                 	db	32
  1019  000BFA  00                 	db	0
  1020  000BFB                     u169:
  1021  000BFB  20                 	db	32
  1022  000BFC  20                 	db	32
  1023  000BFD  2A                 	db	42
  1024  000BFE  2A                 	db	42
  1025  000BFF  4D                 	db	77	;'M'
  1026  000C00  69                 	db	105	;'i'
  1027  000C01  6E                 	db	110	;'n'
  1028  000C02  69                 	db	105	;'i'
  1029  000C03  6D                 	db	109	;'m'
  1030  000C04  69                 	db	105	;'i'
  1031  000C05  67                 	db	103	;'g'
  1032  000C06  20                 	db	32
  1033  000C07  4D                 	db	77	;'M'
  1034  000C08  65                 	db	101	;'e'
  1035  000C09  6E                 	db	110	;'n'
  1036  000C0A  75                 	db	117	;'u'
  1037  000C0B  2A                 	db	42
  1038  000C0C  2A                 	db	42
  1039  000C0D  20                 	db	32
  1040  000C0E  1A                 	db	26
  1041  000C0F  00                 	db	0
  1042  000C10                     u399:
  1043  000C10  20                 	db	32
  1044  000C11  1B                 	db	27
  1045  000C12  20                 	db	32
  1046  000C13  20                 	db	32
  1047  000C14  2D                 	db	45
  1048  000C15  3D                 	db	61	;'='
  1049  000C16  20                 	db	32
  1050  000C17  43                 	db	67	;'C'
  1051  000C18  48                 	db	72	;'H'
  1052  000C19  49                 	db	73	;'I'
  1053  000C1A  50                 	db	80	;'P'
  1054  000C1B  53                 	db	83	;'S'
  1055  000C1C  45                 	db	69	;'E'
  1056  000C1D  54                 	db	84	;'T'
  1057  000C1E  20                 	db	32
  1058  000C1F  3D                 	db	61	;'='
  1059  000C20  2D                 	db	45
  1060  000C21  20                 	db	32
  1061  000C22  20                 	db	32
  1062  000C23  1A                 	db	26
  1063  000C24  00                 	db	0
  1064  000C25                     u509:
  1065  000C25  20                 	db	32
  1066  000C26  1B                 	db	27
  1067  000C27  20                 	db	32
  1068  000C28  20                 	db	32
  1069  000C29  2D                 	db	45
  1070  000C2A  3D                 	db	61	;'='
  1071  000C2B  20                 	db	32
  1072  000C2C  4D                 	db	77	;'M'
  1073  000C2D  45                 	db	69	;'E'
  1074  000C2E  4D                 	db	77	;'M'
  1075  000C2F  4F                 	db	79	;'O'
  1076  000C30  52                 	db	82	;'R'
  1077  000C31  59                 	db	89	;'Y'
  1078  000C32  20                 	db	32
  1079  000C33  3D                 	db	61	;'='
  1080  000C34  2D                 	db	45
  1081  000C35  20                 	db	32
  1082  000C36  20                 	db	32
  1083  000C37  20                 	db	32
  1084  000C38  1A                 	db	26
  1085  000C39  00                 	db	0
  1086  000C3A                     u589:
  1087  000C3A  20                 	db	32
  1088  000C3B  1B                 	db	27
  1089  000C3C  20                 	db	32
  1090  000C3D  20                 	db	32
  1091  000C3E  2D                 	db	45
  1092  000C3F  3D                 	db	61	;'='
  1093  000C40  20                 	db	32
  1094  000C41  44                 	db	68	;'D'
  1095  000C42  52                 	db	82	;'R'
  1096  000C43  49                 	db	73	;'I'
  1097  000C44  56                 	db	86	;'V'
  1098  000C45  45                 	db	69	;'E'
  1099  000C46  53                 	db	83	;'S'
  1100  000C47  20                 	db	32
  1101  000C48  3D                 	db	61	;'='
  1102  000C49  2D                 	db	45
  1103  000C4A  20                 	db	32
  1104  000C4B  20                 	db	32
  1105  000C4C  20                 	db	32
  1106  000C4D  1A                 	db	26
  1107  000C4E  00                 	db	0
  1108  000C4F                     u779:
  1109  000C4F  20                 	db	32
  1110  000C50  1B                 	db	27
  1111  000C51  20                 	db	32
  1112  000C52  20                 	db	32
  1113  000C53  20                 	db	32
  1114  000C54  2D                 	db	45
  1115  000C55  3D                 	db	61	;'='
  1116  000C56  20                 	db	32
  1117  000C57  56                 	db	86	;'V'
  1118  000C58  49                 	db	73	;'I'
  1119  000C59  44                 	db	68	;'D'
  1120  000C5A  45                 	db	69	;'E'
  1121  000C5B  4F                 	db	79	;'O'
  1122  000C5C  20                 	db	32
  1123  000C5D  3D                 	db	61	;'='
  1124  000C5E  2D                 	db	45
  1125  000C5F  20                 	db	32
  1126  000C60  20                 	db	32
  1127  000C61  20                 	db	32
  1128  000C62  1A                 	db	26
  1129  000C63  00                 	db	0
  1130  000C64                     u369:
  1131  000C64  20                 	db	32
  1132  000C65  20                 	db	32
  1133  000C66  19                 	db	25
  1134  000C67  20                 	db	32
  1135  000C68  20                 	db	32
  1136  000C69  20                 	db	32
  1137  000C6A  20                 	db	32
  1138  000C6B  20                 	db	32
  1139  000C6C  65                 	db	101	;'e'
  1140  000C6D  78                 	db	120	;'x'
  1141  000C6E  69                 	db	105	;'i'
  1142  000C6F  74                 	db	116	;'t'
  1143  000C70  20                 	db	32
  1144  000C71  20                 	db	32
  1145  000C72  20                 	db	32
  1146  000C73  20                 	db	32
  1147  000C74  20                 	db	32
  1148  000C75  20                 	db	32
  1149  000C76  19                 	db	25
  1150  000C77  00                 	db	0
  1151  000C78                     u379:
  1152  000C78  20                 	db	32
  1153  000C79  20                 	db	32
  1154  000C7A  18                 	db	24
  1155  000C7B  20                 	db	32
  1156  000C7C  20                 	db	32
  1157  000C7D  20                 	db	32
  1158  000C7E  20                 	db	32
  1159  000C7F  20                 	db	32
  1160  000C80  73                 	db	115	;'s'
  1161  000C81  61                 	db	97	;'a'
  1162  000C82  76                 	db	118	;'v'
  1163  000C83  65                 	db	101	;'e'
  1164  000C84  20                 	db	32
  1165  000C85  20                 	db	32
  1166  000C86  20                 	db	32
  1167  000C87  20                 	db	32
  1168  000C88  20                 	db	32
  1169  000C89  20                 	db	32
  1170  000C8A  18                 	db	24
  1171  000C8B  00                 	db	0
  1172  000000                     
  1173  000000                     
  1174  000000                     
  1175  000000                     
  1176  000000                     
  1177  000000                     
  1178  000000                     
  1179  000000                     
  1180  000000                     
  1181  000000                     
  1182  000000                     
  1183  000000                     
  1184  000000                     
  1185  000000                     
  1186  000000                     
  1187  000000                     
  1188  000000                     
  1189  000000                     
  1190  000000                     
  1191  000000                     
  1192  000000                     
  1193  000000                     
  1194  000000                     
  1195  000000                     
  1196  000000                     
  1197  000000                     
  1198  000000                     
  1199  000000                     
  1200  000000                     
  1201  000000                     
  1202  000000                     
  1203  000000                     
  1204  000000                     
  1205  000000                     
  1206  000000                     
  1207  000000                     
  1208  000000                     
  1209  000000                     
  1210  000000                     
  1211  000000                     
  1212  000000                     
  1213  000000                     
  1214  000000                     
  1215  000000                     
  1216  000000                     
  1217  000000                     
  1218  000000                     
  1219  000000                     
  1220  000000                     
  1221  000000                     
  1222  000000                     
  1223  000000                     
  1224  000000                     
  1225  000000                     
  1226  000000                     
  1227  000000                     
  1228  000000                     
  1229  000000                     
  1230  000000                     
  1231  000000                     
  1232  000000                     
  1233  000000                     
  1234  000000                     
  1235  000000                     
  1236  000000                     
  1237  000000                     
  1238  000000                     
  1239  000000                     
  1240  000000                     
  1241  000000                     
  1242  000000                     
  1243  000000                     
  1244  000000                     
  1245  000000                     
  1246  000000                     
  1247  000000                     
  1248  000000                     
  1249  000000                     
  1250  000000                     
  1251  000000                     
  1252  000000                     
  1253  000000                     
  1254  000000                     
  1255  000000                     
  1256  000000                     
  1257  000000                     
  1258  000000                     
  1259  000000                     
  1260  000000                     
  1261  000000                     
  1262  000000                     
  1263  000000                     
  1264  000000                     
  1265  000000                     
  1266  000000                     
  1267  000000                     
  1268  000000                     
  1269  000000                     
  1270  000000                     
  1271  000000                     
  1272  000000                     
  1273  000000                     
  1274  000000                     
  1275  000000                     
  1276  000000                     
  1277  000000                     
  1278  000000                     
  1279  000000                     
  1280  000000                     
  1281  000000                     
  1282  000000                     
  1283  000000                     
  1284  000000                     
  1285  000000                     
  1286  000000                     
  1287  000000                     
  1288  000000                     
  1289  000000                     
  1290  000000                     
  1291  000000                     
  1292  000000                     
  1293  000000                     
  1294  000000                     
  1295  000000                     
  1296  000000                     
  1297  000000                     
  1298  000000                     
  1299  000000                     
  1300  000000                     
  1301  000000                     
  1302  000000                     
  1303  000000                     
  1304  000000                     
  1305  000000                     
  1306  000000                     
  1307  000000                     
  1308  000000                     
  1309  000000                     
  1310  000000                     
  1311  000000                     
  1312  000000                     
  1313  000000                     
  1314  000000                     
  1315  000000                     
  1316  000000                     
  1317  000000                     
  1318  000000                     
  1319  000000                     
  1320  000000                     
  1321  000000                     
  1322  000000                     
  1323  000000                     
  1324  000000                     
  1325  000000                     
  1326  000000                     
  1327  000000                     
  1328  000000                     
  1329  000000                     
  1330  000000                     
  1331  000000                     
  1332  000000                     
  1333  000000                     
  1334  000000                     
  1335  000000                     
  1336  000000                     
  1337  000000                     
  1338  000000                     
  1339  000000                     
  1340  000000                     
  1341  000000                     
  1342  000000                     
  1343  000000                     
  1344  000000                     
  1345  000000                     
  1346  000000                     
  1347  000000                     
  1348  000000                     
  1349  000000                     
  1350  000000                     
  1351  000000                     
  1352  000000                     
  1353  000000                     
  1354  000000                     
  1355  000000                     
  1356  000000                     
  1357  000000                     
  1358  000000                     
  1359  000000                     
  1360  000000                     
  1361  000000                     
  1362  000000                     
  1363  000000                     
  1364  000000                     
  1365  000000                     
  1366  000000                     
  1367  000000                     
  1368  000000                     
  1369  000000                     
  1370  000000                     
  1371  000000                     
  1372  000000                     
  1373  000000                     
  1374  000000                     
  1375  000000                     
  1376  000000                     
  1377  000000                     
  1378  000000                     
  1379  000000                     
  1380  000000                     
  1381  000000                     
  1382  000000                     
  1383  000000                     
  1384  000000                     
  1385  000000                     
  1386  000000                     
  1387  000000                     
  1388  000000                     
  1389  000000                     
  1390  000000                     
  1391  000000                     
  1392  000000                     
  1393  000000                     
  1394  000000                     
  1395  000000                     
  1396  000000                     
  1397  000000                     
  1398  000000                     
  1399  000000                     
  1400  000000                     
  1401  000000                     
  1402  000000                     
  1403  000000                     
  1404  000000                     
  1405  000000                     
  1406  000000                     
  1407  000000                     
  1408  000000                     
  1409  000000                     
  1410  000000                     
  1411  000000                     
  1412  000000                     
  1413  000000                     
  1414  000000                     
  1415  000000                     
  1416  000000                     
  1417  000000                     
  1418  000000                     
  1419  000000                     
  1420  000000                     
  1421  000000                     
  1422  000000                     
  1423  000000                     
  1424  000000                     
  1425  000000                     
  1426  000000                     
  1427  000000                     
  1428  000000                     
  1429  000000                     
  1430  000000                     
  1431  000000                     
  1432  000000                     
  1433  000000                     
  1434  000000                     
  1435  000000                     
  1436  000000                     
  1437  000000                     
  1438  000000                     
  1439  000000                     
  1440  000000                     
  1441  000000                     
  1442  000000                     
  1443  000000                     
  1444  000000                     
  1445  000000                     
  1446  000000                     
  1447  000000                     
  1448  000000                     
  1449  000000                     
  1450  000000                     
  1451  000000                     
  1452  000000                     
  1453  000000                     
  1454  000000                     
  1455  000000                     
  1456  000000                     
  1457  000000                     
  1458                           
  1459                           	psect	text
  1460                           ;menu.c: 55: const char * const config_scanline_
      +                          msg[] = {"off", "dim", "blk"};
  1461                           ;menu.c: 58: bit up;
  1462                           ;menu.c: 59: bit down;
  1463                           ;menu.c: 60: bit select;
  1464                           ;menu.c: 61: bit menu;
  1465                           ;menu.c: 62: bit right;
  1466                           ;menu.c: 63: bit left;
  1467                           ;menu.c: 66: const unsigned char *fbFileExt;
  1468                           ;menu.c: 67: unsigned char fbSelectedState;
  1469                           ;menu.c: 68: unsigned char fbExitState;
  1470                           ;menu.c: 69: unsigned char fbAllowDirectorySelec
      +                          t;
  1471                           ;menu.c: 72: void HandleUI(void)
  1472                           ;menu.c: 73: {
  1473  000FFE                     _HandleUI:
  1474                           ;       param _code assigned to ?_ErrorMessage+2
  1475  000000                     _ErrorMessage$code	set	?_ErrorMessage+2
  1476                           ;       param _message assigned to ?_ErrorMessag
      +                          e+0
  1477  000000                     _ErrorMessage$message	set	?_ErrorMessage
  1478                           ;       param _allowDirectorySelect assigned to 
      +                          ?_SelectFile+4
  1479  000000                     _SelectFile$allowDirectorySelect	set	?_SelectFil
      +                          e+4
  1480                           ;       param _exitState assigned to ?_SelectFil
      +                          e+3
  1481  000000                     _SelectFile$exitState	set	?_SelectFile+3
  1482                           ;       param _selectedState assigned to ?_Selec
      +                          tFile+2
  1483  000000                     _SelectFile$selectedState	set	?_SelectFile+2
  1484                           ;       param _extension assigned to ?_SelectFil
      +                          e+0
  1485  000000                     _SelectFile$extension	set	?_SelectFile
  1486                           ;       param _max assigned to ?_HandleUpDown+0
  1487  000000                     _HandleUpDown$max	set	?_HandleUpDown
  1488                           ;	_i assigned to ?a_HandleUI+1
  1489  000000                     _HandleUI$i	set	?a_HandleUI+1
  1490                           ;	_c assigned to ?a_HandleUI+0
  1491  000000                     _HandleUI$c	set	?a_HandleUI
  1492                           ; errata NOP at function entry point
  1493  000FFE  FFFF               	dw	65535
  1494  001000                     f4052:
  1495  000000                     
  1496                           ;menu.c: 74: unsigned char i;
  1497  001000  ECB8  F039         	call	_OsdGetCtrl	;wreg free
  1498  001004  0100               	movlb	__Lparam shr (0+8)
  1499  001006  6F40               	movwf	?a_HandleUI^(__Lparam& (0+65280)),b
  1500                           ;menu.c: 81: up = 0;
  1501  001008  9A0D               	bcf	_up/(0+8),_up& (0+7),c
  1502                           ;menu.c: 82: down = 0;
  1503  00100A  900D               	bcf	_down/(0+8),_down& (0+7),c
  1504                           ;menu.c: 83: select = 0;
  1505  00100C  980D               	bcf	_select/(0+8),_select& (0+7),c
  1506                           ;menu.c: 84: menu = 0;
  1507  00100E  940D               	bcf	_menu/(0+8),_menu& (0+7),c
  1508                           ;menu.c: 85: right = 0;
  1509  001010  960D               	bcf	_right/(0+8),_right& (0+7),c
  1510                           ;menu.c: 86: left = 0;
  1511  001012  920D               	bcf	_left/(0+8),_left& (0+7),c
  1512                           ;menu.c: 88: if (c==0x4C) { up = 1; }
  1513  001014  5140               	movf	?a_HandleUI^(__Lparam& (0+65280)),w
  1514  001016  0A4C               	xorlw	76
  1515  001018  B4D8               	btfsc	status,2,c
  1516  00101A  8A0D               	bsf	_up/(0+8),_up& (0+7),c
  1517                           ;menu.c: 89: if (c==0x4D) { down = 1; }
  1518  00101C  5140               	movf	?a_HandleUI^(__Lparam& (0+65280)),w
  1519  00101E  0A4D               	xorlw	77
  1520  001020  B4D8               	btfsc	status,2,c
  1521  001022  800D               	bsf	_down/(0+8),_down& (0+7),c
  1522                           ;menu.c: 90: if (c==0x44 || c==0x40) { select = 
      +                          1; }
  1523  001024  5140               	movf	?a_HandleUI^(__Lparam& (0+65280)),w
  1524  001026  0A44               	xorlw	68
  1525  001028  E003               	bz	u50
  1526  00102A  5140               	movf	?a_HandleUI^(__Lparam& (0+65280)),w
  1527  00102C  0A40               	xorlw	64
  1528  00102E  B4D8               	btfsc	status,2,c
  1529  001030                     u50:
  1530  001030  880D               	bsf	_select/(0+8),_select& (0+7),c
  1531                           ;menu.c: 91: if (c==0x88) { menu = 1; }
  1532  001032  0100               	movlb	__Lparam shr (0+8)
  1533  001034  5140               	movf	?a_HandleUI^(__Lparam& (0+65280)),w
  1534  001036  0A88               	xorlw	-120
  1535  001038  B4D8               	btfsc	status,2,c
  1536  00103A  840D               	bsf	_menu/(0+8),_menu& (0+7),c
  1537                           ;menu.c: 92: if (c==0x4E) { right = 1; }
  1538  00103C  5140               	movf	?a_HandleUI^(__Lparam& (0+65280)),w
  1539  00103E  0A4E               	xorlw	78
  1540  001040  B4D8               	btfsc	status,2,c
  1541  001042  860D               	bsf	_right/(0+8),_right& (0+7),c
  1542                           ;menu.c: 93: if (c==0x4F) { left = 1; }
  1543  001044  5140               	movf	?a_HandleUI^(__Lparam& (0+65280)),w
  1544  001046  0A4F               	xorlw	79
  1545  001048  B4D8               	btfsc	status,2,c
  1546  00104A  820D               	bsf	_left/(0+8),_left& (0+7),c
  1547                           ;menu.c: 96: if (c==0x45 && menustate!=MENU_NONE
      +                          2) { menu = 1; }
  1548  00104C  5140               	movf	?a_HandleUI^(__Lparam& (0+65280)),w
  1549  00104E  0A45               	xorlw	69
  1550  001050  E002 EF5D  F012    	bnz	l27
  1551  001056  C357  F000         	movff	_menustate,btemp
  1552  00105A  0400               	decf	btemp,w,c
  1553  00105C  E102 EF5D  F012    	bz	l27
  1554  001062  840D               	bsf	_menu/(0+8),_menu& (0+7),c
  1555                           ;menu.c: 99: switch (menustate)
  1556  001064  EF5D  F012         	goto	l27
  1557  001068                     l28:
  1558                           ;menu.c: 100: {
  1559                           ;menu.c: 105: OsdDisable();
  1560  001068  EC3E  F039         	call	_OsdDisable	;wreg free
  1561                           ;menu.c: 106: menustate = MENU_NONE2;
  1562  00106C  0E01               	movlw	1
  1563  00106E  D0E5               	goto	L4
  1564                           ;menu.c: 107: break;
  1565  001070                     l29:
  1566                           ;menu.c: 109: case MENU_NONE2 :
  1567                           ;menu.c: 111: if (menu)
  1568  001070  A40D               	btfss	_menu/(0+8),_menu& (0+7),c
  1569  001072  EF73  F012         	goto	l26
  1570                           ;menu.c: 112: {
  1571  001076  0E02               	movlw	2
  1572  001078  CFE8 F357          	movff	wreg,_menustate
  1573                           ;menu.c: 114: menusub = 0;
  1574  00107C  0103               	movlb	_menusub shr (0+8)
  1575  00107E  6B64               	clrf	_menusub& (0+255),b
  1576                           ;menu.c: 115: OsdClear();
  1577  001080  EC20  F039         	call	_OsdClear	;wreg free
  1578                           ;menu.c: 116: OsdEnable();
  1579  001084  EC38  F039         	call	_OsdEnable	;wreg free
  1580                           ;menu.c: 117: }
  1581  001088  EF73  F012         	goto	l26
  1582  00108C                     l31:
  1583                           ;menu.c: 123: case MENU_MAIN1 :
  1584                           ;menu.c: 125: OsdWrite(0, "  **Minimig Menu** \x
      +                          1A", 0);
  1585  00108C  0100               	movlb	__Lparam shr (0+8)
  1586  00108E  0EFB               	movlw	low u169
  1587  001090  6F5D               	movwf	?_OsdWrite^(__Lparam& (0+65280)),b
  1588  001092  0E0B               	movlw	high u169
  1589  001094  6F5E               	movwf	(?_OsdWrite+1)^(__Lparam& (0+65280)),b
  1590  001096  6B5F               	clrf	(?_OsdWrite+2)^(__Lparam& (0+65280)),b
  1591  001098  0E00               	movlw	0
  1592  00109A  ECE8  F037         	call	_OsdWrite
  1593                           ;menu.c: 128: for(i=0; i < 0x04; i++)
  1594  00109E  0100               	movlb	__Lparam shr (0+8)
  1595  0010A0  6B41               	clrf	(?a_HandleUI+1)^(__Lparam& (0+65280)),b
  1596  0010A2                     l32:
  1597                           ;menu.c: 129: {
  1598  0010A2  0100               	movlb	__Lparam shr (0+8)
  1599  0010A4  0E65               	movlw	low _s
  1600  0010A6  6F53               	movwf	(?_sprintf+2)^(__Lparam& (0+65280)),b
  1601  0010A8  0E03               	movlw	high _s
  1602  0010AA  6F54               	movwf	(?_sprintf+3)^(__Lparam& (0+65280)),b
  1603  0010AC  0E57               	movlw	low u179
  1604  0010AE  6F55               	movwf	(?_sprintf+4)^(__Lparam& (0+65280)),b
  1605  0010B0  0E0B               	movlw	high u179
  1606  0010B2  6F56               	movwf	(?_sprintf+5)^(__Lparam& (0+65280)),b
  1607  0010B4  C041  F000         	movff	?a_HandleUI+1,btemp
  1608  0010B8  6A01               	clrf	btemp+1,c
  1609  0010BA  C000  F044         	movff	btemp,?a_HandleUI+4
  1610  0010BE  C001  F045         	movff	btemp+1,?a_HandleUI+5
  1611  0010C2  0E44               	movlw	low (?a_HandleUI+4)
  1612  0010C4  CFE8 F051          	movff	wreg,?_sprintf
  1613  0010C8  0E00               	movlw	high (?a_HandleUI+4)
  1614  0010CA  CFE8 F052          	movff	wreg,?_sprintf+1
  1615  0010CE  EC2F  F032         	call	_sprintf	;wreg free
  1616                           ;menu.c: 131: if(i > config.floppy_drives)
  1617  0010D2  0100               	movlb	__Lparam shr (0+8)
  1618  0010D4  5141               	movf	(?a_HandleUI+1)^(__Lparam& (0+65280)),w
  1619  0010D6  0100               	movlb	(_config+17) shr (0+8)
  1620  0010D8  612F               	cpfslt	(_config+17)& (0+255),b
  1621  0010DA  D00C               	goto	l35
  1622                           ;menu.c: 132: { strcat(s, "disabled"); }
  1623  0010DC  0100               	movlb	__Lparam shr (0+8)
  1624  0010DE  0E65               	movlw	low _s
  1625  0010E0  6F46               	movwf	?_strcat^(__Lparam& (0+65280)),b
  1626  0010E2  0E03               	movlw	high _s
  1627  0010E4  6F47               	movwf	(?_strcat+1)^(__Lparam& (0+65280)),b
  1628  0010E6  0E13               	movlw	low u189
  1629  0010E8  6F48               	movwf	(?_strcat+2)^(__Lparam& (0+65280)),b
  1630  0010EA  0E0A               	movlw	high u189
  1631  0010EC  6F49               	movwf	(?_strcat+3)^(__Lparam& (0+65280)),b
  1632  0010EE  ECFC  F03D         	call	_strcat	;wreg free
  1633  0010F2  D066               	goto	l36
  1634  0010F4                     l35:
  1635                           ;menu.c: 133: else
  1636  0010F4  0100               	movlb	__Lparam shr (0+8)
  1637  0010F6  5141               	movf	(?a_HandleUI+1)^(__Lparam& (0+65280)),w
  1638  0010F8  0D18               	mullw	24
  1639  0010FA  0E02               	movlw	low _df
  1640  0010FC  24F3               	addwf	prodl,w,c
  1641  0010FE  6EE9               	movwf	fsr0l,c
  1642  001100  0E02               	movlw	high _df
  1643  001102  20F4               	addwfc	prodh,w,c
  1644  001104  6EEA               	movwf	fsr0h,c
  1645  001106  50EF               	movf	indf0,w,c
  1646  001108  6E00               	movwf	btemp,c
  1647  00110A  A000               	btfss	btemp,0,c
  1648  00110C  D04E               	goto	l37
  1649                           ;menu.c: 136: {
  1650  00110E  0E65               	movlw	low _s
  1651  001110  6F46               	movwf	?_strncat^(__Lparam& (0+65280)),b
  1652  001112  0E03               	movlw	high _s
  1653  001114  6F47               	movwf	(?_strncat+1)^(__Lparam& (0+65280)),b
  1654  001116  5141               	movf	(?a_HandleUI+1)^(__Lparam& (0+65280)),w
  1655  001118  0D18               	mullw	24
  1656  00111A  0E0E               	movlw	low (_df+12)
  1657  00111C  24F3               	addwf	prodl,w,c
  1658  00111E  6F48               	movwf	(?_strncat+2)^(__Lparam& (0+65280)),b
  1659  001120  0E02               	movlw	high (_df+12)
  1660  001122  20F4               	addwfc	prodh,w,c
  1661  001124  6F49               	movwf	(?_strncat+3)^(__Lparam& (0+65280)),b
  1662  001126  0E08               	movlw	8
  1663  001128  6F4A               	movwf	(?_strncat+4)^(__Lparam& (0+65280)),b
  1664  00112A  6B4B               	clrf	(?_strncat+5)^(__Lparam& (0+65280)),b
  1665  00112C  EC8C  F03D         	call	_strncat	;wreg free
  1666                           ;menu.c: 139: strcat(s,".");
  1667  001130  0100               	movlb	__Lparam shr (0+8)
  1668  001132  0E65               	movlw	low _s
  1669  001134  6F46               	movwf	?_strcat^(__Lparam& (0+65280)),b
  1670  001136  0E03               	movlw	high _s
  1671  001138  6F47               	movwf	(?_strcat+1)^(__Lparam& (0+65280)),b
  1672  00113A  0EA6               	movlw	low u199
  1673  00113C  6F48               	movwf	(?_strcat+2)^(__Lparam& (0+65280)),b
  1674  00113E  0E0A               	movlw	high u199
  1675  001140  6F49               	movwf	(?_strcat+3)^(__Lparam& (0+65280)),b
  1676  001142  ECFC  F03D         	call	_strcat	;wreg free
  1677                           ;menu.c: 140: strncat(s, &df[i].name[8], 3);
  1678  001146  0100               	movlb	__Lparam shr (0+8)
  1679  001148  0E65               	movlw	low _s
  1680  00114A  6F46               	movwf	?_strncat^(__Lparam& (0+65280)),b
  1681  00114C  0E03               	movlw	high _s
  1682  00114E  6F47               	movwf	(?_strncat+1)^(__Lparam& (0+65280)),b
  1683  001150  5141               	movf	(?a_HandleUI+1)^(__Lparam& (0+65280)),w
  1684  001152  0D18               	mullw	24
  1685  001154  0E16               	movlw	low (_df+20)
  1686  001156  24F3               	addwf	prodl,w,c
  1687  001158  6F48               	movwf	(?_strncat+2)^(__Lparam& (0+65280)),b
  1688  00115A  0E02               	movlw	high (_df+20)
  1689  00115C  20F4               	addwfc	prodh,w,c
  1690  00115E  6F49               	movwf	(?_strncat+3)^(__Lparam& (0+65280)),b
  1691  001160  0E03               	movlw	3
  1692  001162  6F4A               	movwf	(?_strncat+4)^(__Lparam& (0+65280)),b
  1693  001164  6B4B               	clrf	(?_strncat+5)^(__Lparam& (0+65280)),b
  1694  001166  EC8C  F03D         	call	_strncat	;wreg free
  1695                           ;menu.c: 143: strcat(s, df[i].status & 0x10 ? " 
      +                          RW" : " RO");
  1696  00116A  0100               	movlb	__Lparam shr (0+8)
  1697  00116C  0E65               	movlw	low _s
  1698  00116E  6F46               	movwf	?_strcat^(__Lparam& (0+65280)),b
  1699  001170  0E03               	movlw	high _s
  1700  001172  6F47               	movwf	(?_strcat+1)^(__Lparam& (0+65280)),b
  1701  001174  5141               	movf	(?a_HandleUI+1)^(__Lparam& (0+65280)),w
  1702  001176  0D18               	mullw	24
  1703  001178  0E02               	movlw	low _df
  1704  00117A  24F3               	addwf	prodl,w,c
  1705  00117C  6EE9               	movwf	fsr0l,c
  1706  00117E  0E02               	movlw	high _df
  1707  001180  20F4               	addwfc	prodh,w,c
  1708  001182  6EEA               	movwf	fsr0h,c
  1709  001184  50EF               	movf	indf0,w,c
  1710  001186  6E00               	movwf	btemp,c
  1711  001188  B800               	btfsc	btemp,4,c
  1712  00118A  D004               	goto	u166
  1713  00118C  0E5A               	movlw	low u219
  1714  00118E  6E00               	movwf	btemp,c
  1715  001190  0E0A               	movlw	high u219
  1716  001192  D003               	goto	L2
  1717  001194                     u166:
  1718  001194  0E56               	movlw	low u209
  1719  001196  6E00               	movwf	btemp,c
  1720  001198  0E0A               	movlw	high u209
  1721  00119A                     L2:
  1722  00119A  6E01               	movwf	btemp+1,c
  1723  00119C  C000  F048         	movff	btemp,?_strcat+2
  1724  0011A0  C001  F049         	movff	btemp+1,?_strcat+3
  1725  0011A4  ECFC  F03D         	call	_strcat	;wreg free
  1726                           ;menu.c: 144: }
  1727  0011A8  D00B               	goto	l36
  1728  0011AA                     l37:
  1729                           ;menu.c: 145: else
  1730  0011AA  0100               	movlb	__Lparam shr (0+8)
  1731  0011AC  0E65               	movlw	low _s
  1732  0011AE  6F46               	movwf	?_strcat^(__Lparam& (0+65280)),b
  1733  0011B0  0E03               	movlw	high _s
  1734  0011B2  6F47               	movwf	(?_strcat+1)^(__Lparam& (0+65280)),b
  1735  0011B4  0EEB               	movlw	low u229
  1736  0011B6  6F48               	movwf	(?_strcat+2)^(__Lparam& (0+65280)),b
  1737  0011B8  0E0B               	movlw	high u229
  1738  0011BA  6F49               	movwf	(?_strcat+3)^(__Lparam& (0+65280)),b
  1739  0011BC  ECFC  F03D         	call	_strcat	;wreg free
  1740  0011C0                     l36:
  1741                           ;menu.c: 149: }
  1742  0011C0  0100               	movlb	__Lparam shr (0+8)
  1743  0011C2  0E65               	movlw	low _s
  1744  0011C4  6F5D               	movwf	?_OsdWrite^(__Lparam& (0+65280)),b
  1745  0011C6  0E03               	movlw	high _s
  1746  0011C8  6F5E               	movwf	(?_OsdWrite+1)^(__Lparam& (0+65280)),b
  1747  0011CA  C364  FFE8         	movff	_menusub,wreg
  1748  0011CE  1941               	xorwf	(?a_HandleUI+1)^(__Lparam& (0+65280)),w
  1749  0011D0  0E00               	movlw	0
  1750  0011D2  B4D8               	btfsc	status,2,c
  1751  0011D4  0E01               	movlw	1
  1752  0011D6  6F5F               	movwf	(?_OsdWrite+2)^(__Lparam& (0+65280)),b
  1753  0011D8  5141               	movf	(?a_HandleUI+1)^(__Lparam& (0+65280)),w
  1754  0011DA  0F02               	addlw	2
  1755  0011DC  ECE8  F037         	call	_OsdWrite
  1756  0011E0  0100               	movlb	__Lparam shr (0+8)
  1757  0011E2  2B41               	incf	(?a_HandleUI+1)^(__Lparam& (0+65280)),f,b
  1758  0011E4  0E03               	movlw	3
  1759  0011E6  6541               	cpfsgt	(?a_HandleUI+1)^(__Lparam& (0+65280)),b
  1760  0011E8  D75C               	goto	l32
  1761                           ;menu.c: 154: }
  1762  0011EA  0E6D               	movlw	low u239
  1763  0011EC  6F5D               	movwf	?_OsdWrite^(__Lparam& (0+65280)),b
  1764  0011EE  0E09               	movlw	high u239
  1765  0011F0  6F5E               	movwf	(?_OsdWrite+1)^(__Lparam& (0+65280)),b
  1766  0011F2  C364  FFE8         	movff	_menusub,wreg
  1767  0011F6  0A04               	xorlw	4
  1768  0011F8  0E00               	movlw	0
  1769  0011FA  B4D8               	btfsc	status,2,c
  1770  0011FC  0E01               	movlw	1
  1771  0011FE  6F5F               	movwf	(?_OsdWrite+2)^(__Lparam& (0+65280)),b
  1772  001200  0E07               	movlw	7
  1773  001202  ECE8  F037         	call	_OsdWrite
  1774                           ;menu.c: 160: menustate = MENU_MAIN2;
  1775  001206  0E03               	movlw	3
  1776  001208  D018               	goto	L4
  1777                           ;menu.c: 161: break;
  1778  00120A                     l39:
  1779                           ;menu.c: 163: case MENU_MAIN2 :
  1780                           ;menu.c: 165: if (menu)
  1781  00120A  A40D               	btfss	_menu/(0+8),_menu& (0+7),c
  1782  00120C  D004               	goto	l40
  1783  00120E                     u180:
  1784                           ;menu.c: 166: { menustate = MENU_NONE1; }
  1785  00120E  0103               	movlb	_menustate shr (0+8)
  1786  001210  6B57               	clrf	_menustate& (0+255),b
  1787  001212  EF73  F012         	goto	l26
  1788  001216                     l40:
  1789                           ;menu.c: 167: else if (up)
  1790  001216  AA0D               	btfss	_up/(0+8),_up& (0+7),c
  1791  001218  D014               	goto	l42
  1792                           ;menu.c: 168: {
  1793  00121A  0103               	movlb	_menusub shr (0+8)
  1794  00121C  5364               	movf	_menusub& (0+255),f,b
  1795  00121E  E001               	bz	l43
  1796                           ;menu.c: 171: { menusub--; }
  1797  001220  0764               	decf	_menusub& (0+255),f,b
  1798  001222                     l43:
  1799                           ;menu.c: 173: if (menusub < 0x04 && menusub > co
      +                          nfig.floppy_drives)
  1800  001222  0E04               	movlw	4
  1801  001224  0103               	movlb	_menusub shr (0+8)
  1802  001226  6164               	cpfslt	_menusub& (0+255),b
  1803  001228  D007               	goto	L16
  1804  00122A  C364  FFE8         	movff	_menusub,wreg
  1805  00122E  0100               	movlb	(_config+17) shr (0+8)
  1806  001230  612F               	cpfslt	(_config+17)& (0+255),b
  1807  001232  D002               	goto	L16
  1808                           ;menu.c: 174: { menusub = config.floppy_drives; 
      +                          }
  1809  001234  C02F  F364         	movff	_config+17,_menusub
  1810  001238                     L16:
  1811                           ;menu.c: 204: menustate = MENU_MAIN1;
  1812  001238  0E02               	movlw	2
  1813                           ;menu.c: 187: menustate = MENU_MAIN1;
  1814                           ;menu.c: 176: menustate = MENU_MAIN1;
  1815  00123A                     L4:
  1816  00123A  CFE8 F357          	movff	wreg,_menustate
  1817                           ;menu.c: 177: }
  1818  00123E  EF73  F012         	goto	l26
  1819  001242                     l42:
  1820                           ;menu.c: 178: else if (down)
  1821  001242  A00D               	btfss	_down/(0+8),_down& (0+7),c
  1822  001244  D012               	goto	l46
  1823                           ;menu.c: 179: {
  1824  001246  0E05               	movlw	5
  1825  001248  0103               	movlb	_menusub shr (0+8)
  1826  00124A  6164               	cpfslt	_menusub& (0+255),b
  1827  00124C  D001               	goto	l47
  1828                           ;menu.c: 182: { menusub++; }
  1829  00124E  2B64               	incf	_menusub& (0+255),f,b
  1830  001250                     l47:
  1831                           ;menu.c: 184: if (menusub < 0x04 && menusub > co
      +                          nfig.floppy_drives)
  1832  001250  0E04               	movlw	4
  1833  001252  0103               	movlb	_menusub shr (0+8)
  1834  001254  6164               	cpfslt	_menusub& (0+255),b
  1835  001256  D7F0               	goto	L16
  1836  001258  C364  FFE8         	movff	_menusub,wreg
  1837  00125C  0100               	movlb	(_config+17) shr (0+8)
  1838  00125E  612F               	cpfslt	(_config+17)& (0+255),b
  1839  001260  D7EB               	goto	L16
  1840                           ;menu.c: 185: { menusub = 0x04; }
  1841  001262  0E04               	movlw	4
  1842  001264  CFE8 F364          	movff	wreg,_menusub
  1843  001268  D7E7               	goto	L16
  1844                           ;menu.c: 188: }
  1845  00126A                     l46:
  1846                           ;menu.c: 189: else if (right)
  1847  00126A  A60D               	btfss	_right/(0+8),_right& (0+7),c
  1848  00126C  D009               	goto	l50
  1849                           ;menu.c: 190: {
  1850  00126E  0E04               	movlw	4
  1851  001270  CFE8 F357          	movff	wreg,_menustate
  1852                           ;menu.c: 192: menusub = 0;
  1853  001274  0103               	movlb	_menusub shr (0+8)
  1854  001276  6B64               	clrf	_menusub& (0+255),b
  1855                           ;menu.c: 193: OsdClear();
  1856  001278  EC20  F039         	call	_OsdClear	;wreg free
  1857                           ;menu.c: 194: }
  1858  00127C  EF73  F012         	goto	l26
  1859  001280                     l50:
  1860                           ;menu.c: 195: else if (select)
  1861  001280  A80D               	btfss	_select/(0+8),_select& (0+7),c
  1862  001282  EF73  F012         	goto	l26
  1863                           ;menu.c: 196: {
  1864  001286  0E04               	movlw	4
  1865  001288  0103               	movlb	_menusub shr (0+8)
  1866  00128A  6164               	cpfslt	_menusub& (0+255),b
  1867  00128C  D031               	goto	l53
  1868                           ;menu.c: 199: {
  1869  00128E  C364  FFE8         	movff	_menusub,wreg
  1870  001292  0D18               	mullw	24
  1871  001294  0E02               	movlw	low _df
  1872  001296  24F3               	addwf	prodl,w,c
  1873  001298  6EE9               	movwf	fsr0l,c
  1874  00129A  0E02               	movlw	high _df
  1875  00129C  20F4               	addwfc	prodh,w,c
  1876  00129E  6EEA               	movwf	fsr0h,c
  1877  0012A0  50EF               	movf	indf0,w,c
  1878  0012A2  6E00               	movwf	btemp,c
  1879                           ;menu.c: 201: {
  1880  0012A4  C364  FFE8         	movff	_menusub,wreg
  1881  0012A8  0D18               	mullw	24
  1882  0012AA  0E02               	movlw	low _df
  1883  0012AC  24F3               	addwf	prodl,w,c
  1884  0012AE  6EE9               	movwf	fsr0l,c
  1885  0012B0  0E02               	movlw	high _df
  1886  0012B2  20F4               	addwfc	prodh,w,c
  1887  0012B4  6EEA               	movwf	fsr0h,c
  1888  0012B6  6AEF               	clrf	indf0,c
  1889  0012B8  B000               	btfsc	btemp,0,c
  1890  0012BA  D7BE               	goto	L16
  1891                           ;menu.c: 205: }
  1892                           ;menu.c: 206: else
  1893                           ;menu.c: 209: pdfx = &df[menusub];
  1894  0012BC  C364  FFE8         	movff	_menusub,wreg
  1895  0012C0  0D18               	mullw	24
  1896  0012C2  0E02               	movlw	low _df
  1897  0012C4  24F3               	addwf	prodl,w,c
  1898  0012C6  CFE8 F200          	movff	wreg,_pdfx
  1899  0012CA  0E02               	movlw	high _df
  1900  0012CC  20F4               	addwfc	prodh,w,c
  1901  0012CE  CFE8 F201          	movff	wreg,_pdfx+1
  1902                           ;menu.c: 211: SelectFile(defFloppyExt, MENU_FLOP
      +                          PY_SELECTED, MENU_MAIN1, 1);
  1903  0012D2  0100               	movlb	__Lparam shr (0+8)
  1904  0012D4  0E06               	movlw	low _defFloppyExt
  1905  0012D6  6F46               	movwf	?_SelectFile^(__Lparam& (0+65280)),b
  1906  0012D8  0E0F               	movlw	high _defFloppyExt
  1907  0012DA  6F47               	movwf	(?_SelectFile+1)^(__Lparam& (0+65280)),b
  1908  0012DC  0E08               	movlw	8
  1909  0012DE  6F48               	movwf	(?_SelectFile+2)^(__Lparam& (0+65280)),b
  1910  0012E0  0E02               	movlw	2
  1911  0012E2  6F49               	movwf	(?_SelectFile+3)^(__Lparam& (0+65280)),b
  1912  0012E4  0E01               	movlw	1
  1913  0012E6  6F4A               	movwf	(?_SelectFile+4)^(__Lparam& (0+65280)),b
  1914  0012E8  EC92  F012         	call	_SelectFile	;wreg free
  1915                           ;menu.c: 212: }
  1916  0012EC  EF73  F012         	goto	l26
  1917  0012F0                     l53:
  1918                           ;menu.c: 214: else if (menusub == 0x04 )
  1919  0012F0  C364  FFE8         	movff	_menusub,wreg
  1920  0012F4  0A04               	xorlw	4
  1921  0012F6  E002 EF73  F012    	bnz	l26
  1922  0012FC  D788               	goto	u180
  1923                           ;menu.c: 215: {
  1924                           ;menu.c: 218: }
  1925  0012FE                     l58:
  1926                           ;menu.c: 222: case MENU_FLOPPY_SELECTED:
  1927                           ;menu.c: 224: InsertFloppy(pdfx);
  1928  0012FE  C200  F046         	movff	_pdfx,?_InsertFloppy
  1929  001302  C201  F047         	movff	_pdfx+1,?_InsertFloppy+1
  1930  001306  EC71  F020         	call	_InsertFloppy	;wreg free
  1931                           ;menu.c: 227: menustate = MENU_MAIN1;
  1932  00130A  0E02               	movlw	2
  1933  00130C  CFE8 F357          	movff	wreg,_menustate
  1934                           ;menu.c: 228: OsdClear();
  1935  001310  EC20  F039         	call	_OsdClear	;wreg free
  1936                           ;menu.c: 229: break;
  1937  001314  EF73  F012         	goto	l26
  1938  001318                     l59:
  1939                           ;menu.c: 234: case MENU_MAIN_EXT1:
  1940                           ;menu.c: 235: OsdWrite(0, "\x1B **Minimig Menu**
      +                          ", 0);
  1941  001318  0100               	movlb	__Lparam shr (0+8)
  1942  00131A  0EBB               	movlw	low u249
  1943  00131C  6F5D               	movwf	?_OsdWrite^(__Lparam& (0+65280)),b
  1944  00131E  0E0A               	movlw	high u249
  1945  001320  6F5E               	movwf	(?_OsdWrite+1)^(__Lparam& (0+65280)),b
  1946  001322  6B5F               	clrf	(?_OsdWrite+2)^(__Lparam& (0+65280)),b
  1947  001324  0E00               	movlw	0
  1948  001326  ECE8  F037         	call	_OsdWrite
  1949                           ;menu.c: 236: OsdWrite(2, "      settings", 0 ==
      +                           menusub);
  1950  00132A  0100               	movlb	__Lparam shr (0+8)
  1951  00132C  0E94               	movlw	low u259
  1952  00132E  6F5D               	movwf	?_OsdWrite^(__Lparam& (0+65280)),b
  1953  001330  0E09               	movlw	high u259
  1954  001332  6F5E               	movwf	(?_OsdWrite+1)^(__Lparam& (0+65280)),b
  1955  001334  0103               	movlb	_menusub shr (0+8)
  1956  001336  5364               	movf	_menusub& (0+255),f,b
  1957  001338  0E00               	movlw	0
  1958  00133A  B4D8               	btfsc	status,2,c
  1959  00133C  0E01               	movlw	1
  1960  00133E  0100               	movlb	__Lparam shr (0+8)
  1961  001340  6F5F               	movwf	(?_OsdWrite+2)^(__Lparam& (0+65280)),b
  1962  001342  0E02               	movlw	2
  1963  001344  ECE8  F037         	call	_OsdWrite
  1964                           ;menu.c: 237: OsdWrite(3, "      reset", 1 == me
      +                          nusub);
  1965  001348  0100               	movlb	__Lparam shr (0+8)
  1966  00134A  0E88               	movlw	low u269
  1967  00134C  6F5D               	movwf	?_OsdWrite^(__Lparam& (0+65280)),b
  1968  00134E  0E09               	movlw	high u269
  1969  001350  6F5E               	movwf	(?_OsdWrite+1)^(__Lparam& (0+65280)),b
  1970  001352  C364  F000         	movff	_menusub,btemp
  1971  001356  0400               	decf	btemp,w,c
  1972  001358  0E00               	movlw	0
  1973  00135A  B4D8               	btfsc	status,2,c
  1974  00135C  0E01               	movlw	1
  1975  00135E  6F5F               	movwf	(?_OsdWrite+2)^(__Lparam& (0+65280)),b
  1976  001360  0E03               	movlw	3
  1977  001362  ECE8  F037         	call	_OsdWrite
  1978                           ;menu.c: 238: OsdWrite(7, "        exit", 2 == m
      +                          enusub);
  1979  001366  0100               	movlb	__Lparam shr (0+8)
  1980  001368  0E6D               	movlw	low u279
  1981  00136A  6F5D               	movwf	?_OsdWrite^(__Lparam& (0+65280)),b
  1982  00136C  0E09               	movlw	high u279
  1983  00136E  6F5E               	movwf	(?_OsdWrite+1)^(__Lparam& (0+65280)),b
  1984  001370  C364  FFE8         	movff	_menusub,wreg
  1985  001374  0A02               	xorlw	2
  1986  001376  0E00               	movlw	0
  1987  001378  B4D8               	btfsc	status,2,c
  1988  00137A  0E01               	movlw	1
  1989  00137C  6F5F               	movwf	(?_OsdWrite+2)^(__Lparam& (0+65280)),b
  1990  00137E  0E07               	movlw	7
  1991  001380  ECE8  F037         	call	_OsdWrite
  1992                           ;menu.c: 239: menustate = MENU_MAIN_EXT2;
  1993  001384  0E05               	movlw	5
  1994  001386  D759               	goto	L4
  1995                           ;menu.c: 240: break;
  1996  001388                     l60:
  1997                           ;menu.c: 242: case MENU_MAIN_EXT2:
  1998                           ;menu.c: 243: HandleUpDown(MENU_MAIN_EXT1, 2);
  1999  001388  0E02               	movlw	2
  2000  00138A  0100               	movlb	__Lparam shr (0+8)
  2001  00138C  6F46               	movwf	?_HandleUpDown^(__Lparam& (0+65280)),b
  2002  00138E  0E04               	movlw	4
  2003  001390  EC78  F012         	call	_HandleUpDown
  2004                           ;menu.c: 245: if (select)
  2005  001394  A80D               	btfss	_select/(0+8),_select& (0+7),c
  2006  001396  D019               	goto	l61
  2007                           ;menu.c: 246: {
  2008  001398  0103               	movlb	_menusub shr (0+8)
  2009  00139A  5364               	movf	_menusub& (0+255),f,b
  2010  00139C  E106               	bnz	l62
  2011                           ;menu.c: 249: {
  2012  00139E  0E0B               	movlw	11
  2013  0013A0  CFE8 F357          	movff	wreg,_menustate
  2014                           ;menu.c: 252: OsdClear();
  2015  0013A4  EC20  F039         	call	_OsdClear	;wreg free
  2016                           ;menu.c: 253: }
  2017  0013A8  D010               	goto	l61
  2018  0013AA                     l62:
  2019                           ;menu.c: 254: else if (1 == menusub)
  2020  0013AA  C364  F000         	movff	_menusub,btemp
  2021  0013AE  0400               	decf	btemp,w,c
  2022  0013B0  E106               	bnz	l64
  2023                           ;menu.c: 255: {
  2024  0013B2  0E09               	movlw	9
  2025  0013B4  CFE8 F357          	movff	wreg,_menustate
  2026                           ;menu.c: 258: OsdClear();
  2027  0013B8  EC20  F039         	call	_OsdClear	;wreg free
  2028                           ;menu.c: 259: }
  2029  0013BC  D006               	goto	l61
  2030  0013BE                     l64:
  2031                           ;menu.c: 260: else if (2 == menusub)
  2032  0013BE  C364  FFE8         	movff	_menusub,wreg
  2033  0013C2  0A02               	xorlw	2
  2034  0013C4  E102               	bnz	l61
  2035                           ;menu.c: 261: {
  2036  0013C6  0103               	movlb	_menustate shr (0+8)
  2037  0013C8  6B57               	clrf	_menustate& (0+255),b
  2038  0013CA                     l61:
  2039                           ;menu.c: 264: }
  2040  0013CA  B40D               	btfsc	_menu/(0+8),_menu& (0+7),c
  2041  0013CC  D735               	goto	L16
  2042                           ;menu.c: 268: {
  2043                           ;menu.c: 271: }
  2044                           ;menu.c: 272: else if (left)
  2045  0013CE  A20D               	btfss	_left/(0+8),_left& (0+7),c
  2046  0013D0  EF73  F012         	goto	l26
  2047                           ;menu.c: 273: {
  2048  0013D4  0E02               	movlw	2
  2049  0013D6  CFE8 F357          	movff	wreg,_menustate
  2050                           ;menu.c: 275: menusub = 0;
  2051  0013DA  0103               	movlb	_menusub shr (0+8)
  2052  0013DC  6B64               	clrf	_menusub& (0+255),b
  2053                           ;menu.c: 276: OsdClear();
  2054  0013DE  EC20  F039         	call	_OsdClear	;wreg free
  2055                           ;menu.c: 277: }
  2056  0013E2  EF73  F012         	goto	l26
  2057  0013E6                     l70:
  2058                           ;menu.c: 283: case MENU_FILE1:
  2059                           ;menu.c: 284: PrintDir();
  2060  0013E6  EC39  F000         	call	_PrintDir	;wreg free
  2061                           ;menu.c: 285: menustate = MENU_FILE2;
  2062  0013EA  0E07               	movlw	7
  2063  0013EC  D726               	goto	L4
  2064                           ;menu.c: 286: break;
  2065  0013EE                     l71:
  2066                           ;menu.c: 288: case MENU_FILE2:
  2067                           ;menu.c: 289: if ((i = GetASCIIKey(c)))
  2068  0013EE  0100               	movlb	__Lparam shr (0+8)
  2069  0013F0  5140               	movf	?a_HandleUI^(__Lparam& (0+65280)),w
  2070  0013F2  EC04  F03A         	call	_GetASCIIKey
  2071  0013F6  0100               	movlb	__Lparam shr (0+8)
  2072  0013F8  6F41               	movwf	(?a_HandleUI+1)^(__Lparam& (0+65280)),b
  2073  0013FA  5141               	movf	(?a_HandleUI+1)^(__Lparam& (0+65280)),w
  2074  0013FC  E009               	bz	l72
  2075                           ;menu.c: 290: {
  2076  0013FE  C018  F04B         	movff	_fbFileExt,?_ScrollDir
  2077  001402  C019  F04C         	movff	_fbFileExt+1,?_ScrollDir+1
  2078  001406  5141               	movf	(?a_HandleUI+1)^(__Lparam& (0+65280)),w
  2079  001408  6F4D               	movwf	(?_ScrollDir+2)^(__Lparam& (0+65280)),b
  2080  00140A  ECB9  F000         	call	_ScrollDir	;wreg free
  2081  00140E  D017               	goto	L13
  2082                           ;menu.c: 293: menustate = MENU_FILE1;
  2083                           ;menu.c: 294: }
  2084  001410                     l72:
  2085                           ;menu.c: 295: else if (down)
  2086  001410  A00D               	btfss	_down/(0+8),_down& (0+7),c
  2087  001412  D00A               	goto	l74
  2088                           ;menu.c: 296: {
  2089  001414  C018  F04B         	movff	_fbFileExt,?_ScrollDir
  2090  001418  C019  F04C         	movff	_fbFileExt+1,?_ScrollDir+1
  2091  00141C  0E02               	movlw	2
  2092  00141E  0100               	movlb	__Lparam shr (0+8)
  2093  001420  6F4D               	movwf	(?_ScrollDir+2)^(__Lparam& (0+65280)),b
  2094  001422  ECB9  F000         	call	_ScrollDir	;wreg free
  2095  001426  D00B               	goto	L13
  2096                           ;menu.c: 299: menustate = MENU_FILE1;
  2097                           ;menu.c: 300: }
  2098  001428                     l74:
  2099                           ;menu.c: 301: else if (up)
  2100  001428  AA0D               	btfss	_up/(0+8),_up& (0+7),c
  2101  00142A  D00C               	goto	l73
  2102                           ;menu.c: 302: {
  2103  00142C  C018  F04B         	movff	_fbFileExt,?_ScrollDir
  2104  001430  C019  F04C         	movff	_fbFileExt+1,?_ScrollDir+1
  2105  001434  0E03               	movlw	3
  2106  001436  0100               	movlb	__Lparam shr (0+8)
  2107  001438  6F4D               	movwf	(?_ScrollDir+2)^(__Lparam& (0+65280)),b
  2108  00143A  ECB9  F000         	call	_ScrollDir	;wreg free
  2109  00143E                     L13:
  2110                           ;menu.c: 305: menustate = MENU_FILE1;
  2111  00143E  0E06               	movlw	6
  2112  001440  CFE8 F357          	movff	wreg,_menustate
  2113  001444                     l73:
  2114                           ;menu.c: 306: }
  2115  001444  A80D               	btfss	_select/(0+8),_select& (0+7),c
  2116  001446  D03A               	goto	l77
  2117                           ;menu.c: 309: {
  2118  001448  C37E  FFE8         	movff	_dirptr,wreg
  2119  00144C  0D1F               	mullw	31
  2120  00144E  0E00               	movlw	low _directory
  2121  001450  24F3               	addwf	prodl,w,c
  2122  001452  6EE9               	movwf	fsr0l,c
  2123  001454  0E01               	movlw	high _directory
  2124  001456  20F4               	addwfc	prodh,w,c
  2125  001458  6EEA               	movwf	fsr0h,c
  2126  00145A  50EF               	movf	indf0,w,c
  2127  00145C  E02F               	bz	l77
  2128                           ;menu.c: 312: {
  2129  00145E  C37E  FFE8         	movff	_dirptr,wreg
  2130  001462  0D1F               	mullw	31
  2131  001464  0E00               	movlw	low _directory
  2132  001466  24F3               	addwf	prodl,w,c
  2133  001468  6EE9               	movwf	fsr0l,c
  2134  00146A  0E01               	movlw	high _directory
  2135  00146C  20F4               	addwfc	prodh,w,c
  2136  00146E  6EEA               	movwf	fsr0h,c
  2137  001470  EE12  F09E         	lfsr	1,_file
  2138  001474  0E1F               	movlw	31
  2139  001476  ECFF  F03E         	call	structcopy
  2140                           ;menu.c: 314: if(file.attributes & (1 << 4))
  2141  00147A  0102               	movlb	(_file+12) shr (0+8)
  2142  00147C  A9AA               	btfss	(_file+12)& (0+255),4,b
  2143  00147E  D01A               	goto	l79
  2144                           ;menu.c: 315: {
  2145  001480  0103               	movlb	_fbAllowDirectorySelect shr (0+8)
  2146  001482  5361               	movf	_fbAllowDirectorySelect& (0+255),f,b
  2147  001484  E013               	bz	l80
  2148                           ;menu.c: 317: {
  2149  001486  0100               	movlb	__Lparam shr (0+8)
  2150  001488  0E9E               	movlw	low _file
  2151  00148A  6F46               	movwf	?_OpenDirectory^(__Lparam& (0+65280)),b
  2152  00148C  0E02               	movlw	high _file
  2153  00148E  6F47               	movwf	(?_OpenDirectory+1)^(__Lparam& (0+65280))
      +                          ,b
  2154  001490  0E7F               	movlw	low _currentDir
  2155  001492  6F48               	movwf	(?_OpenDirectory+2)^(__Lparam& (0+65280))
      +                          ,b
  2156  001494  0E02               	movlw	high _currentDir
  2157  001496  6F49               	movwf	(?_OpenDirectory+3)^(__Lparam& (0+65280))
      +                          ,b
  2158  001498  EC6D  F015         	call	_OpenDirectory	;wreg free
  2159                           ;menu.c: 319: ScrollDir(fbFileExt, 0);
  2160  00149C  C018  F04B         	movff	_fbFileExt,?_ScrollDir
  2161  0014A0  C019  F04C         	movff	_fbFileExt+1,?_ScrollDir+1
  2162  0014A4  0100               	movlb	__Lparam shr (0+8)
  2163  0014A6  6B4D               	clrf	(?_ScrollDir+2)^(__Lparam& (0+65280)),b
  2164  0014A8  ECB9  F000         	call	_ScrollDir	;wreg free
  2165  0014AC                     l80:
  2166                           ;menu.c: 320: }
  2167  0014AC  0E06               	movlw	6
  2168  0014AE  CFE8 F357          	movff	wreg,_menustate
  2169                           ;menu.c: 322: }
  2170  0014B2  D002               	goto	l81
  2171  0014B4                     l79:
  2172                           ;menu.c: 323: else
  2173  0014B4  C363  F357         	movff	_fbSelectedState,_menustate
  2174  0014B8                     l81:
  2175                           ;menu.c: 327: }
  2176  0014B8  EC20  F039         	call	_OsdClear	;wreg free
  2177  0014BC                     l77:
  2178                           ;menu.c: 329: }
  2179  0014BC  A40D               	btfss	_menu/(0+8),_menu& (0+7),c
  2180  0014BE  EF73  F012         	goto	l26
  2181                           ;menu.c: 333: {
  2182  0014C2  C362  F357         	movff	_fbExitState,_menustate
  2183                           ;menu.c: 336: OsdClear();
  2184  0014C6  EC20  F039         	call	_OsdClear	;wreg free
  2185                           ;menu.c: 337: }
  2186  0014CA  EF73  F012         	goto	l26
  2187  0014CE                     l83:
  2188                           ;menu.c: 343: case MENU_RESET1 :
  2189                           ;menu.c: 345: OsdWrite(0, "    Reset Minimig?", 
      +                          0);
  2190  0014CE  0100               	movlb	__Lparam shr (0+8)
  2191  0014D0  0E93               	movlw	low u289
  2192  0014D2  6F5D               	movwf	?_OsdWrite^(__Lparam& (0+65280)),b
  2193  0014D4  0E0A               	movlw	high u289
  2194  0014D6  6F5E               	movwf	(?_OsdWrite+1)^(__Lparam& (0+65280)),b
  2195  0014D8  6B5F               	clrf	(?_OsdWrite+2)^(__Lparam& (0+65280)),b
  2196  0014DA  0E00               	movlw	0
  2197  0014DC  ECE8  F037         	call	_OsdWrite
  2198                           ;menu.c: 346: OsdWrite(2, "         yes", 0 == m
      +                          enusub);
  2199  0014E0  0100               	movlb	__Lparam shr (0+8)
  2200  0014E2  0EA3               	movlw	low u299
  2201  0014E4  6F5D               	movwf	?_OsdWrite^(__Lparam& (0+65280)),b
  2202  0014E6  0E09               	movlw	high u299
  2203  0014E8  6F5E               	movwf	(?_OsdWrite+1)^(__Lparam& (0+65280)),b
  2204  0014EA  0103               	movlb	_menusub shr (0+8)
  2205  0014EC  5364               	movf	_menusub& (0+255),f,b
  2206  0014EE  0E00               	movlw	0
  2207  0014F0  B4D8               	btfsc	status,2,c
  2208  0014F2  0E01               	movlw	1
  2209  0014F4  0100               	movlb	__Lparam shr (0+8)
  2210  0014F6  6F5F               	movwf	(?_OsdWrite+2)^(__Lparam& (0+65280)),b
  2211  0014F8  0E02               	movlw	2
  2212  0014FA  ECE8  F037         	call	_OsdWrite
  2213                           ;menu.c: 347: OsdWrite(3, "         no", 1 == me
      +                          nusub);
  2214  0014FE  0100               	movlb	__Lparam shr (0+8)
  2215  001500  0ED0               	movlw	low u309
  2216  001502  6F5D               	movwf	?_OsdWrite^(__Lparam& (0+65280)),b
  2217  001504  0E09               	movlw	high u309
  2218  001506  6F5E               	movwf	(?_OsdWrite+1)^(__Lparam& (0+65280)),b
  2219  001508  C364  F000         	movff	_menusub,btemp
  2220  00150C  0400               	decf	btemp,w,c
  2221  00150E  0E00               	movlw	0
  2222  001510  B4D8               	btfsc	status,2,c
  2223  001512  0E01               	movlw	1
  2224  001514  6F5F               	movwf	(?_OsdWrite+2)^(__Lparam& (0+65280)),b
  2225  001516  0E03               	movlw	3
  2226  001518  ECE8  F037         	call	_OsdWrite
  2227                           ;menu.c: 350: menustate = MENU_RESET2;
  2228  00151C  0E0A               	movlw	10
  2229  00151E  D68D               	goto	L4
  2230                           ;menu.c: 351: break;
  2231  001520                     l84:
  2232                           ;menu.c: 353: case MENU_RESET2:
  2233                           ;menu.c: 354: HandleUpDown(MENU_RESET1, 1);
  2234  001520  0E01               	movlw	1
  2235  001522  0100               	movlb	__Lparam shr (0+8)
  2236  001524  6F46               	movwf	?_HandleUpDown^(__Lparam& (0+65280)),b
  2237  001526  0E09               	movlw	9
  2238  001528  EC78  F012         	call	_HandleUpDown
  2239                           ;menu.c: 356: if (select && 0 == menusub)
  2240  00152C  A80D               	btfss	_select/(0+8),_select& (0+7),c
  2241  00152E  D008               	goto	l85
  2242  001530  0103               	movlb	_menusub shr (0+8)
  2243  001532  5364               	movf	_menusub& (0+255),f,b
  2244  001534  E105               	bnz	l85
  2245                           ;menu.c: 357: {
  2246  001536  0103               	movlb	_menustate shr (0+8)
  2247  001538  6B57               	clrf	_menustate& (0+255),b
  2248                           ;menu.c: 359: OsdReset(0);
  2249  00153A  0E00               	movlw	0
  2250  00153C  EC44  F039         	call	_OsdReset
  2251  001540                     l85:
  2252                           ;menu.c: 360: }
  2253  001540  B40D               	btfsc	_menu/(0+8),_menu& (0+7),c
  2254  001542  D009               	goto	u550
  2255  001544  A80D               	btfss	_select/(0+8),_select& (0+7),c
  2256  001546  EF73  F012         	goto	l26
  2257  00154A  C364  F000         	movff	_menusub,btemp
  2258  00154E  0400               	decf	btemp,w,c
  2259  001550  E002 EF73  F012    	bnz	l26
  2260  001556                     u550:
  2261                           ;menu.c: 363: {
  2262  001556  0E04               	movlw	4
  2263  001558  CFE8 F357          	movff	wreg,_menustate
  2264                           ;menu.c: 365: OsdClear();
  2265  00155C  EC20  F039         	call	_OsdClear	;wreg free
  2266                           ;menu.c: 366: }
  2267  001560  EF73  F012         	goto	l26
  2268  001564                     l87:
  2269                           ;menu.c: 372: case MENU_SETTINGS1 :
  2270                           ;menu.c: 374: OsdWrite(0, "   ** SETTINGS **", 0
      +                          );
  2271  001564  0100               	movlb	__Lparam shr (0+8)
  2272  001566  0EE0               	movlw	low u319
  2273  001568  6F5D               	movwf	?_OsdWrite^(__Lparam& (0+65280)),b
  2274  00156A  0E0A               	movlw	high u319
  2275  00156C  6F5E               	movwf	(?_OsdWrite+1)^(__Lparam& (0+65280)),b
  2276  00156E  6B5F               	clrf	(?_OsdWrite+2)^(__Lparam& (0+65280)),b
  2277  001570  0E00               	movlw	0
  2278  001572  ECE8  F037         	call	_OsdWrite
  2279                           ;menu.c: 376: OsdWrite(2, "      chipset", 0 == 
      +                          menusub);
  2280  001576  0100               	movlb	__Lparam shr (0+8)
  2281  001578  0E7A               	movlw	low u329
  2282  00157A  6F5D               	movwf	?_OsdWrite^(__Lparam& (0+65280)),b
  2283  00157C  0E09               	movlw	high u329
  2284  00157E  6F5E               	movwf	(?_OsdWrite+1)^(__Lparam& (0+65280)),b
  2285  001580  0103               	movlb	_menusub shr (0+8)
  2286  001582  5364               	movf	_menusub& (0+255),f,b
  2287  001584  0E00               	movlw	0
  2288  001586  B4D8               	btfsc	status,2,c
  2289  001588  0E01               	movlw	1
  2290  00158A  0100               	movlb	__Lparam shr (0+8)
  2291  00158C  6F5F               	movwf	(?_OsdWrite+2)^(__Lparam& (0+65280)),b
  2292  00158E  0E02               	movlw	2
  2293  001590  ECE8  F037         	call	_OsdWrite
  2294                           ;menu.c: 377: OsdWrite(3, "      memory", 1 == m
      +                          enusub);
  2295  001594  0100               	movlb	__Lparam shr (0+8)
  2296  001596  0E5D               	movlw	low u339
  2297  001598  6F5D               	movwf	?_OsdWrite^(__Lparam& (0+65280)),b
  2298  00159A  0E09               	movlw	high u339
  2299  00159C  6F5E               	movwf	(?_OsdWrite+1)^(__Lparam& (0+65280)),b
  2300  00159E  C364  F000         	movff	_menusub,btemp
  2301  0015A2  0400               	decf	btemp,w,c
  2302  0015A4  0E00               	movlw	0
  2303  0015A6  B4D8               	btfsc	status,2,c
  2304  0015A8  0E01               	movlw	1
  2305  0015AA  6F5F               	movwf	(?_OsdWrite+2)^(__Lparam& (0+65280)),b
  2306  0015AC  0E03               	movlw	3
  2307  0015AE  ECE8  F037         	call	_OsdWrite
  2308                           ;menu.c: 378: OsdWrite(4, "      drives", 2 == m
      +                          enusub);
  2309  0015B2  0100               	movlb	__Lparam shr (0+8)
  2310  0015B4  0EB0               	movlw	low u349
  2311  0015B6  6F5D               	movwf	?_OsdWrite^(__Lparam& (0+65280)),b
  2312  0015B8  0E09               	movlw	high u349
  2313  0015BA  6F5E               	movwf	(?_OsdWrite+1)^(__Lparam& (0+65280)),b
  2314  0015BC  C364  FFE8         	movff	_menusub,wreg
  2315  0015C0  0A02               	xorlw	2
  2316  0015C2  0E00               	movlw	0
  2317  0015C4  B4D8               	btfsc	status,2,c
  2318  0015C6  0E01               	movlw	1
  2319  0015C8  6F5F               	movwf	(?_OsdWrite+2)^(__Lparam& (0+65280)),b
  2320  0015CA  0E04               	movlw	4
  2321  0015CC  ECE8  F037         	call	_OsdWrite
  2322                           ;menu.c: 379: OsdWrite(5, "      video", 3 == me
      +                          nusub);
  2323  0015D0  0100               	movlb	__Lparam shr (0+8)
  2324  0015D2  0EDC               	movlw	low u359
  2325  0015D4  6F5D               	movwf	?_OsdWrite^(__Lparam& (0+65280)),b
  2326  0015D6  0E09               	movlw	high u359
  2327  0015D8  6F5E               	movwf	(?_OsdWrite+1)^(__Lparam& (0+65280)),b
  2328  0015DA  C364  FFE8         	movff	_menusub,wreg
  2329  0015DE  0A03               	xorlw	3
  2330  0015E0  0E00               	movlw	0
  2331  0015E2  B4D8               	btfsc	status,2,c
  2332  0015E4  0E01               	movlw	1
  2333  0015E6  6F5F               	movwf	(?_OsdWrite+2)^(__Lparam& (0+65280)),b
  2334  0015E8  0E05               	movlw	5
  2335  0015EA  ECE8  F037         	call	_OsdWrite
  2336                           ;menu.c: 381: if (4 == menusub)
  2337  0015EE  C364  FFE8         	movff	_menusub,wreg
  2338  0015F2  0A04               	xorlw	4
  2339  0015F4  E10B               	bnz	l88
  2340                           ;menu.c: 382: { OsdWrite(7, "  \x19     exit    
      +                            \x19", 1); }
  2341  0015F6  0100               	movlb	__Lparam shr (0+8)
  2342  0015F8  0E64               	movlw	low u369
  2343  0015FA  6F5D               	movwf	?_OsdWrite^(__Lparam& (0+65280)),b
  2344  0015FC  0E0C               	movlw	high u369
  2345  0015FE  6F5E               	movwf	(?_OsdWrite+1)^(__Lparam& (0+65280)),b
  2346  001600  0E01               	movlw	1
  2347  001602  6F5F               	movwf	(?_OsdWrite+2)^(__Lparam& (0+65280)),b
  2348  001604  0E07               	movlw	7
  2349  001606  ECE8  F037         	call	_OsdWrite
  2350  00160A  D017               	goto	l89
  2351  00160C                     l88:
  2352                           ;menu.c: 383: else if (5 == menusub)
  2353  00160C  C364  FFE8         	movff	_menusub,wreg
  2354  001610  0A05               	xorlw	5
  2355                           ;menu.c: 384: { OsdWrite(7, "  \x18     save    
      +                            \x18", 1); }
  2356  001612  0100               	movlb	__Lparam shr (0+8)
  2357  001614  E10A               	bnz	L18
  2358  001616  0E78               	movlw	low u379
  2359  001618  6F5D               	movwf	?_OsdWrite^(__Lparam& (0+65280)),b
  2360  00161A  0E0C               	movlw	high u379
  2361  00161C  6F5E               	movwf	(?_OsdWrite+1)^(__Lparam& (0+65280)),b
  2362  00161E  0E01               	movlw	1
  2363  001620  6F5F               	movwf	(?_OsdWrite+2)^(__Lparam& (0+65280)),b
  2364  001622  0E07               	movlw	7
  2365  001624  ECE8  F037         	call	_OsdWrite
  2366  001628  D008               	goto	l89
  2367                           ;menu.c: 385: else
  2368  00162A                     L18:
  2369  00162A  0E6D               	movlw	low u389
  2370  00162C  6F5D               	movwf	?_OsdWrite^(__Lparam& (0+65280)),b
  2371  00162E  0E09               	movlw	high u389
  2372  001630  6F5E               	movwf	(?_OsdWrite+1)^(__Lparam& (0+65280)),b
  2373  001632  6B5F               	clrf	(?_OsdWrite+2)^(__Lparam& (0+65280)),b
  2374  001634  0E07               	movlw	7
  2375  001636  ECE8  F037         	call	_OsdWrite
  2376  00163A                     l89:
  2377                           ;menu.c: 389: menustate = MENU_SETTINGS2;
  2378  00163A  0E0C               	movlw	12
  2379  00163C  D5FE               	goto	L4
  2380                           ;menu.c: 390: break;
  2381  00163E                     l92:
  2382                           ;menu.c: 392: case MENU_SETTINGS2:
  2383                           ;menu.c: 393: HandleUpDown(MENU_SETTINGS1, 5);
  2384  00163E  0E05               	movlw	5
  2385  001640  0100               	movlb	__Lparam shr (0+8)
  2386  001642  6F46               	movwf	?_HandleUpDown^(__Lparam& (0+65280)),b
  2387  001644  0E0B               	movlw	11
  2388  001646  EC78  F012         	call	_HandleUpDown
  2389                           ;menu.c: 395: if (select)
  2390  00164A  A80D               	btfss	_select/(0+8),_select& (0+7),c
  2391  00164C  D046               	goto	l93
  2392                           ;menu.c: 396: {
  2393  00164E  0103               	movlb	_menusub shr (0+8)
  2394  001650  5364               	movf	_menusub& (0+255),f,b
  2395  001652  E106               	bnz	l94
  2396                           ;menu.c: 398: {
  2397  001654  0E13               	movlw	19
  2398  001656  CFE8 F357          	movff	wreg,_menustate
  2399                           ;menu.c: 400: OsdClear();
  2400  00165A  EC20  F039         	call	_OsdClear	;wreg free
  2401                           ;menu.c: 401: }
  2402  00165E  D03D               	goto	l93
  2403  001660                     l94:
  2404                           ;menu.c: 402: else if (1 == menusub)
  2405  001660  C364  F000         	movff	_menusub,btemp
  2406  001664  0400               	decf	btemp,w,c
  2407  001666  E108               	bnz	l96
  2408                           ;menu.c: 403: {
  2409  001668  0E11               	movlw	17
  2410  00166A  CFE8 F357          	movff	wreg,_menustate
  2411                           ;menu.c: 405: menusub = 0;
  2412  00166E  0103               	movlb	_menusub shr (0+8)
  2413  001670  6B64               	clrf	_menusub& (0+255),b
  2414                           ;menu.c: 406: OsdClear();
  2415  001672  EC20  F039         	call	_OsdClear	;wreg free
  2416                           ;menu.c: 407: }
  2417  001676  D031               	goto	l93
  2418  001678                     l96:
  2419                           ;menu.c: 408: else if (2 == menusub)
  2420  001678  C364  FFE8         	movff	_menusub,wreg
  2421  00167C  0A02               	xorlw	2
  2422  00167E  E108               	bnz	l98
  2423                           ;menu.c: 409: {
  2424  001680  0E15               	movlw	21
  2425  001682  CFE8 F357          	movff	wreg,_menustate
  2426                           ;menu.c: 411: menusub = 0;
  2427  001686  0103               	movlb	_menusub shr (0+8)
  2428  001688  6B64               	clrf	_menusub& (0+255),b
  2429                           ;menu.c: 412: OsdClear();
  2430  00168A  EC20  F039         	call	_OsdClear	;wreg free
  2431                           ;menu.c: 413: }
  2432  00168E  D025               	goto	l93
  2433  001690                     l98:
  2434                           ;menu.c: 414: else if (3 == menusub)
  2435  001690  C364  FFE8         	movff	_menusub,wreg
  2436  001694  0A03               	xorlw	3
  2437  001696  E108               	bnz	l100
  2438                           ;menu.c: 415: {
  2439  001698  0E0F               	movlw	15
  2440  00169A  CFE8 F357          	movff	wreg,_menustate
  2441                           ;menu.c: 417: menusub = 0;
  2442  00169E  0103               	movlb	_menusub shr (0+8)
  2443  0016A0  6B64               	clrf	_menusub& (0+255),b
  2444                           ;menu.c: 418: OsdClear();
  2445  0016A2  EC20  F039         	call	_OsdClear	;wreg free
  2446                           ;menu.c: 419: }
  2447  0016A6  D019               	goto	l93
  2448  0016A8                     l100:
  2449                           ;menu.c: 420: else if (4 == menusub)
  2450  0016A8  C364  FFE8         	movff	_menusub,wreg
  2451  0016AC  0A04               	xorlw	4
  2452  0016AE  E108               	bnz	l102
  2453                           ;menu.c: 421: {
  2454  0016B0  0E04               	movlw	4
  2455  0016B2  CFE8 F357          	movff	wreg,_menustate
  2456                           ;menu.c: 423: menusub = 0;
  2457  0016B6  0103               	movlb	_menusub shr (0+8)
  2458  0016B8  6B64               	clrf	_menusub& (0+255),b
  2459                           ;menu.c: 424: OsdClear();
  2460  0016BA  EC20  F039         	call	_OsdClear	;wreg free
  2461                           ;menu.c: 425: }
  2462  0016BE  D00D               	goto	l93
  2463  0016C0                     l102:
  2464                           ;menu.c: 426: else if (5 == menusub)
  2465  0016C0  C364  FFE8         	movff	_menusub,wreg
  2466  0016C4  0A05               	xorlw	5
  2467  0016C6  E109               	bnz	l93
  2468                           ;menu.c: 427: {
  2469  0016C8  ECBD  F03A         	call	_SaveConfiguration	;wreg free
  2470                           ;menu.c: 429: menustate = MENU_MAIN_EXT1;
  2471  0016CC  0E04               	movlw	4
  2472  0016CE  CFE8 F357          	movff	wreg,_menustate
  2473                           ;menu.c: 430: menusub = 0;
  2474  0016D2  0103               	movlb	_menusub shr (0+8)
  2475  0016D4  6B64               	clrf	_menusub& (0+255),b
  2476                           ;menu.c: 431: OsdClear();
  2477  0016D6  EC20  F039         	call	_OsdClear	;wreg free
  2478  0016DA                     l93:
  2479                           ;menu.c: 432: }
  2480  0016DA  A40D               	btfss	_menu/(0+8),_menu& (0+7),c
  2481  0016DC  EF73  F012         	goto	l26
  2482                           ;menu.c: 436: {
  2483  0016E0  0E04               	movlw	4
  2484  0016E2  CFE8 F357          	movff	wreg,_menustate
  2485                           ;menu.c: 439: menusub = 0;
  2486  0016E6  0103               	movlb	_menusub shr (0+8)
  2487  0016E8  6B64               	clrf	_menusub& (0+255),b
  2488                           ;menu.c: 440: OsdClear();
  2489  0016EA  EC20  F039         	call	_OsdClear	;wreg free
  2490                           ;menu.c: 441: }
  2491  0016EE  EF73  F012         	goto	l26
  2492  0016F2                     l106:
  2493                           ;menu.c: 447: case MENU_SETTINGS_CHIPSET1 :
  2494                           ;menu.c: 448: OsdWrite(0, " \x1B  -= CHIPSET =- 
      +                           \x1A", 0);
  2495  0016F2  0100               	movlb	__Lparam shr (0+8)
  2496  0016F4  0E10               	movlw	low u399
  2497  0016F6  6F5D               	movwf	?_OsdWrite^(__Lparam& (0+65280)),b
  2498  0016F8  0E0C               	movlw	high u399
  2499  0016FA  6F5E               	movwf	(?_OsdWrite+1)^(__Lparam& (0+65280)),b
  2500  0016FC  6B5F               	clrf	(?_OsdWrite+2)^(__Lparam& (0+65280)),b
  2501  0016FE  0E00               	movlw	0
  2502  001700  ECE8  F037         	call	_OsdWrite
  2503                           ;menu.c: 450: strcpy(s, "      CPU : ");
  2504  001704  0100               	movlb	__Lparam shr (0+8)
  2505  001706  0E65               	movlw	low _s
  2506  001708  6F46               	movwf	?_strcpy^(__Lparam& (0+65280)),b
  2507  00170A  0E03               	movlw	high _s
  2508  00170C  6F47               	movwf	(?_strcpy+1)^(__Lparam& (0+65280)),b
  2509  00170E  0E83               	movlw	low u409
  2510  001710  6F48               	movwf	(?_strcpy+2)^(__Lparam& (0+65280)),b
  2511  001712  0E0B               	movlw	high u409
  2512  001714  6F49               	movwf	(?_strcpy+3)^(__Lparam& (0+65280)),b
  2513  001716  EC29  F03E         	call	_strcpy	;wreg free
  2514                           ;menu.c: 451: strcat(s, config.chipset & 0x01 ? 
      +                          "28.36MHz " : " 7.09MHz");
  2515  00171A  0100               	movlb	__Lparam shr (0+8)
  2516  00171C  0E65               	movlw	low _s
  2517  00171E  6F46               	movwf	?_strcat^(__Lparam& (0+65280)),b
  2518  001720  0E03               	movlw	high _s
  2519  001722  6F47               	movwf	(?_strcat+1)^(__Lparam& (0+65280)),b
  2520  001724  0100               	movlb	(_config+15) shr (0+8)
  2521  001726  B12D               	btfsc	(_config+15)& (0+255),0,b
  2522  001728  D004               	goto	u676
  2523  00172A  0E54               	movlw	low u429
  2524  00172C  6E00               	movwf	btemp,c
  2525  00172E  0E09               	movlw	high u429
  2526  001730  D003               	goto	L6
  2527  001732                     u676:
  2528  001732  0EF2               	movlw	low u419
  2529  001734  6E00               	movwf	btemp,c
  2530  001736  0E0A               	movlw	high u419
  2531  001738                     L6:
  2532  001738  6E01               	movwf	btemp+1,c
  2533  00173A  C000  F048         	movff	btemp,?_strcat+2
  2534  00173E  C001  F049         	movff	btemp+1,?_strcat+3
  2535  001742  ECFC  F03D         	call	_strcat	;wreg free
  2536                           ;menu.c: 452: OsdWrite(2, s, 0 == menusub);
  2537  001746  0100               	movlb	__Lparam shr (0+8)
  2538  001748  0E65               	movlw	low _s
  2539  00174A  6F5D               	movwf	?_OsdWrite^(__Lparam& (0+65280)),b
  2540  00174C  0E03               	movlw	high _s
  2541  00174E  6F5E               	movwf	(?_OsdWrite+1)^(__Lparam& (0+65280)),b
  2542  001750  0103               	movlb	_menusub shr (0+8)
  2543  001752  5364               	movf	_menusub& (0+255),f,b
  2544  001754  0E00               	movlw	0
  2545  001756  B4D8               	btfsc	status,2,c
  2546  001758  0E01               	movlw	1
  2547  00175A  0100               	movlb	__Lparam shr (0+8)
  2548  00175C  6F5F               	movwf	(?_OsdWrite+2)^(__Lparam& (0+65280)),b
  2549  00175E  0E02               	movlw	2
  2550  001760  ECE8  F037         	call	_OsdWrite
  2551                           ;menu.c: 454: strcpy(s, "  Blitter : ");
  2552  001764  0100               	movlb	__Lparam shr (0+8)
  2553  001766  0E65               	movlw	low _s
  2554  001768  6F46               	movwf	?_strcpy^(__Lparam& (0+65280)),b
  2555  00176A  0E03               	movlw	high _s
  2556  00176C  6F47               	movwf	(?_strcpy+1)^(__Lparam& (0+65280)),b
  2557  00176E  0E6C               	movlw	low u439
  2558  001770  6F48               	movwf	(?_strcpy+2)^(__Lparam& (0+65280)),b
  2559  001772  0E0B               	movlw	high u439
  2560  001774  6F49               	movwf	(?_strcpy+3)^(__Lparam& (0+65280)),b
  2561  001776  EC29  F03E         	call	_strcpy	;wreg free
  2562                           ;menu.c: 455: strcat(s, config.chipset & 0x02 ? 
      +                          "fast  " : "normal");
  2563  00177A  0100               	movlb	__Lparam shr (0+8)
  2564  00177C  0E65               	movlw	low _s
  2565  00177E  6F46               	movwf	?_strcat^(__Lparam& (0+65280)),b
  2566  001780  0E03               	movlw	high _s
  2567  001782  6F47               	movwf	(?_strcat+1)^(__Lparam& (0+65280)),b
  2568  001784  0100               	movlb	(_config+15) shr (0+8)
  2569  001786  B32D               	btfsc	(_config+15)& (0+255),1,b
  2570  001788  D004               	goto	u696
  2571  00178A  0EEC               	movlw	low u459
  2572  00178C  6E00               	movwf	btemp,c
  2573  00178E  0E09               	movlw	high u459
  2574  001790  D003               	goto	L7
  2575  001792                     u696:
  2576  001792  0EDD               	movlw	low u449
  2577  001794  6E00               	movwf	btemp,c
  2578  001796  0E0B               	movlw	high u449
  2579  001798                     L7:
  2580  001798  6E01               	movwf	btemp+1,c
  2581  00179A  C000  F048         	movff	btemp,?_strcat+2
  2582  00179E  C001  F049         	movff	btemp+1,?_strcat+3
  2583  0017A2  ECFC  F03D         	call	_strcat	;wreg free
  2584                           ;menu.c: 456: OsdWrite(3, s, 1 == menusub);
  2585  0017A6  0100               	movlb	__Lparam shr (0+8)
  2586  0017A8  0E65               	movlw	low _s
  2587  0017AA  6F5D               	movwf	?_OsdWrite^(__Lparam& (0+65280)),b
  2588  0017AC  0E03               	movlw	high _s
  2589  0017AE  6F5E               	movwf	(?_OsdWrite+1)^(__Lparam& (0+65280)),b
  2590  0017B0  C364  F000         	movff	_menusub,btemp
  2591  0017B4  0400               	decf	btemp,w,c
  2592  0017B6  0E00               	movlw	0
  2593  0017B8  B4D8               	btfsc	status,2,c
  2594  0017BA  0E01               	movlw	1
  2595  0017BC  6F5F               	movwf	(?_OsdWrite+2)^(__Lparam& (0+65280)),b
  2596  0017BE  0E03               	movlw	3
  2597  0017C0  ECE8  F037         	call	_OsdWrite
  2598                           ;menu.c: 458: strcpy(s, "    Agnus : ");
  2599  0017C4  0100               	movlb	__Lparam shr (0+8)
  2600  0017C6  0E65               	movlw	low _s
  2601  0017C8  6F46               	movwf	?_strcpy^(__Lparam& (0+65280)),b
  2602  0017CA  0E03               	movlw	high _s
  2603  0017CC  6F47               	movwf	(?_strcpy+1)^(__Lparam& (0+65280)),b
  2604  0017CE  0E5F               	movlw	low u469
  2605  0017D0  6F48               	movwf	(?_strcpy+2)^(__Lparam& (0+65280)),b
  2606  0017D2  0E0B               	movlw	high u469
  2607  0017D4  6F49               	movwf	(?_strcpy+3)^(__Lparam& (0+65280)),b
  2608  0017D6  EC29  F03E         	call	_strcpy	;wreg free
  2609                           ;menu.c: 459: strcat(s, config.chipset & 0x04 ? 
      +                          "NTSC" : "PAL ");
  2610  0017DA  0100               	movlb	__Lparam shr (0+8)
  2611  0017DC  0E65               	movlw	low _s
  2612  0017DE  6F46               	movwf	?_strcat^(__Lparam& (0+65280)),b
  2613  0017E0  0E03               	movlw	high _s
  2614  0017E2  6F47               	movwf	(?_strcat+1)^(__Lparam& (0+65280)),b
  2615  0017E4  0100               	movlb	(_config+15) shr (0+8)
  2616  0017E6  B52D               	btfsc	(_config+15)& (0+255),2,b
  2617  0017E8  D004               	goto	u716
  2618  0017EA  0E1C               	movlw	low u489
  2619  0017EC  6E00               	movwf	btemp,c
  2620  0017EE  0E0B               	movlw	high u489
  2621  0017F0  D003               	goto	L8
  2622  0017F2                     u716:
  2623  0017F2  0E5E               	movlw	low u479
  2624  0017F4  6E00               	movwf	btemp,c
  2625  0017F6  0E0A               	movlw	high u479
  2626  0017F8                     L8:
  2627  0017F8  6E01               	movwf	btemp+1,c
  2628  0017FA  C000  F048         	movff	btemp,?_strcat+2
  2629  0017FE  C001  F049         	movff	btemp+1,?_strcat+3
  2630  001802  ECFC  F03D         	call	_strcat	;wreg free
  2631                           ;menu.c: 460: OsdWrite(4, s, 2 == menusub);
  2632  001806  0100               	movlb	__Lparam shr (0+8)
  2633  001808  0E65               	movlw	low _s
  2634  00180A  6F5D               	movwf	?_OsdWrite^(__Lparam& (0+65280)),b
  2635  00180C  0E03               	movlw	high _s
  2636  00180E  6F5E               	movwf	(?_OsdWrite+1)^(__Lparam& (0+65280)),b
  2637  001810  C364  FFE8         	movff	_menusub,wreg
  2638  001814  0A02               	xorlw	2
  2639  001816  0E00               	movlw	0
  2640  001818  B4D8               	btfsc	status,2,c
  2641  00181A  0E01               	movlw	1
  2642  00181C  6F5F               	movwf	(?_OsdWrite+2)^(__Lparam& (0+65280)),b
  2643  00181E  0E04               	movlw	4
  2644  001820  ECE8  F037         	call	_OsdWrite
  2645                           ;menu.c: 462: OsdWrite(7, "        exit", 3 == m
      +                          enusub);
  2646  001824  0100               	movlb	__Lparam shr (0+8)
  2647  001826  0E6D               	movlw	low u499
  2648  001828  6F5D               	movwf	?_OsdWrite^(__Lparam& (0+65280)),b
  2649  00182A  0E09               	movlw	high u499
  2650  00182C  6F5E               	movwf	(?_OsdWrite+1)^(__Lparam& (0+65280)),b
  2651  00182E  C364  FFE8         	movff	_menusub,wreg
  2652  001832  0A03               	xorlw	3
  2653  001834  0E00               	movlw	0
  2654  001836  B4D8               	btfsc	status,2,c
  2655  001838  0E01               	movlw	1
  2656  00183A  6F5F               	movwf	(?_OsdWrite+2)^(__Lparam& (0+65280)),b
  2657  00183C  0E07               	movlw	7
  2658  00183E  ECE8  F037         	call	_OsdWrite
  2659                           ;menu.c: 465: menustate = MENU_SETTINGS_CHIPSET2
      +                          ;
  2660  001842  0E14               	movlw	20
  2661  001844  D4FA               	goto	L4
  2662                           ;menu.c: 466: break;
  2663  001846                     l107:
  2664                           ;menu.c: 468: case MENU_SETTINGS_CHIPSET2 :
  2665                           ;menu.c: 469: HandleUpDown(MENU_SETTINGS_CHIPSET
      +                          1, 3);
  2666  001846  0E03               	movlw	3
  2667  001848  0100               	movlb	__Lparam shr (0+8)
  2668  00184A  6F46               	movwf	?_HandleUpDown^(__Lparam& (0+65280)),b
  2669  00184C  0E13               	movlw	19
  2670  00184E  EC78  F012         	call	_HandleUpDown
  2671                           ;menu.c: 471: if (select)
  2672  001852  A80D               	btfss	_select/(0+8),_select& (0+7),c
  2673  001854  D037               	goto	l108
  2674                           ;menu.c: 472: {
  2675  001856  0103               	movlb	_menusub shr (0+8)
  2676  001858  5364               	movf	_menusub& (0+255),f,b
  2677  00185A  E10B               	bnz	l109
  2678                           ;menu.c: 474: {
  2679  00185C  0100               	movlb	(_config+15) shr (0+8)
  2680  00185E  0E01               	movlw	1
  2681  001860  1B2D               	xorwf	(_config+15)& (0+255),f,b
  2682                           ;menu.c: 476: menustate = MENU_SETTINGS_CHIPSET1
      +                          ;
  2683  001862  0E13               	movlw	19
  2684  001864  CFE8 F357          	movff	wreg,_menustate
  2685                           ;menu.c: 477: ConfigChipset(config.chipset);
  2686  001868  C02D  FFE8         	movff	_config+15,wreg
  2687  00186C  EC70  F039         	call	_ConfigChipset
  2688                           ;menu.c: 478: }
  2689  001870  D029               	goto	l108
  2690  001872                     l109:
  2691                           ;menu.c: 479: else if (1 == menusub)
  2692  001872  C364  F000         	movff	_menusub,btemp
  2693  001876  0400               	decf	btemp,w,c
  2694  001878  E10B               	bnz	l111
  2695                           ;menu.c: 480: {
  2696  00187A  0100               	movlb	(_config+15) shr (0+8)
  2697  00187C  0E02               	movlw	2
  2698  00187E  1B2D               	xorwf	(_config+15)& (0+255),f,b
  2699                           ;menu.c: 482: menustate = MENU_SETTINGS_CHIPSET1
      +                          ;
  2700  001880  0E13               	movlw	19
  2701  001882  CFE8 F357          	movff	wreg,_menustate
  2702                           ;menu.c: 483: ConfigChipset(config.chipset);
  2703  001886  C02D  FFE8         	movff	_config+15,wreg
  2704  00188A  EC70  F039         	call	_ConfigChipset
  2705                           ;menu.c: 484: }
  2706  00188E  D01A               	goto	l108
  2707  001890                     l111:
  2708                           ;menu.c: 485: else if (2 == menusub)
  2709  001890  C364  FFE8         	movff	_menusub,wreg
  2710  001894  0A02               	xorlw	2
  2711  001896  E10B               	bnz	l113
  2712                           ;menu.c: 486: {
  2713  001898  0100               	movlb	(_config+15) shr (0+8)
  2714  00189A  0E04               	movlw	4
  2715  00189C  1B2D               	xorwf	(_config+15)& (0+255),f,b
  2716                           ;menu.c: 488: menustate = MENU_SETTINGS_CHIPSET1
      +                          ;
  2717  00189E  0E13               	movlw	19
  2718  0018A0  CFE8 F357          	movff	wreg,_menustate
  2719                           ;menu.c: 489: ConfigChipset(config.chipset);
  2720  0018A4  C02D  FFE8         	movff	_config+15,wreg
  2721  0018A8  EC70  F039         	call	_ConfigChipset
  2722                           ;menu.c: 490: }
  2723  0018AC  D00B               	goto	l108
  2724  0018AE                     l113:
  2725                           ;menu.c: 491: else if (3 == menusub)
  2726  0018AE  C364  FFE8         	movff	_menusub,wreg
  2727  0018B2  0A03               	xorlw	3
  2728  0018B4  E107               	bnz	l108
  2729                           ;menu.c: 492: {
  2730  0018B6  0E0B               	movlw	11
  2731  0018B8  CFE8 F357          	movff	wreg,_menustate
  2732                           ;menu.c: 494: menusub = 0;
  2733  0018BC  0103               	movlb	_menusub shr (0+8)
  2734  0018BE  6B64               	clrf	_menusub& (0+255),b
  2735                           ;menu.c: 495: OsdClear();
  2736  0018C0  EC20  F039         	call	_OsdClear	;wreg free
  2737  0018C4                     l108:
  2738                           ;menu.c: 496: }
  2739  0018C4  A40D               	btfss	_menu/(0+8),_menu& (0+7),c
  2740  0018C6  D009               	goto	l116
  2741                           ;menu.c: 500: {
  2742  0018C8  0E0B               	movlw	11
  2743  0018CA  CFE8 F357          	movff	wreg,_menustate
  2744                           ;menu.c: 502: menusub = 0;
  2745  0018CE  0103               	movlb	_menusub shr (0+8)
  2746  0018D0  6B64               	clrf	_menusub& (0+255),b
  2747                           ;menu.c: 503: OsdClear();
  2748  0018D2  EC20  F039         	call	_OsdClear	;wreg free
  2749                           ;menu.c: 504: }
  2750  0018D6  EF73  F012         	goto	l26
  2751  0018DA                     l116:
  2752                           ;menu.c: 505: else if (right)
  2753  0018DA  A60D               	btfss	_right/(0+8),_right& (0+7),c
  2754  0018DC  D009               	goto	l118
  2755                           ;menu.c: 506: {
  2756  0018DE  0E11               	movlw	17
  2757  0018E0  CFE8 F357          	movff	wreg,_menustate
  2758                           ;menu.c: 508: menusub = 0;
  2759  0018E4  0103               	movlb	_menusub shr (0+8)
  2760  0018E6  6B64               	clrf	_menusub& (0+255),b
  2761                           ;menu.c: 509: OsdClear();
  2762  0018E8  EC20  F039         	call	_OsdClear	;wreg free
  2763                           ;menu.c: 510: }
  2764  0018EC  EF73  F012         	goto	l26
  2765  0018F0                     l118:
  2766                           ;menu.c: 511: else if (left)
  2767  0018F0  A20D               	btfss	_left/(0+8),_left& (0+7),c
  2768  0018F2  EF73  F012         	goto	l26
  2769                           ;menu.c: 512: {
  2770  0018F6  0E0F               	movlw	15
  2771  0018F8  CFE8 F357          	movff	wreg,_menustate
  2772                           ;menu.c: 514: menusub = 0;
  2773  0018FC  0103               	movlb	_menusub shr (0+8)
  2774  0018FE  6B64               	clrf	_menusub& (0+255),b
  2775                           ;menu.c: 515: OsdClear();
  2776  001900  EC20  F039         	call	_OsdClear	;wreg free
  2777                           ;menu.c: 516: }
  2778  001904  EF73  F012         	goto	l26
  2779  001908                     l121:
  2780                           ;menu.c: 522: case MENU_SETTINGS_MEMORY1 :
  2781                           ;menu.c: 524: OsdWrite(0, " \x1B  -= MEMORY =-  
      +                           \x1A", 0);
  2782  001908  0100               	movlb	__Lparam shr (0+8)
  2783  00190A  0E25               	movlw	low u509
  2784  00190C  6F5D               	movwf	?_OsdWrite^(__Lparam& (0+65280)),b
  2785  00190E  0E0C               	movlw	high u509
  2786  001910  6F5E               	movwf	(?_OsdWrite+1)^(__Lparam& (0+65280)),b
  2787  001912  6B5F               	clrf	(?_OsdWrite+2)^(__Lparam& (0+65280)),b
  2788  001914  0E00               	movlw	0
  2789  001916  ECE8  F037         	call	_OsdWrite
  2790                           ;menu.c: 526: strcpy(s, "  CHIP : ");
  2791  00191A  0100               	movlb	__Lparam shr (0+8)
  2792  00191C  0E65               	movlw	low _s
  2793  00191E  6F46               	movwf	?_strcpy^(__Lparam& (0+65280)),b
  2794  001920  0E03               	movlw	high _s
  2795  001922  6F47               	movwf	(?_strcpy+1)^(__Lparam& (0+65280)),b
  2796  001924  0E90               	movlw	low u519
  2797  001926  6F48               	movwf	(?_strcpy+2)^(__Lparam& (0+65280)),b
  2798  001928  0E0B               	movlw	high u519
  2799  00192A  6F49               	movwf	(?_strcpy+3)^(__Lparam& (0+65280)),b
  2800  00192C  EC29  F03E         	call	_strcpy	;wreg free
  2801                           ;menu.c: 527: strcat(s, config_memory_chip_msg[c
      +                          onfig.memory & 0x03]);
  2802  001930  0100               	movlb	__Lparam shr (0+8)
  2803  001932  0E65               	movlw	low _s
  2804  001934  6F46               	movwf	?_strcat^(__Lparam& (0+65280)),b
  2805  001936  0E03               	movlw	high _s
  2806  001938  6F47               	movwf	(?_strcat+1)^(__Lparam& (0+65280)),b
  2807  00193A  C02C  FFE8         	movff	_config+14,wreg
  2808  00193E  0B03               	andlw	3
  2809  001940  0D02               	mullw	2
  2810  001942  50F3               	movf	prodl,w,c
  2811  001944  0F08               	addlw	low _config_memory_chip_msg
  2812  001946  6EF6               	movwf	tblptrl,c
  2813  001948  50F4               	movf	prodh,w,c
  2814  00194A  6EF7               	movwf	tblptrh,c
  2815  00194C  0E09               	movlw	high _config_memory_chip_msg
  2816  00194E  22F7               	addwfc	tblptrh,f,c
  2817  001950  0009               	tblrd		*+
  2818  001952  FFFF               	dw	65535	; Nop inserted for errata
  2819  001954  CFF5 F048          	movff	tablat,?_strcat+2
  2820  001958  0009               	tblrd		*+
  2821  00195A  FFFF               	dw	65535	; Nop inserted for errata
  2822  00195C  CFF5 F049          	movff	tablat,?_strcat+3
  2823  001960  ECFC  F03D         	call	_strcat	;wreg free
  2824                           ;menu.c: 528: OsdWrite(2, s, 0 == menusub);
  2825  001964  0100               	movlb	__Lparam shr (0+8)
  2826  001966  0E65               	movlw	low _s
  2827  001968  6F5D               	movwf	?_OsdWrite^(__Lparam& (0+65280)),b
  2828  00196A  0E03               	movlw	high _s
  2829  00196C  6F5E               	movwf	(?_OsdWrite+1)^(__Lparam& (0+65280)),b
  2830  00196E  0103               	movlb	_menusub shr (0+8)
  2831  001970  5364               	movf	_menusub& (0+255),f,b
  2832  001972  0E00               	movlw	0
  2833  001974  B4D8               	btfsc	status,2,c
  2834  001976  0E01               	movlw	1
  2835  001978  0100               	movlb	__Lparam shr (0+8)
  2836  00197A  6F5F               	movwf	(?_OsdWrite+2)^(__Lparam& (0+65280)),b
  2837  00197C  0E02               	movlw	2
  2838  00197E  ECE8  F037         	call	_OsdWrite
  2839                           ;menu.c: 530: strcpy(s, "  SLOW : ");
  2840  001982  0100               	movlb	__Lparam shr (0+8)
  2841  001984  0E65               	movlw	low _s
  2842  001986  6F46               	movwf	?_strcpy^(__Lparam& (0+65280)),b
  2843  001988  0E03               	movlw	high _s
  2844  00198A  6F47               	movwf	(?_strcpy+1)^(__Lparam& (0+65280)),b
  2845  00198C  0E79               	movlw	low u529
  2846  00198E  6F48               	movwf	(?_strcpy+2)^(__Lparam& (0+65280)),b
  2847  001990  0E0B               	movlw	high u529
  2848  001992  6F49               	movwf	(?_strcpy+3)^(__Lparam& (0+65280)),b
  2849  001994  EC29  F03E         	call	_strcpy	;wreg free
  2850                           ;menu.c: 531: strcat(s, config_memory_slow_msg[c
      +                          onfig.memory >> 2 & 0x03]);
  2851  001998  0100               	movlb	__Lparam shr (0+8)
  2852  00199A  0E65               	movlw	low _s
  2853  00199C  6F46               	movwf	?_strcat^(__Lparam& (0+65280)),b
  2854  00199E  0E03               	movlw	high _s
  2855  0019A0  6F47               	movwf	(?_strcat+1)^(__Lparam& (0+65280)),b
  2856  0019A2  C02C  F000         	movff	_config+14,btemp
  2857  0019A6  90D8               	bcf	status,0,c
  2858  0019A8  3200               	rrcf	btemp,f,c
  2859  0019AA  90D8               	bcf	status,0,c
  2860  0019AC  3000               	rrcf	btemp,w,c
  2861  0019AE  0B03               	andlw	3
  2862  0019B0  0D02               	mullw	2
  2863  0019B2  50F3               	movf	prodl,w,c
  2864  0019B4  0F10               	addlw	low _config_memory_slow_msg
  2865  0019B6  6EF6               	movwf	tblptrl,c
  2866  0019B8  50F4               	movf	prodh,w,c
  2867  0019BA  6EF7               	movwf	tblptrh,c
  2868  0019BC  0E09               	movlw	high _config_memory_slow_msg
  2869  0019BE  22F7               	addwfc	tblptrh,f,c
  2870  0019C0  0009               	tblrd		*+
  2871  0019C2  FFFF               	dw	65535	; Nop inserted for errata
  2872  0019C4  CFF5 F048          	movff	tablat,?_strcat+2
  2873  0019C8  0009               	tblrd		*+
  2874  0019CA  FFFF               	dw	65535	; Nop inserted for errata
  2875  0019CC  CFF5 F049          	movff	tablat,?_strcat+3
  2876  0019D0  ECFC  F03D         	call	_strcat	;wreg free
  2877                           ;menu.c: 532: OsdWrite(3, s, 1 == menusub);
  2878  0019D4  0100               	movlb	__Lparam shr (0+8)
  2879  0019D6  0E65               	movlw	low _s
  2880  0019D8  6F5D               	movwf	?_OsdWrite^(__Lparam& (0+65280)),b
  2881  0019DA  0E03               	movlw	high _s
  2882  0019DC  6F5E               	movwf	(?_OsdWrite+1)^(__Lparam& (0+65280)),b
  2883  0019DE  C364  F000         	movff	_menusub,btemp
  2884  0019E2  0400               	decf	btemp,w,c
  2885  0019E4  0E00               	movlw	0
  2886  0019E6  B4D8               	btfsc	status,2,c
  2887  0019E8  0E01               	movlw	1
  2888  0019EA  6F5F               	movwf	(?_OsdWrite+2)^(__Lparam& (0+65280)),b
  2889  0019EC  0E03               	movlw	3
  2890  0019EE  ECE8  F037         	call	_OsdWrite
  2891                           ;menu.c: 534: strcpy(s, "  ROM  : ");
  2892  0019F2  0100               	movlb	__Lparam shr (0+8)
  2893  0019F4  0E65               	movlw	low _s
  2894  0019F6  6F46               	movwf	?_strcpy^(__Lparam& (0+65280)),b
  2895  0019F8  0E03               	movlw	high _s
  2896  0019FA  6F47               	movwf	(?_strcpy+1)^(__Lparam& (0+65280)),b
  2897  0019FC  0EA9               	movlw	low u539
  2898  0019FE  6F48               	movwf	(?_strcpy+2)^(__Lparam& (0+65280)),b
  2899  001A00  0E0B               	movlw	high u539
  2900  001A02  6F49               	movwf	(?_strcpy+3)^(__Lparam& (0+65280)),b
  2901  001A04  EC29  F03E         	call	_strcpy	;wreg free
  2902                           ;menu.c: 535: strncat(s, config.kickname, 8);
  2903  001A08  0100               	movlb	__Lparam shr (0+8)
  2904  001A0A  0E65               	movlw	low _s
  2905  001A0C  6F46               	movwf	?_strncat^(__Lparam& (0+65280)),b
  2906  001A0E  0E03               	movlw	high _s
  2907  001A10  6F47               	movwf	(?_strncat+1)^(__Lparam& (0+65280)),b
  2908  001A12  0E1E               	movlw	low _config
  2909  001A14  6F48               	movwf	(?_strncat+2)^(__Lparam& (0+65280)),b
  2910  001A16  0E00               	movlw	high _config
  2911  001A18  6F49               	movwf	(?_strncat+3)^(__Lparam& (0+65280)),b
  2912  001A1A  0E08               	movlw	8
  2913  001A1C  6F4A               	movwf	(?_strncat+4)^(__Lparam& (0+65280)),b
  2914  001A1E  6B4B               	clrf	(?_strncat+5)^(__Lparam& (0+65280)),b
  2915  001A20  EC8C  F03D         	call	_strncat	;wreg free
  2916                           ;menu.c: 536: OsdWrite(4, s, 2 == menusub);
  2917  001A24  0100               	movlb	__Lparam shr (0+8)
  2918  001A26  0E65               	movlw	low _s
  2919  001A28  6F5D               	movwf	?_OsdWrite^(__Lparam& (0+65280)),b
  2920  001A2A  0E03               	movlw	high _s
  2921  001A2C  6F5E               	movwf	(?_OsdWrite+1)^(__Lparam& (0+65280)),b
  2922  001A2E  C364  FFE8         	movff	_menusub,wreg
  2923  001A32  0A02               	xorlw	2
  2924  001A34  0E00               	movlw	0
  2925  001A36  B4D8               	btfsc	status,2,c
  2926  001A38  0E01               	movlw	1
  2927  001A3A  6F5F               	movwf	(?_OsdWrite+2)^(__Lparam& (0+65280)),b
  2928  001A3C  0E04               	movlw	4
  2929  001A3E  ECE8  F037         	call	_OsdWrite
  2930                           ;menu.c: 538: strcpy(s, "  AR3  : ");
  2931  001A42  0100               	movlb	__Lparam shr (0+8)
  2932  001A44  0E65               	movlw	low _s
  2933  001A46  6F46               	movwf	?_strcpy^(__Lparam& (0+65280)),b
  2934  001A48  0E03               	movlw	high _s
  2935  001A4A  6F47               	movwf	(?_strcpy+1)^(__Lparam& (0+65280)),b
  2936  001A4C  0EB3               	movlw	low u549
  2937  001A4E  6F48               	movwf	(?_strcpy+2)^(__Lparam& (0+65280)),b
  2938  001A50  0E0B               	movlw	high u549
  2939  001A52  6F49               	movwf	(?_strcpy+3)^(__Lparam& (0+65280)),b
  2940  001A54  EC29  F03E         	call	_strcpy	;wreg free
  2941                           ;menu.c: 539: strcat(s, config.ar3 ? "enabled " 
      +                          : "disabled");
  2942  001A58  0100               	movlb	__Lparam shr (0+8)
  2943  001A5A  0E65               	movlw	low _s
  2944  001A5C  6F46               	movwf	?_strcat^(__Lparam& (0+65280)),b
  2945  001A5E  0E03               	movlw	high _s
  2946  001A60  6F47               	movwf	(?_strcat+1)^(__Lparam& (0+65280)),b
  2947  001A62  EE00  F030         	lfsr	0,_config+18
  2948  001A66  50EF               	movf	indf0,w,c
  2949  001A68  E104               	bnz	u816
  2950  001A6A  0E13               	movlw	low u569
  2951  001A6C  6E00               	movwf	btemp,c
  2952  001A6E  0E0A               	movlw	high u569
  2953  001A70  D003               	goto	L9
  2954  001A72                     u816:
  2955  001A72  0E04               	movlw	low u559
  2956  001A74  6E00               	movwf	btemp,c
  2957  001A76  0E0B               	movlw	high u559
  2958  001A78                     L9:
  2959  001A78  6E01               	movwf	btemp+1,c
  2960  001A7A  C000  F048         	movff	btemp,?_strcat+2
  2961  001A7E  C001  F049         	movff	btemp+1,?_strcat+3
  2962  001A82  ECFC  F03D         	call	_strcat	;wreg free
  2963                           ;menu.c: 540: OsdWrite(5, s, 3 == menusub);
  2964  001A86  0100               	movlb	__Lparam shr (0+8)
  2965  001A88  0E65               	movlw	low _s
  2966  001A8A  6F5D               	movwf	?_OsdWrite^(__Lparam& (0+65280)),b
  2967  001A8C  0E03               	movlw	high _s
  2968  001A8E  6F5E               	movwf	(?_OsdWrite+1)^(__Lparam& (0+65280)),b
  2969  001A90  C364  FFE8         	movff	_menusub,wreg
  2970  001A94  0A03               	xorlw	3
  2971  001A96  0E00               	movlw	0
  2972  001A98  B4D8               	btfsc	status,2,c
  2973  001A9A  0E01               	movlw	1
  2974  001A9C  6F5F               	movwf	(?_OsdWrite+2)^(__Lparam& (0+65280)),b
  2975  001A9E  0E05               	movlw	5
  2976  001AA0  ECE8  F037         	call	_OsdWrite
  2977                           ;menu.c: 542: OsdWrite(7, "        exit", 4 == m
      +                          enusub);
  2978  001AA4  0100               	movlb	__Lparam shr (0+8)
  2979  001AA6  0E6D               	movlw	low u579
  2980  001AA8  6F5D               	movwf	?_OsdWrite^(__Lparam& (0+65280)),b
  2981  001AAA  0E09               	movlw	high u579
  2982  001AAC  6F5E               	movwf	(?_OsdWrite+1)^(__Lparam& (0+65280)),b
  2983  001AAE  C364  FFE8         	movff	_menusub,wreg
  2984  001AB2  0A04               	xorlw	4
  2985  001AB4  0E00               	movlw	0
  2986  001AB6  B4D8               	btfsc	status,2,c
  2987  001AB8  0E01               	movlw	1
  2988  001ABA  6F5F               	movwf	(?_OsdWrite+2)^(__Lparam& (0+65280)),b
  2989  001ABC  0E07               	movlw	7
  2990  001ABE  ECE8  F037         	call	_OsdWrite
  2991                           ;menu.c: 545: menustate = MENU_SETTINGS_MEMORY2;
  2992  001AC2  0E12               	movlw	18
  2993  001AC4  EF1D  F009         	goto	L4
  2994                           ;menu.c: 546: break;
  2995  001AC8                     l122:
  2996                           ;menu.c: 548: case MENU_SETTINGS_MEMORY2 :
  2997                           ;menu.c: 549: HandleUpDown(MENU_SETTINGS_MEMORY1
      +                          , 4);
  2998  001AC8  0E04               	movlw	4
  2999  001ACA  0100               	movlb	__Lparam shr (0+8)
  3000  001ACC  6F46               	movwf	?_HandleUpDown^(__Lparam& (0+65280)),b
  3001  001ACE  0E11               	movlw	17
  3002  001AD0  EC78  F012         	call	_HandleUpDown
  3003                           ;menu.c: 551: if (select)
  3004  001AD4  A80D               	btfss	_select/(0+8),_select& (0+7),c
  3005  001AD6  D061               	goto	l123
  3006                           ;menu.c: 552: {
  3007  001AD8  0103               	movlb	_menusub shr (0+8)
  3008  001ADA  5364               	movf	_menusub& (0+255),f,b
  3009  001ADC  E115               	bnz	l124
  3010                           ;menu.c: 554: {
  3011  001ADE  C02C  F000         	movff	_config+14,btemp
  3012  001AE2  0EFC               	movlw	-4
  3013  001AE4  1600               	andwf	btemp,f,c
  3014  001AE6  C02C  F001         	movff	_config+14,btemp+1
  3015  001AEA  2A01               	incf	btemp+1,f,c
  3016  001AEC  0E03               	movlw	3
  3017  001AEE  1601               	andwf	btemp+1,f,c
  3018  001AF0  5000               	movf	btemp,w,c
  3019  001AF2  1001               	iorwf	btemp+1,w,c
  3020  001AF4  CFE8 F02C          	movff	wreg,_config+14
  3021                           ;menu.c: 556: menustate = MENU_SETTINGS_MEMORY1;
  3022  001AF8  0E11               	movlw	17
  3023  001AFA  CFE8 F357          	movff	wreg,_menustate
  3024                           ;menu.c: 557: ConfigMemory(config.memory);
  3025  001AFE  C02C  FFE8         	movff	_config+14,wreg
  3026  001B02  EC66  F039         	call	_ConfigMemory
  3027                           ;menu.c: 558: }
  3028  001B06  D049               	goto	l123
  3029  001B08                     l124:
  3030                           ;menu.c: 559: else if (1 == menusub)
  3031  001B08  C364  F000         	movff	_menusub,btemp
  3032  001B0C  0400               	decf	btemp,w,c
  3033  001B0E  E116               	bnz	l126
  3034                           ;menu.c: 560: {
  3035  001B10  C02C  F000         	movff	_config+14,btemp
  3036  001B14  0EF3               	movlw	-13
  3037  001B16  1600               	andwf	btemp,f,c
  3038  001B18  C02C  F001         	movff	_config+14,btemp+1
  3039  001B1C  0E04               	movlw	4
  3040  001B1E  2601               	addwf	btemp+1,f,c
  3041  001B20  0E0C               	movlw	12
  3042  001B22  1601               	andwf	btemp+1,f,c
  3043  001B24  5000               	movf	btemp,w,c
  3044  001B26  1001               	iorwf	btemp+1,w,c
  3045  001B28  CFE8 F02C          	movff	wreg,_config+14
  3046                           ;menu.c: 562: menustate = MENU_SETTINGS_MEMORY1;
  3047  001B2C  0E11               	movlw	17
  3048  001B2E  CFE8 F357          	movff	wreg,_menustate
  3049                           ;menu.c: 563: ConfigMemory(config.memory);
  3050  001B32  C02C  FFE8         	movff	_config+14,wreg
  3051  001B36  EC66  F039         	call	_ConfigMemory
  3052                           ;menu.c: 564: }
  3053  001B3A  D02F               	goto	l123
  3054  001B3C                     l126:
  3055                           ;menu.c: 565: else if (2 == menusub)
  3056  001B3C  C364  FFE8         	movff	_menusub,wreg
  3057  001B40  0A02               	xorlw	2
  3058  001B42  E114               	bnz	l128
  3059                           ;menu.c: 566: {
  3060  001B44  0100               	movlb	__Lparam shr (0+8)
  3061  001B46  0E7F               	movlw	low _currentDir
  3062  001B48  6F48               	movwf	?_OpenRootDirectory^(__Lparam& (0+65280))
      +                          ,b
  3063  001B4A  0E02               	movlw	high _currentDir
  3064  001B4C  6F49               	movwf	(?_OpenRootDirectory+1)^(__Lparam& (0+652
      +                          80)),b
  3065  001B4E  EC2A  F015         	call	_OpenRootDirectory	;wreg free
  3066                           ;menu.c: 569: SelectFile(defRomExt, MENU_ROMFILE
      +                          SELECTED1, MENU_SETTINGS_MEMORY1, 0);
  3067  001B52  0100               	movlb	__Lparam shr (0+8)
  3068  001B54  0E0A               	movlw	low _defRomExt
  3069  001B56  6F46               	movwf	?_SelectFile^(__Lparam& (0+65280)),b
  3070  001B58  0E0F               	movlw	high _defRomExt
  3071  001B5A  6F47               	movwf	(?_SelectFile+1)^(__Lparam& (0+65280)),b
  3072  001B5C  0E0D               	movlw	13
  3073  001B5E  6F48               	movwf	(?_SelectFile+2)^(__Lparam& (0+65280)),b
  3074  001B60  0E11               	movlw	17
  3075  001B62  6F49               	movwf	(?_SelectFile+3)^(__Lparam& (0+65280)),b
  3076  001B64  6B4A               	clrf	(?_SelectFile+4)^(__Lparam& (0+65280)),b
  3077  001B66  EC92  F012         	call	_SelectFile	;wreg free
  3078                           ;menu.c: 570: }
  3079  001B6A  D017               	goto	l123
  3080  001B6C                     l128:
  3081                           ;menu.c: 571: else if (3 == menusub)
  3082  001B6C  C364  FFE8         	movff	_menusub,wreg
  3083  001B70  0A03               	xorlw	3
  3084  001B72  E107               	bnz	l130
  3085                           ;menu.c: 572: {
  3086  001B74  0100               	movlb	(_config+18) shr (0+8)
  3087  001B76  0E01               	movlw	1
  3088  001B78  1B30               	xorwf	(_config+18)& (0+255),f,b
  3089                           ;menu.c: 574: menustate = MENU_SETTINGS_MEMORY1;
  3090  001B7A  0E11               	movlw	17
  3091  001B7C  CFE8 F357          	movff	wreg,_menustate
  3092                           ;menu.c: 575: }
  3093  001B80  D00C               	goto	l123
  3094  001B82                     l130:
  3095                           ;menu.c: 576: else if (4 == menusub)
  3096  001B82  C364  FFE8         	movff	_menusub,wreg
  3097  001B86  0A04               	xorlw	4
  3098  001B88  E108               	bnz	l123
  3099                           ;menu.c: 577: {
  3100  001B8A  0E0B               	movlw	11
  3101  001B8C  CFE8 F357          	movff	wreg,_menustate
  3102                           ;menu.c: 579: menusub = 1;
  3103  001B90  0E01               	movlw	1
  3104  001B92  CFE8 F364          	movff	wreg,_menusub
  3105                           ;menu.c: 580: OsdClear();
  3106  001B96  EC20  F039         	call	_OsdClear	;wreg free
  3107  001B9A                     l123:
  3108                           ;menu.c: 581: }
  3109  001B9A  A40D               	btfss	_menu/(0+8),_menu& (0+7),c
  3110  001B9C  D00A               	goto	l133
  3111                           ;menu.c: 585: {
  3112  001B9E  0E0B               	movlw	11
  3113  001BA0  CFE8 F357          	movff	wreg,_menustate
  3114                           ;menu.c: 587: menusub = 1;
  3115  001BA4  0E01               	movlw	1
  3116  001BA6  CFE8 F364          	movff	wreg,_menusub
  3117                           ;menu.c: 588: OsdClear();
  3118  001BAA  EC20  F039         	call	_OsdClear	;wreg free
  3119                           ;menu.c: 589: }
  3120  001BAE  EF73  F012         	goto	l26
  3121  001BB2                     l133:
  3122                           ;menu.c: 590: else if (right)
  3123  001BB2  A60D               	btfss	_right/(0+8),_right& (0+7),c
  3124  001BB4  D009               	goto	l135
  3125                           ;menu.c: 591: {
  3126  001BB6  0E15               	movlw	21
  3127  001BB8  CFE8 F357          	movff	wreg,_menustate
  3128                           ;menu.c: 593: menusub = 0;
  3129  001BBC  0103               	movlb	_menusub shr (0+8)
  3130  001BBE  6B64               	clrf	_menusub& (0+255),b
  3131                           ;menu.c: 594: OsdClear();
  3132  001BC0  EC20  F039         	call	_OsdClear	;wreg free
  3133                           ;menu.c: 595: }
  3134  001BC4  EF73  F012         	goto	l26
  3135  001BC8                     l135:
  3136                           ;menu.c: 596: else if (left)
  3137  001BC8  A20D               	btfss	_left/(0+8),_left& (0+7),c
  3138  001BCA  EF73  F012         	goto	l26
  3139                           ;menu.c: 597: {
  3140  001BCE  0E13               	movlw	19
  3141  001BD0  CFE8 F357          	movff	wreg,_menustate
  3142                           ;menu.c: 599: menusub = 0;
  3143  001BD4  0103               	movlb	_menusub shr (0+8)
  3144  001BD6  6B64               	clrf	_menusub& (0+255),b
  3145                           ;menu.c: 600: OsdClear();
  3146  001BD8  EC20  F039         	call	_OsdClear	;wreg free
  3147                           ;menu.c: 601: }
  3148  001BDC  EF73  F012         	goto	l26
  3149  001BE0                     l138:
  3150                           ;menu.c: 607: case MENU_SETTINGS_DRIVES1 :
  3151                           ;menu.c: 608: OsdWrite(0, " \x1B  -= DRIVES =-  
      +                           \x1A", 0);
  3152  001BE0  0100               	movlb	__Lparam shr (0+8)
  3153  001BE2  0E3A               	movlw	low u589
  3154  001BE4  6F5D               	movwf	?_OsdWrite^(__Lparam& (0+65280)),b
  3155  001BE6  0E0C               	movlw	high u589
  3156  001BE8  6F5E               	movwf	(?_OsdWrite+1)^(__Lparam& (0+65280)),b
  3157  001BEA  6B5F               	clrf	(?_OsdWrite+2)^(__Lparam& (0+65280)),b
  3158  001BEC  0E00               	movlw	0
  3159  001BEE  ECE8  F037         	call	_OsdWrite
  3160                           ;menu.c: 610: sprintf(s,"   drives   : %d", conf
      +                          ig.floppy_drives + 1);
  3161  001BF2  0100               	movlb	__Lparam shr (0+8)
  3162  001BF4  0E65               	movlw	low _s
  3163  001BF6  6F53               	movwf	(?_sprintf+2)^(__Lparam& (0+65280)),b
  3164  001BF8  0E03               	movlw	high _s
  3165  001BFA  6F54               	movwf	(?_sprintf+3)^(__Lparam& (0+65280)),b
  3166  001BFC  0E41               	movlw	low u599
  3167  001BFE  6F55               	movwf	(?_sprintf+4)^(__Lparam& (0+65280)),b
  3168  001C00  0E0A               	movlw	high u599
  3169  001C02  6F56               	movwf	(?_sprintf+5)^(__Lparam& (0+65280)),b
  3170  001C04  0E01               	movlw	1
  3171  001C06  C02F  F000         	movff	_config+17,btemp
  3172  001C0A  6A01               	clrf	btemp+1,c
  3173  001C0C  2600               	addwf	btemp,f,c
  3174  001C0E  0E00               	movlw	0
  3175  001C10  2201               	addwfc	btemp+1,f,c
  3176  001C12  C000  F044         	movff	btemp,?a_HandleUI+4
  3177  001C16  C001  F045         	movff	btemp+1,?a_HandleUI+5
  3178  001C1A  0E44               	movlw	low (?a_HandleUI+4)
  3179  001C1C  CFE8 F051          	movff	wreg,?_sprintf
  3180  001C20  0E00               	movlw	high (?a_HandleUI+4)
  3181  001C22  CFE8 F052          	movff	wreg,?_sprintf+1
  3182  001C26  EC2F  F032         	call	_sprintf	;wreg free
  3183                           ;menu.c: 611: OsdWrite(2, s, 0 == menusub);
  3184  001C2A  0100               	movlb	__Lparam shr (0+8)
  3185  001C2C  0E65               	movlw	low _s
  3186  001C2E  6F5D               	movwf	?_OsdWrite^(__Lparam& (0+65280)),b
  3187  001C30  0E03               	movlw	high _s
  3188  001C32  6F5E               	movwf	(?_OsdWrite+1)^(__Lparam& (0+65280)),b
  3189  001C34  0103               	movlb	_menusub shr (0+8)
  3190  001C36  5364               	movf	_menusub& (0+255),f,b
  3191  001C38  0E00               	movlw	0
  3192  001C3A  B4D8               	btfsc	status,2,c
  3193  001C3C  0E01               	movlw	1
  3194  001C3E  0100               	movlb	__Lparam shr (0+8)
  3195  001C40  6F5F               	movwf	(?_OsdWrite+2)^(__Lparam& (0+65280)),b
  3196  001C42  0E02               	movlw	2
  3197  001C44  ECE8  F037         	call	_OsdWrite
  3198                           ;menu.c: 613: strcpy(s, "   speed    : ");
  3199  001C48  0100               	movlb	__Lparam shr (0+8)
  3200  001C4A  0E65               	movlw	low _s
  3201  001C4C  6F46               	movwf	?_strcpy^(__Lparam& (0+65280)),b
  3202  001C4E  0E03               	movlw	high _s
  3203  001C50  6F47               	movwf	(?_strcpy+1)^(__Lparam& (0+65280)),b
  3204  001C52  0ECE               	movlw	low u609
  3205  001C54  6F48               	movwf	(?_strcpy+2)^(__Lparam& (0+65280)),b
  3206  001C56  0E0B               	movlw	high u609
  3207  001C58  6F49               	movwf	(?_strcpy+3)^(__Lparam& (0+65280)),b
  3208  001C5A  EC29  F03E         	call	_strcpy	;wreg free
  3209                           ;menu.c: 614: strcat(s, config.floppy_speed ? "2
      +                          x " : "1x");
  3210  001C5E  0100               	movlb	__Lparam shr (0+8)
  3211  001C60  0E65               	movlw	low _s
  3212  001C62  6F46               	movwf	?_strcat^(__Lparam& (0+65280)),b
  3213  001C64  0E03               	movlw	high _s
  3214  001C66  6F47               	movwf	(?_strcat+1)^(__Lparam& (0+65280)),b
  3215  001C68  EE00  F02E         	lfsr	0,_config+16
  3216  001C6C  50EF               	movf	indf0,w,c
  3217  001C6E  E104               	bnz	u926
  3218  001C70  0E6A               	movlw	low u629
  3219  001C72  6E00               	movwf	btemp,c
  3220  001C74  0E09               	movlw	high u629
  3221  001C76  D003               	goto	L10
  3222  001C78                     u926:
  3223  001C78  0EFC               	movlw	low u619
  3224  001C7A  6E00               	movwf	btemp,c
  3225  001C7C  0E0A               	movlw	high u619
  3226  001C7E                     L10:
  3227  001C7E  6E01               	movwf	btemp+1,c
  3228  001C80  C000  F048         	movff	btemp,?_strcat+2
  3229  001C84  C001  F049         	movff	btemp+1,?_strcat+3
  3230  001C88  ECFC  F03D         	call	_strcat	;wreg free
  3231                           ;menu.c: 615: OsdWrite(3, s, 1 == menusub);
  3232  001C8C  0100               	movlb	__Lparam shr (0+8)
  3233  001C8E  0E65               	movlw	low _s
  3234  001C90  6F5D               	movwf	?_OsdWrite^(__Lparam& (0+65280)),b
  3235  001C92  0E03               	movlw	high _s
  3236  001C94  6F5E               	movwf	(?_OsdWrite+1)^(__Lparam& (0+65280)),b
  3237  001C96  C364  F000         	movff	_menusub,btemp
  3238  001C9A  0400               	decf	btemp,w,c
  3239  001C9C  0E00               	movlw	0
  3240  001C9E  B4D8               	btfsc	status,2,c
  3241  001CA0  0E01               	movlw	1
  3242  001CA2  6F5F               	movwf	(?_OsdWrite+2)^(__Lparam& (0+65280)),b
  3243  001CA4  0E03               	movlw	3
  3244  001CA6  ECE8  F037         	call	_OsdWrite
  3245                           ;menu.c: 617: strcpy(s, "   A600 IDE : ");
  3246  001CAA  0100               	movlb	__Lparam shr (0+8)
  3247  001CAC  0E65               	movlw	low _s
  3248  001CAE  6F46               	movwf	?_strcpy^(__Lparam& (0+65280)),b
  3249  001CB0  0E03               	movlw	high _s
  3250  001CB2  6F47               	movwf	(?_strcpy+1)^(__Lparam& (0+65280)),b
  3251  001CB4  0E9A               	movlw	low u639
  3252  001CB6  6F48               	movwf	(?_strcpy+2)^(__Lparam& (0+65280)),b
  3253  001CB8  0E0B               	movlw	high u639
  3254  001CBA  6F49               	movwf	(?_strcpy+3)^(__Lparam& (0+65280)),b
  3255  001CBC  EC29  F03E         	call	_strcpy	;wreg free
  3256                           ;menu.c: 618: strcat(s, config.ide ? "on " : "of
      +                          f");
  3257  001CC0  0100               	movlb	__Lparam shr (0+8)
  3258  001CC2  0E65               	movlw	low _s
  3259  001CC4  6F46               	movwf	?_strcat^(__Lparam& (0+65280)),b
  3260  001CC6  0E03               	movlw	high _s
  3261  001CC8  6F47               	movwf	(?_strcat+1)^(__Lparam& (0+65280)),b
  3262  001CCA  EE00  F032         	lfsr	0,_config+20
  3263  001CCE  50EF               	movf	indf0,w,c
  3264  001CD0  E104               	bnz	u946
  3265  001CD2  0EF7               	movlw	low u659
  3266  001CD4  6E00               	movwf	btemp,c
  3267  001CD6  0E09               	movlw	high u659
  3268  001CD8  D003               	goto	L11
  3269  001CDA                     u946:
  3270  001CDA  0E00               	movlw	low u649
  3271  001CDC  6E00               	movwf	btemp,c
  3272  001CDE  0E0B               	movlw	high u649
  3273  001CE0                     L11:
  3274  001CE0  6E01               	movwf	btemp+1,c
  3275  001CE2  C000  F048         	movff	btemp,?_strcat+2
  3276  001CE6  C001  F049         	movff	btemp+1,?_strcat+3
  3277  001CEA  ECFC  F03D         	call	_strcat	;wreg free
  3278                           ;menu.c: 619: OsdWrite(4, s, menusub == 2);
  3279  001CEE  0100               	movlb	__Lparam shr (0+8)
  3280  001CF0  0E65               	movlw	low _s
  3281  001CF2  6F5D               	movwf	?_OsdWrite^(__Lparam& (0+65280)),b
  3282  001CF4  0E03               	movlw	high _s
  3283  001CF6  6F5E               	movwf	(?_OsdWrite+1)^(__Lparam& (0+65280)),b
  3284  001CF8  C364  FFE8         	movff	_menusub,wreg
  3285  001CFC  0A02               	xorlw	2
  3286  001CFE  0E00               	movlw	0
  3287  001D00  B4D8               	btfsc	status,2,c
  3288  001D02  0E01               	movlw	1
  3289  001D04  6F5F               	movwf	(?_OsdWrite+2)^(__Lparam& (0+65280)),b
  3290  001D06  0E04               	movlw	4
  3291  001D08  ECE8  F037         	call	_OsdWrite
  3292                           ;menu.c: 621: sprintf(s,"  hardfiles : %d", (hdf
      +                          [0].present & hdf[0].enabled) + (hdf[1].present 
      +                          & hdf[1].enabled));
  3293  001D0C  0100               	movlb	__Lparam shr (0+8)
  3294  001D0E  0E65               	movlw	low _s
  3295  001D10  6F53               	movwf	(?_sprintf+2)^(__Lparam& (0+65280)),b
  3296  001D12  0E03               	movlw	high _s
  3297  001D14  6F54               	movwf	(?_sprintf+3)^(__Lparam& (0+65280)),b
  3298  001D16  0E30               	movlw	low u669
  3299  001D18  6F55               	movwf	(?_sprintf+4)^(__Lparam& (0+65280)),b
  3300  001D1A  0E0A               	movlw	high u669
  3301  001D1C  6F56               	movwf	(?_sprintf+5)^(__Lparam& (0+65280)),b
  3302  001D1E  C320  FFE8         	movff	_hdf+32,wreg
  3303  001D22  0103               	movlb	(_hdf+31) shr (0+8)
  3304  001D24  151F               	andwf	(_hdf+31)& (0+255),w,b
  3305  001D26  6E00               	movwf	btemp,c
  3306  001D28  C000  F002         	movff	btemp,btemp+2
  3307  001D2C  6A03               	clrf	btemp+3,c
  3308  001D2E  EE03  F047         	lfsr	0,_hdf+71
  3309  001D32  50EF               	movf	indf0,w,c
  3310  001D34  6E01               	movwf	btemp+1,c
  3311  001D36  EE03  F046         	lfsr	0,_hdf+70
  3312  001D3A  50EF               	movf	indf0,w,c
  3313  001D3C  6E00               	movwf	btemp,c
  3314  001D3E  1401               	andwf	btemp+1,w,c
  3315  001D40  2602               	addwf	btemp+2,f,c
  3316  001D42  0E00               	movlw	0
  3317  001D44  2203               	addwfc	btemp+3,f,c
  3318  001D46  C002  F044         	movff	btemp+2,?a_HandleUI+4
  3319  001D4A  C003  F045         	movff	btemp+3,?a_HandleUI+5
  3320  001D4E  0E44               	movlw	low (?a_HandleUI+4)
  3321  001D50  CFE8 F051          	movff	wreg,?_sprintf
  3322  001D54  0E00               	movlw	high (?a_HandleUI+4)
  3323  001D56  CFE8 F052          	movff	wreg,?_sprintf+1
  3324  001D5A  EC2F  F032         	call	_sprintf	;wreg free
  3325                           ;menu.c: 622: OsdWrite(5,s, 3 == menusub);
  3326  001D5E  0100               	movlb	__Lparam shr (0+8)
  3327  001D60  0E65               	movlw	low _s
  3328  001D62  6F5D               	movwf	?_OsdWrite^(__Lparam& (0+65280)),b
  3329  001D64  0E03               	movlw	high _s
  3330  001D66  6F5E               	movwf	(?_OsdWrite+1)^(__Lparam& (0+65280)),b
  3331  001D68  C364  FFE8         	movff	_menusub,wreg
  3332  001D6C  0A03               	xorlw	3
  3333  001D6E  0E00               	movlw	0
  3334  001D70  B4D8               	btfsc	status,2,c
  3335  001D72  0E01               	movlw	1
  3336  001D74  6F5F               	movwf	(?_OsdWrite+2)^(__Lparam& (0+65280)),b
  3337  001D76  0E05               	movlw	5
  3338  001D78  ECE8  F037         	call	_OsdWrite
  3339                           ;menu.c: 624: OsdWrite(7, "        exit", 4 == m
      +                          enusub);
  3340  001D7C  0100               	movlb	__Lparam shr (0+8)
  3341  001D7E  0E6D               	movlw	low u679
  3342  001D80  6F5D               	movwf	?_OsdWrite^(__Lparam& (0+65280)),b
  3343  001D82  0E09               	movlw	high u679
  3344  001D84  6F5E               	movwf	(?_OsdWrite+1)^(__Lparam& (0+65280)),b
  3345  001D86  C364  FFE8         	movff	_menusub,wreg
  3346  001D8A  0A04               	xorlw	4
  3347  001D8C  0E00               	movlw	0
  3348  001D8E  B4D8               	btfsc	status,2,c
  3349  001D90  0E01               	movlw	1
  3350  001D92  6F5F               	movwf	(?_OsdWrite+2)^(__Lparam& (0+65280)),b
  3351  001D94  0E07               	movlw	7
  3352  001D96  ECE8  F037         	call	_OsdWrite
  3353                           ;menu.c: 627: menustate = MENU_SETTINGS_DRIVES2;
  3354  001D9A  0E16               	movlw	22
  3355  001D9C  EF1D  F009         	goto	L4
  3356                           ;menu.c: 628: break;
  3357  001DA0                     l139:
  3358                           ;menu.c: 630: case MENU_SETTINGS_DRIVES2 :
  3359                           ;menu.c: 631: HandleUpDown(MENU_SETTINGS_DRIVES1
      +                          , 4);
  3360  001DA0  0E04               	movlw	4
  3361  001DA2  0100               	movlb	__Lparam shr (0+8)
  3362  001DA4  6F46               	movwf	?_HandleUpDown^(__Lparam& (0+65280)),b
  3363  001DA6  0E15               	movlw	21
  3364  001DA8  DBA3               	call	_HandleUpDown
  3365                           ;menu.c: 633: if (select)
  3366  001DAA  A80D               	btfss	_select/(0+8),_select& (0+7),c
  3367  001DAC  D05C               	goto	l140
  3368                           ;menu.c: 634: {
  3369  001DAE  0103               	movlb	_menusub shr (0+8)
  3370  001DB0  5364               	movf	_menusub& (0+255),f,b
  3371  001DB2  E110               	bnz	l141
  3372                           ;menu.c: 636: {
  3373  001DB4  0100               	movlb	(_config+17) shr (0+8)
  3374  001DB6  2B2F               	incf	(_config+17)& (0+255),f,b
  3375                           ;menu.c: 638: if(config.floppy_drives > (0x04-1)
      +                          )
  3376  001DB8  0E03               	movlw	3
  3377  001DBA  652F               	cpfsgt	(_config+17)& (0+255),b
  3378  001DBC  D001               	goto	l142
  3379                           ;menu.c: 639: { config.floppy_drives = 0; }
  3380  001DBE  6B2F               	clrf	(_config+17)& (0+255),b
  3381  001DC0                     l142:
  3382                           ;menu.c: 640: menustate = MENU_SETTINGS_DRIVES1;
  3383  001DC0  0E15               	movlw	21
  3384  001DC2  CFE8 F357          	movff	wreg,_menustate
  3385                           ;menu.c: 641: ConfigFloppy(config.floppy_drives,
      +                           config.floppy_speed);
  3386  001DC6  C02E  F046         	movff	_config+16,?_ConfigFloppy
  3387  001DCA  C02F  FFE8         	movff	_config+17,wreg
  3388  001DCE  EC7B  F039         	call	_ConfigFloppy
  3389                           ;menu.c: 642: }
  3390  001DD2  D049               	goto	l140
  3391  001DD4                     l141:
  3392                           ;menu.c: 643: else if (1 == menusub)
  3393  001DD4  C364  F000         	movff	_menusub,btemp
  3394  001DD8  0400               	decf	btemp,w,c
  3395  001DDA  E10E               	bnz	l144
  3396                           ;menu.c: 644: {
  3397  001DDC  0100               	movlb	(_config+16) shr (0+8)
  3398  001DDE  2B2E               	incf	(_config+16)& (0+255),f,b
  3399                           ;menu.c: 646: config.floppy_speed &= 0x01;
  3400  001DE0  0E01               	movlw	1
  3401  001DE2  172E               	andwf	(_config+16)& (0+255),f,b
  3402                           ;menu.c: 647: menustate = MENU_SETTINGS_DRIVES1;
  3403  001DE4  0E15               	movlw	21
  3404  001DE6  CFE8 F357          	movff	wreg,_menustate
  3405                           ;menu.c: 648: ConfigFloppy(config.floppy_drives,
      +                           config.floppy_speed);
  3406  001DEA  C02E  F046         	movff	_config+16,?_ConfigFloppy
  3407  001DEE  C02F  FFE8         	movff	_config+17,wreg
  3408  001DF2  EC7B  F039         	call	_ConfigFloppy
  3409                           ;menu.c: 649: }
  3410  001DF6  D037               	goto	l140
  3411  001DF8                     l144:
  3412                           ;menu.c: 650: else if (2 == menusub)
  3413  001DF8  C364  FFE8         	movff	_menusub,wreg
  3414  001DFC  0A02               	xorlw	2
  3415  001DFE  E11B               	bnz	l146
  3416                           ;menu.c: 651: {
  3417  001E00  0100               	movlb	(_config+20) shr (0+8)
  3418  001E02  0E01               	movlw	1
  3419  001E04  1B32               	xorwf	(_config+20)& (0+255),f,b
  3420                           ;menu.c: 653: menustate = MENU_SETTINGS_DRIVES1;
  3421  001E06  0E15               	movlw	21
  3422  001E08  CFE8 F357          	movff	wreg,_menustate
  3423                           ;menu.c: 654: ConfigIDE(config.ide, hdf[0].prese
      +                          nt & hdf[0].enabled, hdf[1].present & hdf[1].ena
      +                          bled);
  3424  001E0C  C320  FFE8         	movff	_hdf+32,wreg
  3425  001E10  0103               	movlb	(_hdf+31) shr (0+8)
  3426  001E12  151F               	andwf	(_hdf+31)& (0+255),w,b
  3427  001E14  0100               	movlb	__Lparam shr (0+8)
  3428  001E16  6F46               	movwf	?_ConfigIDE^(__Lparam& (0+65280)),b
  3429  001E18  EE03  F047         	lfsr	0,_hdf+71
  3430  001E1C  50EF               	movf	indf0,w,c
  3431  001E1E  6E01               	movwf	btemp+1,c
  3432  001E20  EE03  F046         	lfsr	0,_hdf+70
  3433  001E24  50EF               	movf	indf0,w,c
  3434  001E26  6E00               	movwf	btemp,c
  3435  001E28  1401               	andwf	btemp+1,w,c
  3436  001E2A  6F47               	movwf	(?_ConfigIDE+1)^(__Lparam& (0+65280)),b
  3437  001E2C  C032  FFE8         	movff	_config+20,wreg
  3438  001E30  EC9D  F039         	call	_ConfigIDE
  3439                           ;menu.c: 655: }
  3440  001E34  D018               	goto	l140
  3441  001E36                     l146:
  3442                           ;menu.c: 656: else if (3 == menusub)
  3443  001E36  C364  FFE8         	movff	_menusub,wreg
  3444  001E3A  0A03               	xorlw	3
  3445  001E3C  E108               	bnz	l148
  3446                           ;menu.c: 657: {
  3447  001E3E  0E18               	movlw	24
  3448  001E40  CFE8 F357          	movff	wreg,_menustate
  3449                           ;menu.c: 659: menusub = 0;
  3450  001E44  0103               	movlb	_menusub shr (0+8)
  3451  001E46  6B64               	clrf	_menusub& (0+255),b
  3452                           ;menu.c: 660: OsdClear();
  3453  001E48  EC20  F039         	call	_OsdClear	;wreg free
  3454                           ;menu.c: 661: }
  3455  001E4C  D00C               	goto	l140
  3456  001E4E                     l148:
  3457                           ;menu.c: 662: else if (4 == menusub)
  3458  001E4E  C364  FFE8         	movff	_menusub,wreg
  3459  001E52  0A04               	xorlw	4
  3460  001E54  E108               	bnz	l140
  3461                           ;menu.c: 663: {
  3462  001E56  0E0B               	movlw	11
  3463  001E58  CFE8 F357          	movff	wreg,_menustate
  3464                           ;menu.c: 665: menusub = 2;
  3465  001E5C  0E02               	movlw	2
  3466  001E5E  CFE8 F364          	movff	wreg,_menusub
  3467                           ;menu.c: 666: OsdClear();
  3468  001E62  EC20  F039         	call	_OsdClear	;wreg free
  3469  001E66                     l140:
  3470                           ;menu.c: 667: }
  3471  001E66  A40D               	btfss	_menu/(0+8),_menu& (0+7),c
  3472  001E68  D009               	goto	l151
  3473                           ;menu.c: 671: {
  3474  001E6A  0E0B               	movlw	11
  3475  001E6C  CFE8 F357          	movff	wreg,_menustate
  3476                           ;menu.c: 673: menusub = 2;
  3477  001E70  0E02               	movlw	2
  3478  001E72  CFE8 F364          	movff	wreg,_menusub
  3479                           ;menu.c: 674: OsdClear();
  3480  001E76  EC20  F039         	call	_OsdClear	;wreg free
  3481                           ;menu.c: 675: }
  3482  001E7A  D335               	goto	l26
  3483  001E7C                     l151:
  3484                           ;menu.c: 676: else if (right)
  3485  001E7C  A60D               	btfss	_right/(0+8),_right& (0+7),c
  3486  001E7E  D008               	goto	l153
  3487                           ;menu.c: 677: {
  3488  001E80  0E0F               	movlw	15
  3489  001E82  CFE8 F357          	movff	wreg,_menustate
  3490                           ;menu.c: 679: menusub = 0;
  3491  001E86  0103               	movlb	_menusub shr (0+8)
  3492  001E88  6B64               	clrf	_menusub& (0+255),b
  3493                           ;menu.c: 680: OsdClear();
  3494  001E8A  EC20  F039         	call	_OsdClear	;wreg free
  3495                           ;menu.c: 681: }
  3496  001E8E  D32B               	goto	l26
  3497  001E90                     l153:
  3498                           ;menu.c: 682: else if (left)
  3499  001E90  A20D               	btfss	_left/(0+8),_left& (0+7),c
  3500  001E92  D329               	goto	l26
  3501                           ;menu.c: 683: {
  3502  001E94  0E11               	movlw	17
  3503  001E96  CFE8 F357          	movff	wreg,_menustate
  3504                           ;menu.c: 685: menusub = 0;
  3505  001E9A  0103               	movlb	_menusub shr (0+8)
  3506  001E9C  6B64               	clrf	_menusub& (0+255),b
  3507                           ;menu.c: 686: OsdClear();
  3508  001E9E  EC20  F039         	call	_OsdClear	;wreg free
  3509                           ;menu.c: 687: }
  3510  001EA2  D321               	goto	l26
  3511  001EA4                     l156:
  3512                           ;menu.c: 694: case MENU_SETTINGS_HARDFILE1:
  3513                           ;menu.c: 695: OsdWrite(0, "   -= HARDFILES =-", 
      +                          0);
  3514  001EA4  0100               	movlb	__Lparam shr (0+8)
  3515  001EA6  0EA8               	movlw	low u689
  3516  001EA8  6F5D               	movwf	?_OsdWrite^(__Lparam& (0+65280)),b
  3517  001EAA  0E0A               	movlw	high u689
  3518  001EAC  6F5E               	movwf	(?_OsdWrite+1)^(__Lparam& (0+65280)),b
  3519  001EAE  6B5F               	clrf	(?_OsdWrite+2)^(__Lparam& (0+65280)),b
  3520  001EB0  0E00               	movlw	0
  3521  001EB2  ECE8  F037         	call	_OsdWrite
  3522                           ;menu.c: 698: for(i=0; i < 2; i++)
  3523  001EB6  0100               	movlb	__Lparam shr (0+8)
  3524  001EB8  6B41               	clrf	(?a_HandleUI+1)^(__Lparam& (0+65280)),b
  3525  001EBA                     l157:
  3526                           ;menu.c: 699: {
  3527  001EBA  0100               	movlb	__Lparam shr (0+8)
  3528  001EBC  0E65               	movlw	low _s
  3529  001EBE  6F46               	movwf	?_strcpy^(__Lparam& (0+65280)),b
  3530  001EC0  0E03               	movlw	high _s
  3531  001EC2  6F47               	movwf	(?_strcpy+1)^(__Lparam& (0+65280)),b
  3532  001EC4  5141               	movf	(?a_HandleUI+1)^(__Lparam& (0+65280)),w
  3533  001EC6  E104               	bnz	u1066
  3534  001EC8  0E21               	movlw	low u709
  3535  001ECA  6E00               	movwf	btemp,c
  3536  001ECC  0E0B               	movlw	high u709
  3537  001ECE  D003               	goto	L12
  3538  001ED0                     u1066:
  3539  001ED0  0E4D               	movlw	low u699
  3540  001ED2  6E00               	movwf	btemp,c
  3541  001ED4  0E0B               	movlw	high u699
  3542  001ED6                     L12:
  3543  001ED6  6E01               	movwf	btemp+1,c
  3544  001ED8  C000  F048         	movff	btemp,?_strcpy+2
  3545  001EDC  C001  F049         	movff	btemp+1,?_strcpy+3
  3546  001EE0  EC29  F03E         	call	_strcpy	;wreg free
  3547                           ;menu.c: 701: strcat(s, hdf[i].present ? (hdf[i]
      +                          .enabled ? "enabled" : "disabled") : "n/a");
  3548  001EE4  0100               	movlb	__Lparam shr (0+8)
  3549  001EE6  0E65               	movlw	low _s
  3550  001EE8  6F46               	movwf	?_strcat^(__Lparam& (0+65280)),b
  3551  001EEA  0E03               	movlw	high _s
  3552  001EEC  6F47               	movwf	(?_strcat+1)^(__Lparam& (0+65280)),b
  3553  001EEE  5141               	movf	(?a_HandleUI+1)^(__Lparam& (0+65280)),w
  3554  001EF0  0D27               	mullw	39
  3555  001EF2  0E1F               	movlw	low (_hdf+31)
  3556  001EF4  24F3               	addwf	prodl,w,c
  3557  001EF6  6EE9               	movwf	fsr0l,c
  3558  001EF8  0E03               	movlw	high (_hdf+31)
  3559  001EFA  20F4               	addwfc	prodh,w,c
  3560  001EFC  6EEA               	movwf	fsr0h,c
  3561  001EFE  50EF               	movf	indf0,w,c
  3562  001F00  E104               	bnz	u1086
  3563  001F02  0E52               	movlw	low u739
  3564  001F04  6E00               	movwf	btemp,c
  3565  001F06  0E0A               	movlw	high u739
  3566  001F08  D011               	goto	L15
  3567  001F0A                     u1086:
  3568  001F0A  5141               	movf	(?a_HandleUI+1)^(__Lparam& (0+65280)),w
  3569  001F0C  0D27               	mullw	39
  3570  001F0E  0E20               	movlw	low (_hdf+32)
  3571  001F10  24F3               	addwf	prodl,w,c
  3572  001F12  6EE9               	movwf	fsr0l,c
  3573  001F14  0E03               	movlw	high (_hdf+32)
  3574  001F16  20F4               	addwfc	prodh,w,c
  3575  001F18  6EEA               	movwf	fsr0h,c
  3576  001F1A  50EF               	movf	indf0,w,c
  3577  001F1C  E104               	bnz	u1106
  3578  001F1E  0E13               	movlw	low u729
  3579  001F20  6E00               	movwf	btemp,c
  3580  001F22  0E0A               	movlw	high u729
  3581  001F24  D003               	goto	L15
  3582  001F26                     u1106:
  3583  001F26  0E1C               	movlw	low u719
  3584  001F28  6E00               	movwf	btemp,c
  3585  001F2A  0E0A               	movlw	high u719
  3586  001F2C                     L15:
  3587  001F2C  6E01               	movwf	btemp+1,c
  3588  001F2E  C000  F048         	movff	btemp,?_strcat+2
  3589  001F32  C001  F049         	movff	btemp+1,?_strcat+3
  3590  001F36  ECFC  F03D         	call	_strcat	;wreg free
  3591                           ;menu.c: 702: OsdWrite(2+(i*2), s, menusub == (0
      +                           + (i*2)));
  3592  001F3A  0100               	movlb	__Lparam shr (0+8)
  3593  001F3C  0E65               	movlw	low _s
  3594  001F3E  6F5D               	movwf	?_OsdWrite^(__Lparam& (0+65280)),b
  3595  001F40  0E03               	movlw	high _s
  3596  001F42  6F5E               	movwf	(?_OsdWrite+1)^(__Lparam& (0+65280)),b
  3597  001F44  5141               	movf	(?a_HandleUI+1)^(__Lparam& (0+65280)),w
  3598  001F46  0D02               	mullw	2
  3599  001F48  C364  FFE8         	movff	_menusub,wreg
  3600  001F4C  18F3               	xorwf	prodl,w,c
  3601  001F4E  E101               	bnz	u1115
  3602  001F50  52F4               	movf	prodh,f,c
  3603  001F52                     u1115:
  3604  001F52  0E00               	movlw	0
  3605  001F54  B4D8               	btfsc	status,2,c
  3606  001F56  0E01               	movlw	1
  3607  001F58  6F5F               	movwf	(?_OsdWrite+2)^(__Lparam& (0+65280)),b
  3608  001F5A  5141               	movf	(?a_HandleUI+1)^(__Lparam& (0+65280)),w
  3609  001F5C  2541               	addwf	(?a_HandleUI+1)^(__Lparam& (0+65280)),w
  3610  001F5E  0F02               	addlw	2
  3611  001F60  ECE8  F037         	call	_OsdWrite
  3612                           ;menu.c: 703: if (hdf[i].present)
  3613  001F64  0100               	movlb	__Lparam shr (0+8)
  3614  001F66  5141               	movf	(?a_HandleUI+1)^(__Lparam& (0+65280)),w
  3615  001F68  0D27               	mullw	39
  3616  001F6A  0E1F               	movlw	low (_hdf+31)
  3617  001F6C  24F3               	addwf	prodl,w,c
  3618  001F6E  6EE9               	movwf	fsr0l,c
  3619  001F70  0E03               	movlw	high (_hdf+31)
  3620  001F72  20F4               	addwfc	prodh,w,c
  3621  001F74  6EEA               	movwf	fsr0h,c
  3622  001F76  50EF               	movf	indf0,w,c
  3623  001F78  E029               	bz	l160
  3624                           ;menu.c: 704: { sprintf(s,"         %.8s.%.3s", 
      +                          hdf[i].file.name, &hdf[i].file.name[8]); }
  3625  001F7A  0E65               	movlw	low _s
  3626  001F7C  6F53               	movwf	(?_sprintf+2)^(__Lparam& (0+65280)),b
  3627  001F7E  0E03               	movlw	high _s
  3628  001F80  6F54               	movwf	(?_sprintf+3)^(__Lparam& (0+65280)),b
  3629  001F82  0EBD               	movlw	low u749
  3630  001F84  6F55               	movwf	(?_sprintf+4)^(__Lparam& (0+65280)),b
  3631  001F86  0E09               	movlw	high u749
  3632  001F88  6F56               	movwf	(?_sprintf+5)^(__Lparam& (0+65280)),b
  3633  001F8A  5141               	movf	(?a_HandleUI+1)^(__Lparam& (0+65280)),w
  3634  001F8C  0D27               	mullw	39
  3635  001F8E  0E08               	movlw	low (_hdf+8)
  3636  001F90  24F3               	addwf	prodl,w,c
  3637  001F92  6E00               	movwf	btemp,c
  3638  001F94  0E03               	movlw	high (_hdf+8)
  3639  001F96  20F4               	addwfc	prodh,w,c
  3640  001F98  6E01               	movwf	btemp+1,c
  3641  001F9A  C000  F044         	movff	btemp,?a_HandleUI+4
  3642  001F9E  C001  F045         	movff	btemp+1,?a_HandleUI+5
  3643  001FA2  5141               	movf	(?a_HandleUI+1)^(__Lparam& (0+65280)),w
  3644  001FA4  0D27               	mullw	39
  3645  001FA6  0E00               	movlw	low _hdf
  3646  001FA8  24F3               	addwf	prodl,w,c
  3647  001FAA  6E00               	movwf	btemp,c
  3648  001FAC  0E03               	movlw	high _hdf
  3649  001FAE  20F4               	addwfc	prodh,w,c
  3650  001FB0  6E01               	movwf	btemp+1,c
  3651  001FB2  C000  F042         	movff	btemp,?a_HandleUI+2
  3652  001FB6  C001  F043         	movff	btemp+1,?a_HandleUI+3
  3653  001FBA  0E42               	movlw	low (?a_HandleUI+2)
  3654  001FBC  CFE8 F051          	movff	wreg,?_sprintf
  3655  001FC0  0E00               	movlw	high (?a_HandleUI+2)
  3656  001FC2  CFE8 F052          	movff	wreg,?_sprintf+1
  3657  001FC6  EC2F  F032         	call	_sprintf	;wreg free
  3658  001FCA  D00B               	goto	l161
  3659  001FCC                     l160:
  3660                           ;menu.c: 705: else
  3661  001FCC  0100               	movlb	__Lparam shr (0+8)
  3662  001FCE  0E65               	movlw	low _s
  3663  001FD0  6F46               	movwf	?_strcpy^(__Lparam& (0+65280)),b
  3664  001FD2  0E03               	movlw	high _s
  3665  001FD4  6F47               	movwf	(?_strcpy+1)^(__Lparam& (0+65280)),b
  3666  001FD6  0E00               	movlw	low u759
  3667  001FD8  6F48               	movwf	(?_strcpy+2)^(__Lparam& (0+65280)),b
  3668  001FDA  0E0A               	movlw	high u759
  3669  001FDC  6F49               	movwf	(?_strcpy+3)^(__Lparam& (0+65280)),b
  3670  001FDE  EC29  F03E         	call	_strcpy	;wreg free
  3671  001FE2                     l161:
  3672                           ;menu.c: 707: OsdWrite(3+(i*2), s, menusub == (1
      +                           + (i*2)));
  3673  001FE2  0100               	movlb	__Lparam shr (0+8)
  3674  001FE4  0E65               	movlw	low _s
  3675  001FE6  6F5D               	movwf	?_OsdWrite^(__Lparam& (0+65280)),b
  3676  001FE8  0E03               	movlw	high _s
  3677  001FEA  6F5E               	movwf	(?_OsdWrite+1)^(__Lparam& (0+65280)),b
  3678  001FEC  C364  F000         	movff	_menusub,btemp
  3679  001FF0  6A01               	clrf	btemp+1,c
  3680  001FF2  0E01               	movlw	1
  3681  001FF4  C041  F002         	movff	?a_HandleUI+1,btemp+2
  3682  001FF8  6A03               	clrf	btemp+3,c
  3683  001FFA  90D8               	bcf	status,0,c
  3684  001FFC  3602               	rlcf	btemp+2,f,c
  3685  001FFE  3603               	rlcf	btemp+3,f,c
  3686  002000  2602               	addwf	btemp+2,f,c
  3687  002002  0E00               	movlw	0
  3688  002004  2203               	addwfc	btemp+3,f,c
  3689  002006  5001               	movf	btemp+1,w,c
  3690  002008  1803               	xorwf	btemp+3,w,c
  3691  00200A  E102               	bnz	u1135
  3692  00200C  5000               	movf	btemp,w,c
  3693  00200E  1802               	xorwf	btemp+2,w,c
  3694  002010                     u1135:
  3695  002010  0E00               	movlw	0
  3696  002012  B4D8               	btfsc	status,2,c
  3697  002014  0E01               	movlw	1
  3698  002016  6F5F               	movwf	(?_OsdWrite+2)^(__Lparam& (0+65280)),b
  3699  002018  5141               	movf	(?a_HandleUI+1)^(__Lparam& (0+65280)),w
  3700  00201A  2541               	addwf	(?a_HandleUI+1)^(__Lparam& (0+65280)),w
  3701  00201C  0F03               	addlw	3
  3702  00201E  ECE8  F037         	call	_OsdWrite
  3703  002022  0100               	movlb	__Lparam shr (0+8)
  3704  002024  2B41               	incf	(?a_HandleUI+1)^(__Lparam& (0+65280)),f,b
  3705  002026  0E01               	movlw	1
  3706  002028  6541               	cpfsgt	(?a_HandleUI+1)^(__Lparam& (0+65280)),b
  3707  00202A  D747               	goto	l157
  3708                           ;menu.c: 708: }
  3709  00202C  0E6D               	movlw	low u769
  3710  00202E  6F5D               	movwf	?_OsdWrite^(__Lparam& (0+65280)),b
  3711  002030  0E09               	movlw	high u769
  3712  002032  6F5E               	movwf	(?_OsdWrite+1)^(__Lparam& (0+65280)),b
  3713  002034  C364  FFE8         	movff	_menusub,wreg
  3714  002038  0A04               	xorlw	4
  3715  00203A  0E00               	movlw	0
  3716  00203C  B4D8               	btfsc	status,2,c
  3717  00203E  0E01               	movlw	1
  3718  002040  6F5F               	movwf	(?_OsdWrite+2)^(__Lparam& (0+65280)),b
  3719  002042  0E07               	movlw	7
  3720  002044  ECE8  F037         	call	_OsdWrite
  3721                           ;menu.c: 712: menustate = MENU_SETTINGS_HARDFILE
      +                          2;
  3722  002048  0E19               	movlw	25
  3723  00204A  EF1D  F009         	goto	L4
  3724                           ;menu.c: 713: break;
  3725  00204E                     l162:
  3726                           ;menu.c: 715: case MENU_SETTINGS_HARDFILE2:
  3727                           ;menu.c: 716: HandleUpDown(MENU_SETTINGS_HARDFIL
      +                          E1, 4);
  3728  00204E  0E04               	movlw	4
  3729  002050  0100               	movlb	__Lparam shr (0+8)
  3730  002052  6F46               	movwf	?_HandleUpDown^(__Lparam& (0+65280)),b
  3731  002054  0E18               	movlw	24
  3732  002056  DA4C               	call	_HandleUpDown
  3733                           ;menu.c: 718: if (select)
  3734  002058  A80D               	btfss	_select/(0+8),_select& (0+7),c
  3735  00205A  D046               	goto	l163
  3736                           ;menu.c: 719: {
  3737  00205C  0103               	movlb	_menusub shr (0+8)
  3738  00205E  5364               	movf	_menusub& (0+255),f,b
  3739  002060  E10D               	bnz	l164
  3740                           ;menu.c: 721: {
  3741  002062  EE03  F01F         	lfsr	0,_hdf+31
  3742  002066  50EF               	movf	indf0,w,c
  3743  002068  E03F               	bz	l163
  3744                           ;menu.c: 723: {
  3745  00206A  0103               	movlb	(_hdf+32) shr (0+8)
  3746  00206C  0E01               	movlw	1
  3747  00206E  1B20               	xorwf	(_hdf+32)& (0+255),f,b
  3748                           ;menu.c: 725: menustate = MENU_HARDFILE_SELECTED
      +                          ;
  3749  002070  0E1A               	movlw	26
  3750  002072  CFE8 F357          	movff	wreg,_menustate
  3751                           ;menu.c: 726: OsdClear();
  3752  002076  EC20  F039         	call	_OsdClear	;wreg free
  3753                           ;menu.c: 727: }
  3754  00207A  D036               	goto	l163
  3755  00207C                     l164:
  3756                           ;menu.c: 729: else if (2 == menusub)
  3757  00207C  C364  FFE8         	movff	_menusub,wreg
  3758  002080  0A02               	xorlw	2
  3759  002082  E10E               	bnz	l167
  3760                           ;menu.c: 730: {
  3761  002084  EE03  F046         	lfsr	0,_hdf+70
  3762  002088  50EF               	movf	indf0,w,c
  3763  00208A  E02E               	bz	l163
  3764                           ;menu.c: 732: {
  3765  00208C  EE03  F047         	lfsr	0,_hdf+71
  3766  002090  0E01               	movlw	1
  3767  002092  1AEF               	xorwf	indf0,f,c
  3768                           ;menu.c: 734: menustate = MENU_HARDFILE_SELECTED
      +                          ;
  3769  002094  0E1A               	movlw	26
  3770  002096  CFE8 F357          	movff	wreg,_menustate
  3771                           ;menu.c: 735: OsdClear();
  3772  00209A  EC20  F039         	call	_OsdClear	;wreg free
  3773                           ;menu.c: 736: }
  3774  00209E  D024               	goto	l163
  3775  0020A0                     l167:
  3776                           ;menu.c: 738: else if ((1 == menusub) || (3 == m
      +                          enusub))
  3777  0020A0  C364  F000         	movff	_menusub,btemp
  3778  0020A4  0400               	decf	btemp,w,c
  3779  0020A6  E004               	bz	u1220
  3780  0020A8  C364  FFE8         	movff	_menusub,wreg
  3781  0020AC  0A03               	xorlw	3
  3782  0020AE  E113               	bnz	l170
  3783  0020B0                     u1220:
  3784                           ;menu.c: 739: {
  3785  0020B0  0100               	movlb	__Lparam shr (0+8)
  3786  0020B2  0E7F               	movlw	low _currentDir
  3787  0020B4  6F48               	movwf	?_OpenRootDirectory^(__Lparam& (0+65280))
      +                          ,b
  3788  0020B6  0E02               	movlw	high _currentDir
  3789  0020B8  6F49               	movwf	(?_OpenRootDirectory+1)^(__Lparam& (0+652
      +                          80)),b
  3790  0020BA  EC2A  F015         	call	_OpenRootDirectory	;wreg free
  3791                           ;menu.c: 742: SelectFile(defHardDiskExt, MENU_HA
      +                          RDFILE_SELECTED, MENU_SETTINGS_HARDFILE1, 0);
  3792  0020BE  0100               	movlb	__Lparam shr (0+8)
  3793  0020C0  0E0E               	movlw	low _defHardDiskExt
  3794  0020C2  6F46               	movwf	?_SelectFile^(__Lparam& (0+65280)),b
  3795  0020C4  0E0F               	movlw	high _defHardDiskExt
  3796  0020C6  6F47               	movwf	(?_SelectFile+1)^(__Lparam& (0+65280)),b
  3797  0020C8  0E1A               	movlw	26
  3798  0020CA  6F48               	movwf	(?_SelectFile+2)^(__Lparam& (0+65280)),b
  3799  0020CC  0E18               	movlw	24
  3800  0020CE  6F49               	movwf	(?_SelectFile+3)^(__Lparam& (0+65280)),b
  3801  0020D0  6B4A               	clrf	(?_SelectFile+4)^(__Lparam& (0+65280)),b
  3802  0020D2  DA28               	call	_SelectFile	;wreg free
  3803                           ;menu.c: 743: }
  3804  0020D4  D009               	goto	l163
  3805  0020D6                     l170:
  3806                           ;menu.c: 744: else if (4 == menusub)
  3807  0020D6  C364  FFE8         	movff	_menusub,wreg
  3808  0020DA  0A04               	xorlw	4
  3809  0020DC  E105               	bnz	l163
  3810                           ;menu.c: 745: {
  3811  0020DE  0E15               	movlw	21
  3812  0020E0  CFE8 F357          	movff	wreg,_menustate
  3813                           ;menu.c: 747: OsdClear();
  3814  0020E4  EC20  F039         	call	_OsdClear	;wreg free
  3815  0020E8                     l163:
  3816                           ;menu.c: 748: }
  3817  0020E8  A40D               	btfss	_menu/(0+8),_menu& (0+7),c
  3818  0020EA  D1FD               	goto	l26
  3819                           ;menu.c: 752: {
  3820  0020EC  0E15               	movlw	21
  3821  0020EE  CFE8 F357          	movff	wreg,_menustate
  3822                           ;menu.c: 754: OsdClear();
  3823  0020F2  EC20  F039         	call	_OsdClear	;wreg free
  3824                           ;menu.c: 755: }
  3825  0020F6  D1F7               	goto	l26
  3826  0020F8                     l174:
  3827                           ;menu.c: 761: case MENU_HARDFILE_SELECTED:
  3828                           ;menu.c: 763: if(1 == menusub)
  3829  0020F8  C364  F000         	movff	_menusub,btemp
  3830  0020FC  0400               	decf	btemp,w,c
  3831  0020FE  E108               	bnz	l175
  3832                           ;menu.c: 764: { OpenHardfile(0, file.name); }
  3833  002100  0100               	movlb	__Lparam shr (0+8)
  3834  002102  0E9E               	movlw	low _file
  3835  002104  6F46               	movwf	?_OpenHardfile^(__Lparam& (0+65280)),b
  3836  002106  0E02               	movlw	high _file
  3837  002108  6F47               	movwf	(?_OpenHardfile+1)^(__Lparam& (0+65280)),
      +                          b
  3838  00210A  0E00               	movlw	0
  3839  00210C  ECF4  F02D         	call	_OpenHardfile
  3840  002110                     l175:
  3841                           ;menu.c: 767: if (3 == menusub)
  3842  002110  C364  FFE8         	movff	_menusub,wreg
  3843  002114  0A03               	xorlw	3
  3844  002116  E108               	bnz	l176
  3845                           ;menu.c: 768: { OpenHardfile(1, file.name); }
  3846  002118  0100               	movlb	__Lparam shr (0+8)
  3847  00211A  0E9E               	movlw	low _file
  3848  00211C  6F46               	movwf	?_OpenHardfile^(__Lparam& (0+65280)),b
  3849  00211E  0E02               	movlw	high _file
  3850  002120  6F47               	movwf	(?_OpenHardfile+1)^(__Lparam& (0+65280)),
      +                          b
  3851  002122  0E01               	movlw	1
  3852  002124  ECF4  F02D         	call	_OpenHardfile
  3853  002128                     l176:
  3854                           ;menu.c: 771: ConfigIDE(config.ide, hdf[0].prese
      +                          nt & hdf[0].enabled, hdf[1].present & hdf[1].ena
      +                          bled);
  3855  002128  C320  FFE8         	movff	_hdf+32,wreg
  3856  00212C  0103               	movlb	(_hdf+31) shr (0+8)
  3857  00212E  151F               	andwf	(_hdf+31)& (0+255),w,b
  3858  002130  0100               	movlb	__Lparam shr (0+8)
  3859  002132  6F46               	movwf	?_ConfigIDE^(__Lparam& (0+65280)),b
  3860  002134  EE03  F047         	lfsr	0,_hdf+71
  3861  002138  50EF               	movf	indf0,w,c
  3862  00213A  6E01               	movwf	btemp+1,c
  3863  00213C  EE03  F046         	lfsr	0,_hdf+70
  3864  002140  50EF               	movf	indf0,w,c
  3865  002142  6E00               	movwf	btemp,c
  3866  002144  1401               	andwf	btemp+1,w,c
  3867  002146  6F47               	movwf	(?_ConfigIDE+1)^(__Lparam& (0+65280)),b
  3868  002148  C032  FFE8         	movff	_config+20,wreg
  3869  00214C  EC9D  F039         	call	_ConfigIDE
  3870                           ;menu.c: 774: menustate = MENU_SETTINGS_HARDFILE
      +                          1;
  3871  002150  0E18               	movlw	24
  3872  002152  EF1D  F009         	goto	L4
  3873                           ;menu.c: 775: break;
  3874  002156                     l177:
  3875                           ;menu.c: 780: case MENU_SETTINGS_VIDEO1 :
  3876                           ;menu.c: 781: OsdWrite(0, " \x1B   -= VIDEO =-  
      +                           \x1A", 0);
  3877  002156  0100               	movlb	__Lparam shr (0+8)
  3878  002158  0E4F               	movlw	low u779
  3879  00215A  6F5D               	movwf	?_OsdWrite^(__Lparam& (0+65280)),b
  3880  00215C  0E0C               	movlw	high u779
  3881  00215E  6F5E               	movwf	(?_OsdWrite+1)^(__Lparam& (0+65280)),b
  3882  002160  6B5F               	clrf	(?_OsdWrite+2)^(__Lparam& (0+65280)),b
  3883  002162  0E00               	movlw	0
  3884  002164  ECE8  F037         	call	_OsdWrite
  3885                           ;menu.c: 783: strcpy(s, "  Lores Filter: ");
  3886  002168  0100               	movlb	__Lparam shr (0+8)
  3887  00216A  0E65               	movlw	low _s
  3888  00216C  6F46               	movwf	?_strcpy^(__Lparam& (0+65280)),b
  3889  00216E  0E03               	movlw	high _s
  3890  002170  6F47               	movwf	(?_strcpy+1)^(__Lparam& (0+65280)),b
  3891  002172  0E2B               	movlw	low u789
  3892  002174  6F48               	movwf	(?_strcpy+2)^(__Lparam& (0+65280)),b
  3893  002176  0E0B               	movlw	high u789
  3894  002178  6F49               	movwf	(?_strcpy+3)^(__Lparam& (0+65280)),b
  3895  00217A  EC29  F03E         	call	_strcpy	;wreg free
  3896                           ;menu.c: 784: strcpy( &s[16], config_filter_msg[
      +                          config.filter_lores]);
  3897  00217E  0100               	movlb	__Lparam shr (0+8)
  3898  002180  0E75               	movlw	low (_s+16)
  3899  002182  6F46               	movwf	?_strcpy^(__Lparam& (0+65280)),b
  3900  002184  0E03               	movlw	high (_s+16)
  3901  002186  6F47               	movwf	(?_strcpy+1)^(__Lparam& (0+65280)),b
  3902  002188  C02A  FFE8         	movff	_config+12,wreg
  3903  00218C  0D02               	mullw	2
  3904  00218E  50F3               	movf	prodl,w,c
  3905  002190  0F00               	addlw	low _config_filter_msg
  3906  002192  6EF6               	movwf	tblptrl,c
  3907  002194  50F4               	movf	prodh,w,c
  3908  002196  6EF7               	movwf	tblptrh,c
  3909  002198  0E09               	movlw	high _config_filter_msg
  3910  00219A  22F7               	addwfc	tblptrh,f,c
  3911  00219C  0009               	tblrd		*+
  3912  00219E  FFFF               	dw	65535	; Nop inserted for errata
  3913  0021A0  CFF5 F048          	movff	tablat,?_strcpy+2
  3914  0021A4  0009               	tblrd		*+
  3915  0021A6  FFFF               	dw	65535	; Nop inserted for errata
  3916  0021A8  CFF5 F049          	movff	tablat,?_strcpy+3
  3917  0021AC  EC29  F03E         	call	_strcpy	;wreg free
  3918                           ;menu.c: 785: OsdWrite(2, s, 0 == menusub);
  3919  0021B0  0100               	movlb	__Lparam shr (0+8)
  3920  0021B2  0E65               	movlw	low _s
  3921  0021B4  6F5D               	movwf	?_OsdWrite^(__Lparam& (0+65280)),b
  3922  0021B6  0E03               	movlw	high _s
  3923  0021B8  6F5E               	movwf	(?_OsdWrite+1)^(__Lparam& (0+65280)),b
  3924  0021BA  0103               	movlb	_menusub shr (0+8)
  3925  0021BC  5364               	movf	_menusub& (0+255),f,b
  3926  0021BE  0E00               	movlw	0
  3927  0021C0  B4D8               	btfsc	status,2,c
  3928  0021C2  0E01               	movlw	1
  3929  0021C4  0100               	movlb	__Lparam shr (0+8)
  3930  0021C6  6F5F               	movwf	(?_OsdWrite+2)^(__Lparam& (0+65280)),b
  3931  0021C8  0E02               	movlw	2
  3932  0021CA  ECE8  F037         	call	_OsdWrite
  3933                           ;menu.c: 787: strcpy(s, "  Hires Filter: ");
  3934  0021CE  0100               	movlb	__Lparam shr (0+8)
  3935  0021D0  0E65               	movlw	low _s
  3936  0021D2  6F46               	movwf	?_strcpy^(__Lparam& (0+65280)),b
  3937  0021D4  0E03               	movlw	high _s
  3938  0021D6  6F47               	movwf	(?_strcpy+1)^(__Lparam& (0+65280)),b
  3939  0021D8  0E3C               	movlw	low u799
  3940  0021DA  6F48               	movwf	(?_strcpy+2)^(__Lparam& (0+65280)),b
  3941  0021DC  0E0B               	movlw	high u799
  3942  0021DE  6F49               	movwf	(?_strcpy+3)^(__Lparam& (0+65280)),b
  3943  0021E0  EC29  F03E         	call	_strcpy	;wreg free
  3944                           ;menu.c: 788: strcpy( &s[16], config_filter_msg[
      +                          config.filter_hires]);
  3945  0021E4  0100               	movlb	__Lparam shr (0+8)
  3946  0021E6  0E75               	movlw	low (_s+16)
  3947  0021E8  6F46               	movwf	?_strcpy^(__Lparam& (0+65280)),b
  3948  0021EA  0E03               	movlw	high (_s+16)
  3949  0021EC  6F47               	movwf	(?_strcpy+1)^(__Lparam& (0+65280)),b
  3950  0021EE  C02B  FFE8         	movff	_config+13,wreg
  3951  0021F2  0D02               	mullw	2
  3952  0021F4  50F3               	movf	prodl,w,c
  3953  0021F6  0F00               	addlw	low _config_filter_msg
  3954  0021F8  6EF6               	movwf	tblptrl,c
  3955  0021FA  50F4               	movf	prodh,w,c
  3956  0021FC  6EF7               	movwf	tblptrh,c
  3957  0021FE  0E09               	movlw	high _config_filter_msg
  3958  002200  22F7               	addwfc	tblptrh,f,c
  3959  002202  0009               	tblrd		*+
  3960  002204  FFFF               	dw	65535	; Nop inserted for errata
  3961  002206  CFF5 F048          	movff	tablat,?_strcpy+2
  3962  00220A  0009               	tblrd		*+
  3963  00220C  FFFF               	dw	65535	; Nop inserted for errata
  3964  00220E  CFF5 F049          	movff	tablat,?_strcpy+3
  3965  002212  EC29  F03E         	call	_strcpy	;wreg free
  3966                           ;menu.c: 789: OsdWrite(3, s, 1 == menusub);
  3967  002216  0100               	movlb	__Lparam shr (0+8)
  3968  002218  0E65               	movlw	low _s
  3969  00221A  6F5D               	movwf	?_OsdWrite^(__Lparam& (0+65280)),b
  3970  00221C  0E03               	movlw	high _s
  3971  00221E  6F5E               	movwf	(?_OsdWrite+1)^(__Lparam& (0+65280)),b
  3972  002220  C364  F000         	movff	_menusub,btemp
  3973  002224  0400               	decf	btemp,w,c
  3974  002226  0E00               	movlw	0
  3975  002228  B4D8               	btfsc	status,2,c
  3976  00222A  0E01               	movlw	1
  3977  00222C  6F5F               	movwf	(?_OsdWrite+2)^(__Lparam& (0+65280)),b
  3978  00222E  0E03               	movlw	3
  3979  002230  ECE8  F037         	call	_OsdWrite
  3980                           ;menu.c: 791: strcpy(s, "  Scanline    : ");
  3981  002234  0100               	movlb	__Lparam shr (0+8)
  3982  002236  0E65               	movlw	low _s
  3983  002238  6F46               	movwf	?_strcpy^(__Lparam& (0+65280)),b
  3984  00223A  0E03               	movlw	high _s
  3985  00223C  6F47               	movwf	(?_strcpy+1)^(__Lparam& (0+65280)),b
  3986  00223E  0EBD               	movlw	low u809
  3987  002240  6F48               	movwf	(?_strcpy+2)^(__Lparam& (0+65280)),b
  3988  002242  0E0B               	movlw	high u809
  3989  002244  6F49               	movwf	(?_strcpy+3)^(__Lparam& (0+65280)),b
  3990  002246  EC29  F03E         	call	_strcpy	;wreg free
  3991                           ;menu.c: 792: strcpy( &s[16], config_scanline_ms
      +                          g[config.scanline]);
  3992  00224A  0100               	movlb	__Lparam shr (0+8)
  3993  00224C  0E75               	movlw	low (_s+16)
  3994  00224E  6F46               	movwf	?_strcpy^(__Lparam& (0+65280)),b
  3995  002250  0E03               	movlw	high (_s+16)
  3996  002252  6F47               	movwf	(?_strcpy+1)^(__Lparam& (0+65280)),b
  3997  002254  C031  FFE8         	movff	_config+19,wreg
  3998  002258  0D02               	mullw	2
  3999  00225A  50F3               	movf	prodl,w,c
  4000  00225C  0F18               	addlw	low _config_scanline_msg
  4001  00225E  6EF6               	movwf	tblptrl,c
  4002  002260  50F4               	movf	prodh,w,c
  4003  002262  6EF7               	movwf	tblptrh,c
  4004  002264  0E09               	movlw	high _config_scanline_msg
  4005  002266  22F7               	addwfc	tblptrh,f,c
  4006  002268  0009               	tblrd		*+
  4007  00226A  FFFF               	dw	65535	; Nop inserted for errata
  4008  00226C  CFF5 F048          	movff	tablat,?_strcpy+2
  4009  002270  0009               	tblrd		*+
  4010  002272  FFFF               	dw	65535	; Nop inserted for errata
  4011  002274  CFF5 F049          	movff	tablat,?_strcpy+3
  4012  002278  EC29  F03E         	call	_strcpy	;wreg free
  4013                           ;menu.c: 793: OsdWrite(4, s, 2 == menusub);
  4014  00227C  0100               	movlb	__Lparam shr (0+8)
  4015  00227E  0E65               	movlw	low _s
  4016  002280  6F5D               	movwf	?_OsdWrite^(__Lparam& (0+65280)),b
  4017  002282  0E03               	movlw	high _s
  4018  002284  6F5E               	movwf	(?_OsdWrite+1)^(__Lparam& (0+65280)),b
  4019  002286  C364  FFE8         	movff	_menusub,wreg
  4020  00228A  0A02               	xorlw	2
  4021  00228C  0E00               	movlw	0
  4022  00228E  B4D8               	btfsc	status,2,c
  4023  002290  0E01               	movlw	1
  4024  002292  6F5F               	movwf	(?_OsdWrite+2)^(__Lparam& (0+65280)),b
  4025  002294  0E04               	movlw	4
  4026  002296  ECE8  F037         	call	_OsdWrite
  4027                           ;menu.c: 795: OsdWrite(7, "        exit", 3 == m
      +                          enusub);
  4028  00229A  0100               	movlb	__Lparam shr (0+8)
  4029  00229C  0E6D               	movlw	low u819
  4030  00229E  6F5D               	movwf	?_OsdWrite^(__Lparam& (0+65280)),b
  4031  0022A0  0E09               	movlw	high u819
  4032  0022A2  6F5E               	movwf	(?_OsdWrite+1)^(__Lparam& (0+65280)),b
  4033  0022A4  C364  FFE8         	movff	_menusub,wreg
  4034  0022A8  0A03               	xorlw	3
  4035  0022AA  0E00               	movlw	0
  4036  0022AC  B4D8               	btfsc	status,2,c
  4037  0022AE  0E01               	movlw	1
  4038  0022B0  6F5F               	movwf	(?_OsdWrite+2)^(__Lparam& (0+65280)),b
  4039  0022B2  0E07               	movlw	7
  4040  0022B4  ECE8  F037         	call	_OsdWrite
  4041                           ;menu.c: 798: menustate = MENU_SETTINGS_VIDEO2;
  4042  0022B8  0E10               	movlw	16
  4043  0022BA  EF1D  F009         	goto	L4
  4044                           ;menu.c: 799: break;
  4045  0022BE                     l178:
  4046                           ;menu.c: 801: case MENU_SETTINGS_VIDEO2:
  4047                           ;menu.c: 802: HandleUpDown(MENU_SETTINGS_VIDEO1,
      +                           3);
  4048  0022BE  0E03               	movlw	3
  4049  0022C0  0100               	movlb	__Lparam shr (0+8)
  4050  0022C2  6F46               	movwf	?_HandleUpDown^(__Lparam& (0+65280)),b
  4051  0022C4  0E0F               	movlw	15
  4052  0022C6  D914               	call	_HandleUpDown
  4053                           ;menu.c: 804: if (select)
  4054  0022C8  A80D               	btfss	_select/(0+8),_select& (0+7),c
  4055  0022CA  D03E               	goto	l179
  4056                           ;menu.c: 805: {
  4057  0022CC  0103               	movlb	_menusub shr (0+8)
  4058  0022CE  5364               	movf	_menusub& (0+255),f,b
  4059  0022D0  E10E               	bnz	l180
  4060                           ;menu.c: 807: {
  4061  0022D2  0100               	movlb	(_config+12) shr (0+8)
  4062  0022D4  2B2A               	incf	(_config+12)& (0+255),f,b
  4063                           ;menu.c: 809: config.filter_lores &= 0x03;
  4064  0022D6  0E03               	movlw	3
  4065  0022D8  172A               	andwf	(_config+12)& (0+255),f,b
  4066                           ;menu.c: 810: menustate = MENU_SETTINGS_VIDEO1;
  4067  0022DA  0E0F               	movlw	15
  4068  0022DC  CFE8 F357          	movff	wreg,_menustate
  4069                           ;menu.c: 811: ConfigFilter(config.filter_lores, 
      +                          config.filter_hires);
  4070  0022E0  C02B  F046         	movff	_config+13,?_ConfigFilter
  4071  0022E4  C02A  FFE8         	movff	_config+12,wreg
  4072  0022E8  EC4F  F039         	call	_ConfigFilter
  4073                           ;menu.c: 812: }
  4074  0022EC  D02D               	goto	l179
  4075  0022EE                     l180:
  4076                           ;menu.c: 813: else if (1 == menusub)
  4077  0022EE  C364  F000         	movff	_menusub,btemp
  4078  0022F2  0400               	decf	btemp,w,c
  4079  0022F4  E10E               	bnz	l182
  4080                           ;menu.c: 814: {
  4081  0022F6  0100               	movlb	(_config+13) shr (0+8)
  4082  0022F8  2B2B               	incf	(_config+13)& (0+255),f,b
  4083                           ;menu.c: 816: config.filter_hires &= 0x03;
  4084  0022FA  0E03               	movlw	3
  4085  0022FC  172B               	andwf	(_config+13)& (0+255),f,b
  4086                           ;menu.c: 817: menustate = MENU_SETTINGS_VIDEO1;
  4087  0022FE  0E0F               	movlw	15
  4088  002300  CFE8 F357          	movff	wreg,_menustate
  4089                           ;menu.c: 818: ConfigFilter(config.filter_lores, 
      +                          config.filter_hires);
  4090  002304  C02B  F046         	movff	_config+13,?_ConfigFilter
  4091  002308  C02A  FFE8         	movff	_config+12,wreg
  4092  00230C  EC4F  F039         	call	_ConfigFilter
  4093                           ;menu.c: 819: }
  4094  002310  D01B               	goto	l179
  4095  002312                     l182:
  4096                           ;menu.c: 820: else if (2 == menusub)
  4097  002312  C364  FFE8         	movff	_menusub,wreg
  4098  002316  0A02               	xorlw	2
  4099  002318  E10E               	bnz	l184
  4100                           ;menu.c: 821: {
  4101  00231A  0100               	movlb	(_config+19) shr (0+8)
  4102  00231C  2B31               	incf	(_config+19)& (0+255),f,b
  4103                           ;menu.c: 823: if (config.scanline > 2)
  4104  00231E  0E02               	movlw	2
  4105  002320  6531               	cpfsgt	(_config+19)& (0+255),b
  4106  002322  D001               	goto	l185
  4107                           ;menu.c: 824: { config.scanline = 0; }
  4108  002324  6B31               	clrf	(_config+19)& (0+255),b
  4109  002326                     l185:
  4110                           ;menu.c: 825: menustate = MENU_SETTINGS_VIDEO1;
  4111  002326  0E0F               	movlw	15
  4112  002328  CFE8 F357          	movff	wreg,_menustate
  4113                           ;menu.c: 826: ConfigScanline(config.scanline);
  4114  00232C  C031  FFE8         	movff	_config+19,wreg
  4115  002330  EC92  F039         	call	_ConfigScanline
  4116                           ;menu.c: 827: }
  4117  002334  D009               	goto	l179
  4118  002336                     l184:
  4119                           ;menu.c: 828: else if (3 == menusub)
  4120  002336  C364  FFE8         	movff	_menusub,wreg
  4121  00233A  0A03               	xorlw	3
  4122  00233C  E105               	bnz	l179
  4123                           ;menu.c: 829: {
  4124  00233E  0E0B               	movlw	11
  4125  002340  CFE8 F357          	movff	wreg,_menustate
  4126                           ;menu.c: 831: OsdClear();
  4127  002344  EC20  F039         	call	_OsdClear	;wreg free
  4128  002348                     l179:
  4129                           ;menu.c: 832: }
  4130  002348  A40D               	btfss	_menu/(0+8),_menu& (0+7),c
  4131  00234A  D009               	goto	l188
  4132                           ;menu.c: 836: {
  4133  00234C  0E0B               	movlw	11
  4134  00234E  CFE8 F357          	movff	wreg,_menustate
  4135                           ;menu.c: 838: menusub = 3;
  4136  002352  0E03               	movlw	3
  4137  002354  CFE8 F364          	movff	wreg,_menusub
  4138                           ;menu.c: 839: OsdClear();
  4139  002358  EC20  F039         	call	_OsdClear	;wreg free
  4140                           ;menu.c: 840: }
  4141  00235C  D0C4               	goto	l26
  4142  00235E                     l188:
  4143                           ;menu.c: 841: else if (right)
  4144  00235E  A60D               	btfss	_right/(0+8),_right& (0+7),c
  4145  002360  D008               	goto	l190
  4146                           ;menu.c: 842: {
  4147  002362  0E13               	movlw	19
  4148  002364  CFE8 F357          	movff	wreg,_menustate
  4149                           ;menu.c: 844: menusub = 0;
  4150  002368  0103               	movlb	_menusub shr (0+8)
  4151  00236A  6B64               	clrf	_menusub& (0+255),b
  4152                           ;menu.c: 845: OsdClear();
  4153  00236C  EC20  F039         	call	_OsdClear	;wreg free
  4154                           ;menu.c: 846: }
  4155  002370  D0BA               	goto	l26
  4156  002372                     l190:
  4157                           ;menu.c: 847: else if (left)
  4158  002372  A20D               	btfss	_left/(0+8),_left& (0+7),c
  4159  002374  D0B8               	goto	l26
  4160                           ;menu.c: 848: {
  4161  002376  0E15               	movlw	21
  4162  002378  CFE8 F357          	movff	wreg,_menustate
  4163                           ;menu.c: 850: menusub = 0;
  4164  00237C  0103               	movlb	_menusub shr (0+8)
  4165  00237E  6B64               	clrf	_menusub& (0+255),b
  4166                           ;menu.c: 851: OsdClear();
  4167  002380  EC20  F039         	call	_OsdClear	;wreg free
  4168                           ;menu.c: 852: }
  4169  002384  D0B0               	goto	l26
  4170  002386                     l193:
  4171                           ;menu.c: 858: case MENU_ROMFILESELECTED1:
  4172                           ;menu.c: 860: OsdWrite(0, "  Reload Kickstart?",
      +                           0);
  4173  002386  0100               	movlb	__Lparam shr (0+8)
  4174  002388  0E7F               	movlw	low u829
  4175  00238A  6F5D               	movwf	?_OsdWrite^(__Lparam& (0+65280)),b
  4176  00238C  0E0A               	movlw	high u829
  4177  00238E  6F5E               	movwf	(?_OsdWrite+1)^(__Lparam& (0+65280)),b
  4178  002390  6B5F               	clrf	(?_OsdWrite+2)^(__Lparam& (0+65280)),b
  4179  002392  0E00               	movlw	0
  4180  002394  ECE8  F037         	call	_OsdWrite
  4181                           ;menu.c: 861: OsdWrite(2, "         yes", 0 == m
      +                          enusub);
  4182  002398  0100               	movlb	__Lparam shr (0+8)
  4183  00239A  0EA3               	movlw	low u839
  4184  00239C  6F5D               	movwf	?_OsdWrite^(__Lparam& (0+65280)),b
  4185  00239E  0E09               	movlw	high u839
  4186  0023A0  6F5E               	movwf	(?_OsdWrite+1)^(__Lparam& (0+65280)),b
  4187  0023A2  0103               	movlb	_menusub shr (0+8)
  4188  0023A4  5364               	movf	_menusub& (0+255),f,b
  4189  0023A6  0E00               	movlw	0
  4190  0023A8  B4D8               	btfsc	status,2,c
  4191  0023AA  0E01               	movlw	1
  4192  0023AC  0100               	movlb	__Lparam shr (0+8)
  4193  0023AE  6F5F               	movwf	(?_OsdWrite+2)^(__Lparam& (0+65280)),b
  4194  0023B0  0E02               	movlw	2
  4195  0023B2  ECE8  F037         	call	_OsdWrite
  4196                           ;menu.c: 862: OsdWrite(3, "         no", 1 == me
      +                          nusub);
  4197  0023B6  0100               	movlb	__Lparam shr (0+8)
  4198  0023B8  0ED0               	movlw	low u849
  4199  0023BA  6F5D               	movwf	?_OsdWrite^(__Lparam& (0+65280)),b
  4200  0023BC  0E09               	movlw	high u849
  4201  0023BE  6F5E               	movwf	(?_OsdWrite+1)^(__Lparam& (0+65280)),b
  4202  0023C0  C364  F000         	movff	_menusub,btemp
  4203  0023C4  0400               	decf	btemp,w,c
  4204  0023C6  0E00               	movlw	0
  4205  0023C8  B4D8               	btfsc	status,2,c
  4206  0023CA  0E01               	movlw	1
  4207  0023CC  6F5F               	movwf	(?_OsdWrite+2)^(__Lparam& (0+65280)),b
  4208  0023CE  0E03               	movlw	3
  4209  0023D0  ECE8  F037         	call	_OsdWrite
  4210                           ;menu.c: 864: menustate = MENU_ROMFILESELECTED2;
  4211  0023D4  0E0E               	movlw	14
  4212  0023D6  EF1D  F009         	goto	L4
  4213                           ;menu.c: 865: break;
  4214  0023DA                     l194:
  4215                           ;menu.c: 867: case MENU_ROMFILESELECTED2 :
  4216                           ;menu.c: 868: HandleUpDown(MENU_ROMFILESELECTED1
      +                          , 1);
  4217  0023DA  0E01               	movlw	1
  4218  0023DC  0100               	movlb	__Lparam shr (0+8)
  4219  0023DE  6F46               	movwf	?_HandleUpDown^(__Lparam& (0+65280)),b
  4220  0023E0  0E0D               	movlw	13
  4221  0023E2  D886               	call	_HandleUpDown
  4222                           ;menu.c: 870: if (select)
  4223  0023E4  A80D               	btfss	_select/(0+8),_select& (0+7),c
  4224  0023E6  D059               	goto	l195
  4225                           ;menu.c: 871: {
  4226  0023E8  0103               	movlb	_menusub shr (0+8)
  4227  0023EA  5364               	movf	_menusub& (0+255),f,b
  4228  0023EC  E14A               	bnz	l196
  4229                           ;menu.c: 873: {
  4230  0023EE  C37E  FFE8         	movff	_dirptr,wreg
  4231  0023F2  0D1F               	mullw	31
  4232  0023F4  0E00               	movlw	low _directory
  4233  0023F6  24F3               	addwf	prodl,w,c
  4234  0023F8  6EE9               	movwf	fsr0l,c
  4235  0023FA  0E01               	movlw	high _directory
  4236  0023FC  20F4               	addwfc	prodh,w,c
  4237  0023FE  6EEA               	movwf	fsr0h,c
  4238  002400  50EF               	movf	indf0,w,c
  4239  002402  E03C               	bz	l197
  4240                           ;menu.c: 875: {
  4241  002404  0100               	movlb	__Lparam shr (0+8)
  4242  002406  0E1E               	movlw	low _config
  4243  002408  6FE0               	movwf	?_memcpy^(__Lparam& (0+65280)),b
  4244  00240A  0E00               	movlw	high _config
  4245  00240C  6FE1               	movwf	(?_memcpy+1)^(__Lparam& (0+65280)),b
  4246  00240E  C37E  FFE8         	movff	_dirptr,wreg
  4247  002412  0D1F               	mullw	31
  4248  002414  0E00               	movlw	low _directory
  4249  002416  24F3               	addwf	prodl,w,c
  4250  002418  6FE2               	movwf	(?_memcpy+2)^(__Lparam& (0+65280)),b
  4251  00241A  0E01               	movlw	high _directory
  4252  00241C  20F4               	addwfc	prodh,w,c
  4253  00241E  6FE3               	movwf	(?_memcpy+3)^(__Lparam& (0+65280)),b
  4254  002420  0E0C               	movlw	12
  4255  002422  6FE4               	movwf	(?_memcpy+4)^(__Lparam& (0+65280)),b
  4256  002424  6BE5               	clrf	(?_memcpy+5)^(__Lparam& (0+65280)),b
  4257  002426  ECC6  F03D         	call	_memcpy	;wreg free
  4258                           ;menu.c: 878: OsdDisable();
  4259  00242A  EC3E  F039         	call	_OsdDisable	;wreg free
  4260                           ;menu.c: 881: OsdReset(1);
  4261  00242E  0E01               	movlw	1
  4262  002430  EC44  F039         	call	_OsdReset
  4263                           ;menu.c: 882: ConfigChipset(config.chipset|0x01)
      +                          ;
  4264  002434  C02D  FFE8         	movff	_config+15,wreg
  4265  002438  0901               	iorlw	1
  4266  00243A  EC70  F039         	call	_ConfigChipset
  4267                           ;menu.c: 883: ConfigFloppy(1, 1);
  4268  00243E  0E01               	movlw	1
  4269  002440  0100               	movlb	__Lparam shr (0+8)
  4270  002442  6F46               	movwf	?_ConfigFloppy^(__Lparam& (0+65280)),b
  4271  002444  EC7B  F039         	call	_ConfigFloppy
  4272                           ;menu.c: 885: if (0 == UploadKickstart(config.ki
      +                          ckname))
  4273  002448  0100               	movlb	__Lparam shr (0+8)
  4274  00244A  0E1E               	movlw	low _config
  4275  00244C  6F46               	movwf	?_UploadKickstart^(__Lparam& (0+65280)),b
  4276  00244E  0E00               	movlw	high _config
  4277  002450  6F47               	movwf	(?_UploadKickstart+1)^(__Lparam& (0+65280
      +                          )),b
  4278  002452  EC4E  F02F         	call	_UploadKickstart	;wreg free
  4279  002456  6E00               	movwf	btemp,c
  4280  002458  C000  F002         	movff	btemp,btemp+2
  4281  00245C  6A03               	clrf	btemp+3,c
  4282  00245E  5003               	movf	btemp+3,w,c
  4283  002460  1002               	iorwf	btemp+2,w,c
  4284  002462  B4D8               	btfsc	status,2,c
  4285                           ;menu.c: 886: { BootExit(); }
  4286  002464  EC89  F031         	call	_BootExit	;wreg free
  4287                           ;menu.c: 888: ConfigChipset(config.chipset);
  4288  002468  C02D  FFE8         	movff	_config+15,wreg
  4289  00246C  EC70  F039         	call	_ConfigChipset
  4290                           ;menu.c: 889: ConfigFloppy(config.floppy_drives,
      +                           config.floppy_speed);
  4291  002470  C02E  F046         	movff	_config+16,?_ConfigFloppy
  4292  002474  C02F  FFE8         	movff	_config+17,wreg
  4293  002478  EC7B  F039         	call	_ConfigFloppy
  4294  00247C                     l197:
  4295                           ;menu.c: 890: }
  4296  00247C  0103               	movlb	_menustate shr (0+8)
  4297  00247E  6B57               	clrf	_menustate& (0+255),b
  4298                           ;menu.c: 892: }
  4299  002480  D00C               	goto	l195
  4300  002482                     l196:
  4301                           ;menu.c: 893: else if (1 == menusub)
  4302  002482  C364  F000         	movff	_menusub,btemp
  4303  002486  0400               	decf	btemp,w,c
  4304  002488  E108               	bnz	l195
  4305                           ;menu.c: 894: {
  4306  00248A  0E11               	movlw	17
  4307  00248C  CFE8 F357          	movff	wreg,_menustate
  4308                           ;menu.c: 896: menusub = 2;
  4309  002490  0E02               	movlw	2
  4310  002492  CFE8 F364          	movff	wreg,_menusub
  4311                           ;menu.c: 897: OsdClear();
  4312  002496  EC20  F039         	call	_OsdClear	;wreg free
  4313  00249A                     l195:
  4314                           ;menu.c: 898: }
  4315  00249A  A40D               	btfss	_menu/(0+8),_menu& (0+7),c
  4316  00249C  D024               	goto	l26
  4317                           ;menu.c: 902: {
  4318  00249E  0E11               	movlw	17
  4319  0024A0  CFE8 F357          	movff	wreg,_menustate
  4320                           ;menu.c: 904: menusub = 2;
  4321  0024A4  0E02               	movlw	2
  4322  0024A6  CFE8 F364          	movff	wreg,_menusub
  4323                           ;menu.c: 905: OsdClear();
  4324  0024AA  EC20  F039         	call	_OsdClear	;wreg free
  4325                           ;menu.c: 906: }
  4326  0024AE  D01B               	goto	l26
  4327  0024B0                     l202:
  4328                           ;menu.c: 912: case MENU_ERROR:
  4329                           ;menu.c: 913: if (menu)
  4330  0024B0  A40D               	btfss	_menu/(0+8),_menu& (0+7),c
  4331  0024B2  D019               	goto	l26
  4332  0024B4  EF07  F009         	goto	u180
  4333                           ;menu.c: 914: {
  4334                           ;menu.c: 916: }
  4335  0024B8                     l204:
  4336                           ;menu.c: 922: default:
  4337                           ;menu.c: 923: break;
  4338  0024B8  D016               	goto	l26
  4339  0024BA                     l27:
  4340  0024BA  C357  FFE8         	movff	_menustate,wreg
  4341  0024BE  0F00               	addlw	0
  4342  0024C0  E6FB               	bmi	l204
  4343  0024C2  0FE5               	addlw	-27
  4344  0024C4  E7F9               	bnn	l204
  4345  0024C6  0F1B               	addlw	27
  4346  0024C8  0D02               	mullw	2
  4347  0024CA  0E1E               	movlw	low S30004
  4348  0024CC  24F3               	addwf	prodl,w,c
  4349  0024CE  6EF6               	movwf	tblptrl,c
  4350  0024D0  0E09               	movlw	high S30004
  4351  0024D2  20F4               	addwfc	prodh,w,c
  4352  0024D4  6EF7               	movwf	tblptrh,c
  4353  0024D6  0009               	tblrd		*+
  4354  0024D8  FFFF               	dw	65535	; Nop inserted for errata
  4355  0024DA  50F5               	movf	tablat,w,c
  4356  0024DC  0009               	tblrd		*+
  4357  0024DE  FFFF               	dw	65535	; Nop inserted for errata
  4358  0024E0  CFF5 FFFA          	movff	tablat,pclath
  4359  0024E4  6EF9               	movwf	pcl,c
  4360  0024E6                     l26:
  4361                           ;menu.c: 925: }
  4362  0024E6  0012               	return	
  4363  0024E8  FFFF               	dw	65535	; Nop inserted for errata
  4364  0024EA  EF00  F008         	goto	f4052
  4365  0024EE                     __end_of_HandleUI:
  4366                           ;menu.c: 929: void HandleUpDown(unsigned char st
      +                          ate, unsigned char max)
  4367                           ;menu.c: 930: {
  4368  0024EE  0046               	dw	?_HandleUpDown
  4369  0024F0                     _HandleUpDown:
  4370                           ; errata NOP at function entry point
  4371  0024F0  FFFF               	dw	65535
  4372  0024F2                     f4472:
  4373  000000                     
  4374                           ; _state loaded to fsr2l
  4375  0024F2  6ED9               	movwf	fsr2l,c
  4376                           ;menu.c: 931: if (down && menusub < max)
  4377  0024F4  A00D               	btfss	_down/(0+8),_down& (0+7),c
  4378  0024F6  D009               	goto	l206
  4379  0024F8  0100               	movlb	__Lparam shr (0+8)
  4380  0024FA  5146               	movf	?_HandleUpDown^(__Lparam& (0+65280)),w
  4381  0024FC  0103               	movlb	_menusub shr (0+8)
  4382  0024FE  6164               	cpfslt	_menusub& (0+255),b
  4383  002500  D004               	goto	l206
  4384                           ;menu.c: 932: {
  4385  002502  0E01               	movlw	1
  4386  002504  2B64               	incf	_menusub& (0+255),f,b
  4387                           ;menu.c: 934: menustate = state;
  4388  002506  CFD9 F357          	movff	fsr2l,_menustate
  4389  00250A                     l206:
  4390                           ;menu.c: 935: }
  4391  00250A  AA0D               	btfss	_up/(0+8),_up& (0+7),c
  4392  00250C  D007               	goto	l207
  4393  00250E  0103               	movlb	_menusub shr (0+8)
  4394  002510  5364               	movf	_menusub& (0+255),f,b
  4395  002512  E004               	bz	l207
  4396                           ;menu.c: 938: {
  4397  002514  0E01               	movlw	1
  4398  002516  0764               	decf	_menusub& (0+255),f,b
  4399                           ;menu.c: 940: menustate = state;
  4400  002518  CFD9 F357          	movff	fsr2l,_menustate
  4401  00251C                     l207:
  4402                           ;menu.c: 941: }
  4403  00251C  0012               	return	
  4404  00251E  FFFF               	dw	65535	; Nop inserted for errata
  4405  002520  D7E8               	goto	f4472
  4406  002522                     __end_of_HandleUpDown:
  4407                           ;menu.c: 945: void SelectFile(const char* extens
      +                          ion, unsigned char selectedState, unsigned char 
      +                          exitState, unsigned char allowDirectorySelect)
  4408                           ;menu.c: 946: {
  4409  002522  0046               	dw	?_SelectFile
  4410  002524                     _SelectFile:
  4411                           ; errata NOP at function entry point
  4412  002524  FFFF               	dw	65535
  4413  002526                     f4482:
  4414  000000                     
  4415                           ;menu.c: 948: fbFileExt = extension;
  4416  002526  C046  F018         	movff	?_SelectFile,_fbFileExt
  4417  00252A  C047  F019         	movff	?_SelectFile+1,_fbFileExt+1
  4418                           ;menu.c: 949: fbSelectedState = selectedState;
  4419  00252E  C048  F363         	movff	?_SelectFile+2,_fbSelectedState
  4420                           ;menu.c: 950: fbExitState = exitState;
  4421  002532  C049  F362         	movff	?_SelectFile+3,_fbExitState
  4422                           ;menu.c: 951: fbAllowDirectorySelect = allowDire
      +                          ctorySelect;
  4423  002536  C04A  F361         	movff	?_SelectFile+4,_fbAllowDirectorySelect
  4424                           ;menu.c: 954: ScrollDir(fbFileExt, 0);
  4425  00253A  C018  F04B         	movff	_fbFileExt,?_ScrollDir
  4426  00253E  C019  F04C         	movff	_fbFileExt+1,?_ScrollDir+1
  4427  002542  0100               	movlb	__Lparam shr (0+8)
  4428  002544  6B4D               	clrf	(?_ScrollDir+2)^(__Lparam& (0+65280)),b
  4429  002546  ECB9  F000         	call	_ScrollDir	;wreg free
  4430                           ;menu.c: 957: menustate = MENU_FILE1;
  4431  00254A  0E06               	movlw	6
  4432  00254C  CFE8 F357          	movff	wreg,_menustate
  4433                           ;menu.c: 958: OsdClear();
  4434  002550  EF20  F039         	goto	_OsdClear	;wreg free
  4435                           ;menu.c: 959: }
  4436  002554  FFFF               	dw	65535	; Nop inserted for errata
  4437  002556  D7E7               	goto	f4482
  4438  002558                     __end_of_SelectFile:
  4439                           ;menu.c: 963: void ErrorMessage(const char* mess
      +                          age, unsigned char code)
  4440                           ;menu.c: 964: {
  4441  002558  004C               	dw	?_ErrorMessage
  4442  00255A                     _ErrorMessage:
  4443                           ; errata NOP at function entry point
  4444  00255A  FFFF               	dw	65535
  4445  00255C                     f4492:
  4446  000000                     
  4447                           ;menu.c: 965: unsigned char i;
  4448  00255C  0E17               	movlw	23
  4449  00255E  CFE8 F357          	movff	wreg,_menustate
  4450                           ;menu.c: 967: OsdClear();
  4451  002562  EC20  F039         	call	_OsdClear	;wreg free
  4452                           ;menu.c: 968: OsdWrite(0,"    *** ERROR ***",1);
  4453  002566  0100               	movlb	__Lparam shr (0+8)
  4454  002568  0ECE               	movlw	low u859
  4455  00256A  6F5D               	movwf	?_OsdWrite^(__Lparam& (0+65280)),b
  4456  00256C  0E0A               	movlw	high u859
  4457  00256E  6F5E               	movwf	(?_OsdWrite+1)^(__Lparam& (0+65280)),b
  4458  002570  0E01               	movlw	1
  4459  002572  6F5F               	movwf	(?_OsdWrite+2)^(__Lparam& (0+65280)),b
  4460  002574  0E00               	movlw	0
  4461  002576  ECE8  F037         	call	_OsdWrite
  4462                           ;menu.c: 969: strncpy(s,message,21);
  4463  00257A  0100               	movlb	__Lparam shr (0+8)
  4464  00257C  0E65               	movlw	low _s
  4465  00257E  6F5D               	movwf	?_strncpy^(__Lparam& (0+65280)),b
  4466  002580  0E03               	movlw	high _s
  4467  002582  6F5E               	movwf	(?_strncpy+1)^(__Lparam& (0+65280)),b
  4468  002584  C04C  F05F         	movff	?_ErrorMessage,?_strncpy+2
  4469  002588  C04D  F060         	movff	?_ErrorMessage+1,?_strncpy+3
  4470  00258C  0E15               	movlw	21
  4471  00258E  6F61               	movwf	(?_strncpy+4)^(__Lparam& (0+65280)),b
  4472  002590  6B62               	clrf	(?_strncpy+5)^(__Lparam& (0+65280)),b
  4473  002592  EC4A  F03D         	call	_strncpy	;wreg free
  4474                           ;menu.c: 970: s[21] = 0;
  4475  002596  0103               	movlb	(_s+21) shr (0+8)
  4476  002598  6B7A               	clrf	(_s+21)& (0+255),b
  4477                           ;menu.c: 971: OsdWrite(2,s,0);
  4478  00259A  0100               	movlb	__Lparam shr (0+8)
  4479  00259C  0E65               	movlw	low _s
  4480  00259E  6F5D               	movwf	?_OsdWrite^(__Lparam& (0+65280)),b
  4481  0025A0  0E03               	movlw	high _s
  4482  0025A2  6F5E               	movwf	(?_OsdWrite+1)^(__Lparam& (0+65280)),b
  4483  0025A4  6B5F               	clrf	(?_OsdWrite+2)^(__Lparam& (0+65280)),b
  4484  0025A6  0E02               	movlw	2
  4485  0025A8  ECE8  F037         	call	_OsdWrite
  4486                           ;menu.c: 972: if (code)
  4487  0025AC  0100               	movlb	__Lparam shr (0+8)
  4488  0025AE  514E               	movf	(?_ErrorMessage+2)^(__Lparam& (0+65280)),w
  4489  0025B0  E020               	bz	l210
  4490                           ;menu.c: 973: {
  4491  0025B2  0E65               	movlw	low _s
  4492  0025B4  6F53               	movwf	(?_sprintf+2)^(__Lparam& (0+65280)),b
  4493  0025B6  0E03               	movlw	high _s
  4494  0025B8  6F54               	movwf	(?_sprintf+3)^(__Lparam& (0+65280)),b
  4495  0025BA  0E24               	movlw	low u869
  4496  0025BC  6F55               	movwf	(?_sprintf+4)^(__Lparam& (0+65280)),b
  4497  0025BE  0E0A               	movlw	high u869
  4498  0025C0  6F56               	movwf	(?_sprintf+5)^(__Lparam& (0+65280)),b
  4499  0025C2  C04E  F000         	movff	?_ErrorMessage+2,btemp
  4500  0025C6  6A01               	clrf	btemp+1,c
  4501  0025C8  C000  F04F         	movff	btemp,?a_ErrorMessage
  4502  0025CC  C001  F050         	movff	btemp+1,?a_ErrorMessage+1
  4503  0025D0  0E4F               	movlw	low ?a_ErrorMessage
  4504  0025D2  CFE8 F051          	movff	wreg,?_sprintf
  4505  0025D6  0E00               	movlw	high ?a_ErrorMessage
  4506  0025D8  CFE8 F052          	movff	wreg,?_sprintf+1
  4507  0025DC  EC2F  F032         	call	_sprintf	;wreg free
  4508                           ;menu.c: 975: OsdWrite(4,s,0);
  4509  0025E0  0100               	movlb	__Lparam shr (0+8)
  4510  0025E2  0E65               	movlw	low _s
  4511  0025E4  6F5D               	movwf	?_OsdWrite^(__Lparam& (0+65280)),b
  4512  0025E6  0E03               	movlw	high _s
  4513  0025E8  6F5E               	movwf	(?_OsdWrite+1)^(__Lparam& (0+65280)),b
  4514  0025EA  6B5F               	clrf	(?_OsdWrite+2)^(__Lparam& (0+65280)),b
  4515  0025EC  0E04               	movlw	4
  4516  0025EE  ECE8  F037         	call	_OsdWrite
  4517  0025F2                     l210:
  4518                           ;menu.c: 976: }
  4519  0025F2  EF38  F039         	goto	_OsdEnable	;wreg free
  4520                           ;menu.c: 978: }
  4521  0025F6  FFFF               	dw	65535	; Nop inserted for errata
  4522  0025F8  D7B1               	goto	f4492
  4523  0025FA                     __end_of_ErrorMessage:
  4524                           
  4525                           	psect	rbit
  4526  000068                     _down:
  4527  000068                     	ds	1
  4528  000068                     _left:
  4529  000068                     	ds	1
  4530  000068                     _menu:
  4531  000068                     	ds	1
  4532  000068                     _right:
  4533  000068                     	ds	1
  4534  000068                     _select:
  4535  000068                     	ds	1
  4536  000068                     _up:
  4537  000068                     	ds	1
  4538  000000                     
  4539  000000                     
  4540  000000                     
  4541  000000                     
  4542  000000                     
  4543  000000                     
  4544  000000                     
  4545  000000                     
  4546  000000                     
  4547  000000                     
  4548  000000                     
  4549  000000                     
  4550  000000                     
  4551  000000                     
  4552  000000                     
  4553  000000                     
  4554  000000                     
  4555  000000                     
  4556  000000                     
  4557  000000                     
  4558  000000                     
  4559  000000                     
  4560  000000                     
  4561  000000                     
  4562  000000                     
  4563  000000                     
  4564  000000                     
  4565  000000                     
  4566  000000                     
  4567  000000                     
  4568  000000                     
  4569  000000                     
  4570  000000                     
  4571  000000                     
  4572  000000                     
  4573  000000                     
  4574  000000                     
  4575  000000                     
  4576  000000                     
  4577  000000                     
  4578  000000                     
  4579  000000                     
  4580  000000                     
  4581  000000                     
  4582  000000                     
  4583  000000                     
  4584  000000                     
  4585  000000                     
  4586  000000                     
  4587  000000                     
  4588  000000                     
  4589  000000                     
  4590  000000                     
  4591  000000                     
  4592  000000                     
  4593  000000                     
  4594  000000                     
  4595  000000                     
  4596  000000                     
  4597  000000                     
  4598  000000                     
  4599  000000                     
  4600  000000                     
  4601  000000                     
  4602  000000                     
  4603  000000                     
  4604  000000                     
  4605  000000                     
  4606  000000                     
  4607  000000                     
  4608  000000                     
  4609  000000                     
  4610  000000                     
  4611  000000                     
  4612  000000                     
  4613  000000                     
  4614  000000                     
  4615  000000                     
  4616  000000                     
  4617  000000                     
  4618  000000                     
  4619  000000                     
  4620  000000                     
  4621  000000                     
  4622  000000                     
  4623  000000                     
  4624  000000                     
  4625  000000                     
  4626  000000                     
  4627  000000                     
  4628  000000                     
  4629  000000                     
  4630  000000                     
  4631  000000                     
  4632  000000                     
  4633                           
  4634                           	psect	bigbss
  4635  000361                     _fbAllowDirectorySelect:
  4636  000361                     	ds	1
  4637  000361                     _fbExitState:
  4638  000361                     	ds	1
  4639  000361                     _fbSelectedState:
  4640  000361                     	ds	1
  4641  000361                     _menusub:
  4642  000361                     	ds	1
  4643  000000                     
  4644  000000                     
  4645  000000                     
  4646  000000                     
  4647  000000                     
  4648  000000                     
  4649  000000                     
  4650                           
  4651                           	psect	bss
  4652  000018                     _fbFileExt:
  4653  000018                     	ds	2
  4654                           
  4655                           	psect	temp
  4656  000000                     btemp:
  4657  000000                     	ds	4
  4658                           pclath	equ	0xFFA
  4659                           pcl	equ	0xFF9
  4660                           tblptrh	equ	0xFF7
  4661                           tblptrl	equ	0xFF6
  4662                           tablat	equ	0xFF5
  4663                           prodh	equ	0xFF4
  4664                           prodl	equ	0xFF3
  4665                           indf0	equ	0xFEF
  4666                           fsr0h	equ	0xFEA
  4667                           fsr0l	equ	0xFE9
  4668                           wreg	equ	0xFE8
  4669                           fsr2l	equ	0xFD9
  4670                           status	equ	0xFD8


HI-TECH Software PICC-18 Macro Assembler V9.51PL2
Symbol Table                                           Mon Dec 07 22:12:01 2009

                  ?_ConfigFilter 0046                         _OsdWrite 6FD0  
                  ?_ConfigFloppy 0046                       _SelectFile 2524  
                      ?_OsdWrite 005D                                _s 0365  
             __end_of_SelectFile 2558                         _PrintDir 0072  
                     ?a_HandleUI 0040                               l31 108C  
                             l40 1216                               l32 10A2  
                             l50 1280                               l42 1242  
                             l26 24E6                               l43 1222  
                             l35 10F4                               l27 24BA  
                             l60 1388                               l36 11C0  
                             l28 1068                               l61 13CA  
                             l53 12F0                               l37 11AA  
                             l29 1070                               l70 13E6  
                             l62 13AA                               l46 126A  
                      _ScrollDir 0172                               l71 13EE  
                             l47 1250                               l39 120A  
                             l80 14AC                               l72 1410  
                             l64 13BE                               l81 14B8  
                             l73 1444                               l74 1428  
                             l58 12FE                               l83 14CE  
                             l59 1318                               l92 163E  
                             l84 1520                               l93 16DA  
                             l85 1540                               l77 14BC  
                             l94 1660                               l87 1564  
                             l79 14B4                               l96 1678  
                             l88 160C                               l89 163A  
                             l98 1690                               u50 1030  
                             u19 09FB                               u29 0B12  
                             u39 0B17                               u49 0B0D  
                             u59 0A6A                               u69 0A78  
                             u79 0A63                               u89 0A71  
                             u99 0BE4                               _df 0202  
                             _up 006D                               pcl 000FF9  
                _UploadKickstart 5E9C           _config_memory_chip_msg 0908  
                 _ConfigScanline 7324                       ?_ScrollDir 004B  
                            l100 16A8                              l102 16C0  
                            l111 1890                              l121 1908  
                            l113 18AE                              l210 25F2  
                            l202 24B0                              l130 1B82  
                            l122 1AC8                              l106 16F2  
                            l123 1B9A                              l107 1846  
                            l204 24B8                              l140 1E66  
                            l124 1B08                              l116 18DA  
                            l108 18C4                              l141 1DD4  
                            l133 1BB2                              l109 1872  
                            l206 250A                              l142 1DC0  
                            l126 1B3C                              l118 18F0  
                            l207 251C                              l151 1E7C  
                            l135 1BC8                              l160 1FCC  
                            l144 1DF8                              l128 1B6C  
                            l161 1FE2                              l153 1E90  
                            l170 20D6                              l162 204E  
                            l146 1E36                              l138 1BE0  
                            l163 20E8                              l139 1DA0  
                            l180 22EE                              l164 207C  
                            l156 1EA4                              l148 1E4E  
                            l157 1EBA                              l190 2372  
                            l182 2312                              l174 20F8  
                            l175 2110                              l167 20A0  
                            l184 2336                              l176 2128  
                            l193 2386                              l185 2326  
                            l177 2156                              l194 23DA  
                            l178 22BE                              l195 249A  
                            l179 2348                              l196 2482  
                            l188 235E                              l197 247C  
                    ?_SelectFile 0046                              u109 0A6A  
                            u119 0A78                              u209 0A56  
                            u129 0A63                              u219 0A5A  
                            u139 09F7                              u180 120E  
                            u309 09D0                              u229 0BEB  
                            u149 09E8                              u166 1194  
                            u319 0AE0                              u239 096D  
                            u159 09F3                              u409 0B83  
                            u329 097A                              u249 0ABB  
                            u169 0BFB                              u419 0AF2  
                            u339 095D                              u259 0994  
                            u179 0B57                              u509 0C25  
                            u429 0954                              u349 09B0  
                            u269 0988                              u189 0A13  
                            u550 1556                              u519 0B90  
                            u439 0B6C                              u359 09DC  
                            u279 096D                              u199 0AA6  
                            u609 0BCE                              u529 0B79  
                            u449 0BDD                              u369 0C64  
                            u289 0A93                              u619 0AFC  
                            u539 0BA9                              u459 09EC  
                            u379 0C78                              u299 09A3  
                            u716 17F2                              u709 0B21  
                            u629 096A                              u549 0BB3  
                            u469 0B5F                              u389 096D  
                            u719 0A1C                              u639 0B9A  
                            u559 0B04                              u479 0A5E  
                            u399 0C10                              u816 1A72  
                            u809 0BBD                              u729 0A13  
                            u649 0B00                              u569 0A13  
                            u489 0B1C                              u819 096D  
                            u739 0A52                              u659 09F7  
                            u579 096D                              u499 096D  
                            u676 1732                              u829 0A7F  
                            u749 09BD                              u669 0A30  
                            u589 0C3A                              u926 1C78  
                            u839 09A3                              u759 0A00  
                            u679 096D                              u599 0A41  
                            u696 1792                              u849 09D0  
                            u769 096D                              u689 0AA8  
                            u946 1CDA                              u859 0ACE  
                            u779 0C4F                              u699 0B4D  
                            u869 0A24                              u789 0B2B  
                            u799 0B3C                 ?_UploadKickstart 0046  
                            _hdf 0300                              wreg 000FE8  
                      _fbFileExt 0018                             f4052 1000  
                           f4053 0046                             f4472 24F2  
                           f4482 2526                             f4492 255C  
                           f4493 0051                             u1106 1F26  
                           u1115 1F52                             u1220 20B0  
                           u1135 2010                             u1066 1ED0  
                           u1086 1F0A                             _file 029E  
                           _left 0069                             _down 0068  
                           _menu 006A                             _pdfx 0200  
                           indf0 000FEF                             fsr0l 000FE9  
                           fsr2l 000FD9                             btemp 0000  
                           prodh 000FF4                             prodl 000FF3  
         _config_memory_slow_msg 0910                        _defRomExt 0F0A  
                  ?_OpenHardfile 0046                            S30004 091E  
                        ?_memcpy 00E0                        structcopy 7DFE  
                        ?_strcat 0046                          ?_strcpy 0046  
                      _directory 0100                       used_btemp0 0001  
                     used_btemp1 0001                       used_btemp2 0001  
                     used_btemp3 0001                _SaveConfiguration 757A  
               __end_of_HandleUI 24EE                            _right 006B  
                 _defHardDiskExt 0F0E                            pclath 000FFA  
                          tablat 000FF5                            status 000FD8  
                 ?_OpenDirectory 0046                        _menustate 0357  
                  _ConfigChipset 72E0                     _HandleUpDown 24F0  
                        __Lparam 0037                     _ErrorMessage 255A  
            _config_scanline_msg 0918             __end_of_HandleUpDown 2522  
           __end_of_ErrorMessage 25FA                          __ramtop 0600  
                        _menusub 0364                _OpenRootDirectory 2A54  
                        _sprintf 645E                _config_filter_msg 0900  
                        _strncat 7B18                         ?_sprintf 0051  
                        _strncpy 7A94                         ?_strncat 0046  
                       ?_strncpy 005D                   ?a_ErrorMessage 004F  
                   _defFloppyExt 0F06                      _fbExitState 0362  
                   _InsertFloppy 40E2                    ?_HandleUpDown 0046  
                   _ConfigFilter 729E                     _ConfigFloppy 72F6  
                   _ConfigMemory 72CC                    ?_ErrorMessage 004C  
                _fbSelectedState 0363               ?_OpenRootDirectory 0048  
                         _config 001E                           _dirptr 037E  
                         _memcpy 7B8C                           _select 006C  
                         _strcat 7BF8                           _strcpy 7C52  
                      _ConfigIDE 733A                       ?_ConfigIDE 0046  
                         tblptrh 000FF7                           tblptrl 000FF6  
                     _currentDir 027F                         _HandleUI 0FFE  
                       _BootExit 6312                      _GetASCIIKey 7408  
                     _OsdGetCtrl 7370                       _OsdDisable 727C  
                      _OsdEnable 7270                    _OpenDirectory 2ADA  
                       _OsdClear 7240                     _OpenHardfile 5BE8  
                  ?_InsertFloppy 0046           _fbAllowDirectorySelect 0361  
                       _OsdReset 7288  
